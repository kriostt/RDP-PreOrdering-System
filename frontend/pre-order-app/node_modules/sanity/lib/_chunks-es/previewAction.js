import path from "path";
import { s as startPreviewServer } from "./previewServer.js";
import "chalk";
import "vite";
import "./runtime.js";
import "@vitejs/plugin-react";
import "debug";
import "read-pkg-up";
import "@sanity/cli";
import "resolve-from";
import "connect-history-api-fallback";
import "fs";
import "fs/promises";
import { g as gracefulServerDeath, a as getSharedServerConfig } from "./servers.js";
async function startSanityPreviewServer(args, context) {
  const flags = args.extOptions, { workDir, cliConfig } = context, defaultRootDir = path.resolve(path.join(workDir, "dist")), rootDir = path.resolve(args.argsWithoutOptions[0] || defaultRootDir), config = getPreviewServerConfig({ flags, workDir, cliConfig, rootDir });
  try {
    await startPreviewServer(config);
  } catch (err) {
    gracefulServerDeath("preview", config.httpHost, config.httpPort, err);
  }
}
function getPreviewServerConfig({
  flags,
  workDir,
  cliConfig,
  rootDir
}) {
  return {
    ...getSharedServerConfig({ flags, workDir, cliConfig }),
    root: rootDir
  };
}
export {
  startSanityPreviewServer as default
};
//# sourceMappingURL=previewAction.js.map
