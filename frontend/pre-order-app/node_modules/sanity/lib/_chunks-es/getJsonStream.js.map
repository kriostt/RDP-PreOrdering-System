{"version":3,"file":"getJsonStream.js","sources":["../../src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","../../src/ui-components/button/Button.tsx","../../src/ui-components/dialog/Dialog.tsx","../../src/ui-components/menuButton/MenuButton.tsx","../../src/ui-components/menuGroup/MenuGroup.tsx","../../src/ui-components/menuItem/MenuItem.tsx","../../src/ui-components/popover/Popover.tsx","../../src/ui-components/tab/Tab.tsx","../../src/ui-components/tooltip/constants.ts","../../src/ui-components/tooltip/Tooltip.tsx","../../src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx","../../src/core/i18n/LocaleContext.ts","../../src/core/i18n/hooks/useLocale.ts","../../src/core/form/inputs/DateInputs/base/calendar/CalendarDay.tsx","../../src/core/form/inputs/DateInputs/base/calendar/constants.ts","../../src/core/form/inputs/DateInputs/base/calendar/utils.ts","../../src/core/form/inputs/DateInputs/base/calendar/CalendarMonth.tsx","../../src/core/form/inputs/DateInputs/base/calendar/features.ts","../../src/core/form/inputs/DateInputs/base/LazyTextInput.tsx","../../src/core/form/inputs/DateInputs/base/calendar/YearInput.tsx","../../src/core/form/inputs/DateInputs/base/calendar/Calendar.tsx","../../src/core/form/inputs/DateInputs/base/DatePicker.tsx","../../src/core/form/inputs/DateInputs/utils.ts","../../src/core/store/_legacy/history/history/getJsonStream.ts"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport styled from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {type ComponentProps, forwardRef} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: React.ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<React.HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport type * as React from 'react'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex'>,\n) => {\n  return <UIMenuGroup {...props} fontSize={1} padding={3} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  Hotkeys,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {createElement, forwardRef, isValidElement, useCallback, useMemo} from 'react'\nimport {isValidElementType} from 'react-is'\nimport styled from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: React.ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: React.JSX.Element) => React.ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon,\n    iconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'\n    >,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(icon) && icon}\n              {isValidElementType(icon) && createElement(icon)}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || iconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {iconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(iconRight) && iconRight}\n                {isValidElementType(iconRight) && createElement(iconRight)}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    iconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<React.HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  Flex,\n  Hotkeys,\n  type HotkeysProps,\n  Text,\n  Tooltip as UITooltip,\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n","import {type i18n} from 'i18next'\nimport {createContext} from 'react'\n\nimport {type Locale} from './types'\n\n/**\n * @internal\n * @hidden\n */\nexport const LocaleContext = createContext<LocaleContextValue | undefined>(undefined)\n\n/**\n * @internal\n * @hidden\n */\nexport interface LocaleContextValue {\n  locales: Locale[]\n  currentLocale: Locale\n  __internal: {i18next: i18n}\n  changeLocale: (newLocale: string) => Promise<void>\n}\n","import {useContext} from 'react'\n\nimport {LocaleContext, type LocaleContextValue} from '../LocaleContext'\nimport {type Locale} from '../types'\n\n/**\n * Returns the currently active locale\n *\n * @public\n */\nexport function useCurrentLocale(): Locale {\n  return useLocale().currentLocale\n}\n\n/**\n * @hidden\n * @internal\n */\nexport function useLocale(): LocaleContextValue {\n  const context = useContext(LocaleContext)\n  if (!context) {\n    throw new Error(\n      'Sanity LocaleContext value missing. Is this hook being used outside LocaleContext.Provider?',\n    )\n  }\n\n  return context\n}\n","import {Card, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\n\ninterface CalendarDayProps {\n  date: Date\n  focused?: boolean\n  onSelect: (date: Date) => void\n  isCurrentMonth?: boolean\n  isToday: boolean\n  selected?: boolean\n}\n\nexport function CalendarDay(props: CalendarDayProps) {\n  const {date, focused, isCurrentMonth, isToday, onSelect, selected} = props\n\n  const handleClick = useCallback(() => {\n    onSelect(date)\n  }, [date, onSelect])\n\n  return (\n    <div aria-selected={selected} data-ui=\"CalendarDay\">\n      <Card\n        aria-label={date.toDateString()}\n        aria-pressed={selected}\n        as=\"button\"\n        __unstable_focusRing\n        data-weekday\n        data-focused={focused ? 'true' : ''}\n        role=\"button\"\n        tabIndex={-1}\n        onClick={handleClick}\n        padding={2}\n        radius={2}\n        selected={selected}\n        tone={isToday || selected ? 'primary' : 'default'}\n      >\n        <Text\n          muted={!selected && !isCurrentMonth}\n          size={1}\n          style={{textAlign: 'center'}}\n          weight={isCurrentMonth ? 'medium' : 'regular'}\n        >\n          {date.getDate()}\n        </Text>\n      </Card>\n    </div>\n  )\n}\n","import {range} from 'lodash'\n\nexport const DEFAULT_MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n]\n\nexport const DEFAULT_WEEK_DAY_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nexport const HOURS_24 = range(0, 24)\n\nexport const ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n\nexport const DEFAULT_TIME_PRESETS = [\n  [0, 0],\n  [6, 0],\n  [12, 0],\n  [18, 0],\n  [23, 59],\n]\n\n// all weekdays except first\nexport const TAIL_WEEKDAYS = [1, 2, 3, 4, 5, 6]\n","import {addDays, eachWeekOfInterval, getWeek, lastDayOfMonth, startOfMonth} from 'date-fns'\n\nimport {useCurrentLocale} from '../../../../../i18n/hooks/useLocale'\nimport {TAIL_WEEKDAYS} from './constants'\n\n/**\n * NOTE: `weekStartsOn` uses 1 for Monday, 7 for Sunday. date-fns wants 0 for Sunday, 6 for Saturday.\n */\nconst getWeekStartsOfMonth = (date: Date, weekStartsOn: 1 | 2 | 3 | 4 | 5 | 6 | 7): Date[] => {\n  const firstDay = startOfMonth(date)\n  return eachWeekOfInterval(\n    {\n      start: firstDay,\n      end: lastDayOfMonth(firstDay),\n    },\n    {\n      weekStartsOn: weekStartsOn === 7 ? 0 : weekStartsOn,\n    },\n  )\n}\n\nconst getWeekDaysFromWeekStarts = (weekStarts: Date[]): Date[][] => {\n  return weekStarts.map((weekStart) => [\n    weekStart,\n    ...TAIL_WEEKDAYS.map((d) => addDays(weekStart, d)),\n  ])\n}\n\ntype Week = {\n  number: number\n  days: Date[]\n}\n\nexport const useWeeksOfMonth = (date: Date): Week[] => {\n  const {weekInfo} = useCurrentLocale()\n  return getWeekDaysFromWeekStarts(getWeekStartsOfMonth(date, weekInfo.firstDay)).map(\n    (days): Week => ({\n      number: getWeek(days[0]),\n      days,\n    }),\n  )\n}\n\nexport const formatTime = (hours: number, minutes: number): string =>\n  `${`${hours}`.padStart(2, '0')}:${`${minutes}`.padStart(2, '0')}`\n","import {Box, Grid, Text} from '@sanity/ui'\nimport {isSameDay, isSameMonth} from 'date-fns'\n\nimport {useCurrentLocale} from '../../../../../i18n/hooks/useLocale'\nimport {CalendarDay} from './CalendarDay'\nimport {useWeeksOfMonth} from './utils'\n\ninterface CalendarMonthProps {\n  date: Date\n  focused?: Date\n  selected?: Date\n  onSelect: (date: Date) => void\n  hidden?: boolean\n  weekDayNames: [\n    mon: string,\n    tue: string,\n    wed: string,\n    thu: string,\n    fri: string,\n    sat: string,\n    sun: string,\n  ]\n}\n\nexport function CalendarMonth(props: CalendarMonthProps) {\n  const {\n    weekInfo: {firstDay: weekStartDay},\n  } = useCurrentLocale()\n\n  const weekDayNames =\n    weekStartDay === 1\n      ? props.weekDayNames\n      : [props.weekDayNames[6], ...props.weekDayNames.slice(0, 6)]\n\n  return (\n    <Box aria-hidden={props.hidden || false} data-ui=\"CalendarMonth\">\n      <Grid gap={1} style={{gridTemplateColumns: 'repeat(7, minmax(44px, 46px))'}}>\n        {weekDayNames.map((weekday) => (\n          <Box key={weekday} paddingY={2}>\n            <Text size={1} weight=\"medium\" style={{textAlign: 'center'}}>\n              {weekday}\n            </Text>\n          </Box>\n        ))}\n\n        {useWeeksOfMonth(props.date).map((week, weekIdx) =>\n          week.days.map((date, dayIdx) => {\n            const focused = props.focused && isSameDay(date, props.focused)\n            const selected = props.selected && isSameDay(date, props.selected)\n            const isToday = isSameDay(date, new Date())\n            const isCurrentMonth = props.focused && isSameMonth(date, props.focused)\n\n            return (\n              <CalendarDay\n                date={date}\n                focused={focused}\n                isCurrentMonth={isCurrentMonth}\n                isToday={isToday}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${weekIdx}-${dayIdx}`}\n                onSelect={props.onSelect}\n                selected={selected}\n              />\n            )\n          }),\n        )}\n      </Grid>\n    </Box>\n  )\n}\n","export const features = {\n  dayPresets: false,\n  timePresets: false,\n}\n","import {TextInput, type TextInputProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type FocusEvent,\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type KeyboardEvent,\n  type SyntheticEvent,\n  useCallback,\n  useState,\n} from 'react'\n\n/**\n * A TextInput that only emit onChange when it has to\n * By default it will only emit onChange when: 1) user hits enter or 2) user leaves the\n * field (e.g. onBlur) and the input value at this time is different from the given `value` prop\n */\nexport const LazyTextInput = forwardRef(function LazyTextInput(\n  {onChange, onBlur, onKeyPress, value, ...rest}: TextInputProps & HTMLProps<HTMLInputElement>,\n  forwardedRef: ForwardedRef<HTMLInputElement>,\n) {\n  const [inputValue, setInputValue] = useState<string>()\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.currentTarget.value)\n  }, [])\n\n  const checkEvent = useCallback(\n    (event: SyntheticEvent<HTMLInputElement>) => {\n      const currentValue = event.currentTarget.value\n      if (currentValue !== `${value}`) {\n        if (onChange) {\n          onChange(event)\n        }\n      }\n      setInputValue(undefined)\n    },\n    [onChange, value],\n  )\n\n  const handleBlur = useCallback(\n    (e: FocusEvent<HTMLInputElement>) => {\n      checkEvent(e)\n      if (onBlur) {\n        onBlur(e)\n      }\n    },\n    [checkEvent, onBlur],\n  )\n\n  const handleKeyPress = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        checkEvent(e)\n      }\n      if (onKeyPress) {\n        onKeyPress(e)\n      }\n    },\n    [checkEvent, onKeyPress],\n  )\n\n  return (\n    <TextInput\n      {...rest}\n      data-testid=\"date-input\"\n      ref={forwardedRef}\n      value={inputValue === undefined ? value : inputValue}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyPress={handleKeyPress}\n    />\n  )\n})\n","import {type TextInputProps} from '@sanity/ui'\nimport {type ChangeEvent, type HTMLProps, useCallback} from 'react'\n\nimport {LazyTextInput} from '../LazyTextInput'\n\nexport const YearInput = (\n  props: {onChange: (year: number) => void} & TextInputProps &\n    Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'ref'>,\n) => {\n  const {onChange, ...restProps} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const numericValue = parseInt(event.currentTarget.value, 10)\n      if (!isNaN(numericValue)) {\n        onChange(numericValue)\n      }\n    },\n    [onChange],\n  )\n\n  return (\n    <LazyTextInput\n      {...restProps}\n      fontSize={1}\n      onChange={handleChange}\n      inputMode=\"numeric\"\n      padding={2}\n      radius={2}\n    />\n  )\n}\n","import {ChevronLeftIcon, ChevronRightIcon} from '@sanity/icons'\nimport {Box, Flex, Grid, Select, Text, useForwardedRef} from '@sanity/ui'\nimport {addDays, addMonths, setDate, setHours, setMinutes, setMonth, setYear} from 'date-fns'\nimport {range} from 'lodash'\nimport {\n  type ComponentProps,\n  type FormEvent,\n  type ForwardedRef,\n  forwardRef,\n  type KeyboardEvent,\n  useCallback,\n  useEffect,\n} from 'react'\n\nimport {Button} from '../../../../../../ui-components'\nimport {CalendarMonth} from './CalendarMonth'\nimport {ARROW_KEYS, DEFAULT_TIME_PRESETS, HOURS_24} from './constants'\nimport {features} from './features'\nimport {type CalendarLabels, type MonthNames} from './types'\nimport {formatTime} from './utils'\nimport {YearInput} from './YearInput'\n\ntype CalendarProps = Omit<ComponentProps<'div'>, 'onSelect'> & {\n  selectTime?: boolean\n  selectedDate?: Date\n  timeStep?: number\n  onSelect: (date: Date) => void\n  focusedDate: Date\n  onFocusedDateChange: (index: Date) => void\n  labels: CalendarLabels\n}\n\n// This is used to maintain focus on a child element of the calendar-grid between re-renders\n// When using arrow keys to move focus from a day in one month to another we are setting focus at the button for the day\n// after it has changed but *only* if we *already* had focus inside the calendar grid (e.g not if focus was on the \"next\n// year\" button, or any of the other controls)\n// When moving from the last day of a month that displays 6 weeks in the grid to a month that displays 5 weeks, current\n// focus gets lost on render, so this provides us with a stable element to help us preserve focus on a child element of\n// the calendar grid between re-renders\nconst PRESERVE_FOCUS_ELEMENT = (\n  <span\n    data-preserve-focus\n    style={{overflow: 'hidden', position: 'absolute', outline: 'none'}}\n    tabIndex={-1}\n  />\n)\n\n// This buttons use a specific styling, given they are intended to be aligned with the select elements.\nconst CALENDAR_ICON_BUTTON_PROPS = {\n  padding: 2,\n}\n\nexport const Calendar = forwardRef(function Calendar(\n  props: CalendarProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    selectTime,\n    onFocusedDateChange,\n    selectedDate = new Date(),\n    focusedDate = selectedDate,\n    timeStep = 1,\n    onSelect,\n    labels,\n    ...restProps\n  } = props\n\n  const setFocusedDate = useCallback(\n    (date: Date) => onFocusedDateChange(date),\n    [onFocusedDateChange],\n  )\n\n  const setFocusedDateMonth = useCallback(\n    (month: number) => setFocusedDate(setDate(setMonth(focusedDate, month), 1)),\n    [focusedDate, setFocusedDate],\n  )\n\n  const handleFocusedMonthChange = useCallback(\n    (e: FormEvent<HTMLSelectElement>) => setFocusedDateMonth(Number(e.currentTarget.value)),\n    [setFocusedDateMonth],\n  )\n\n  const moveFocusedDate = useCallback(\n    (by: number) => setFocusedDate(addMonths(focusedDate, by)),\n    [focusedDate, setFocusedDate],\n  )\n\n  const setFocusedDateYear = useCallback(\n    (year: number) => setFocusedDate(setYear(focusedDate, year)),\n    [focusedDate, setFocusedDate],\n  )\n\n  const handleDateChange = useCallback(\n    (date: Date) => {\n      onSelect(setMinutes(setHours(date, selectedDate.getHours()), selectedDate.getMinutes()))\n    },\n    [onSelect, selectedDate],\n  )\n\n  const handleMinutesChange = useCallback(\n    (event: FormEvent<HTMLSelectElement>) => {\n      const m = Number(event.currentTarget.value)\n      onSelect(setMinutes(selectedDate, m))\n    },\n    [onSelect, selectedDate],\n  )\n\n  const handleHoursChange = useCallback(\n    (event: FormEvent<HTMLSelectElement>) => {\n      const m = Number(event.currentTarget.value)\n      onSelect(setHours(selectedDate, m))\n    },\n    [onSelect, selectedDate],\n  )\n\n  const handleTimeChange = useCallback(\n    (hours: number, mins: number) => {\n      onSelect(setHours(setMinutes(selectedDate, mins), hours))\n    },\n    [onSelect, selectedDate],\n  )\n\n  const ref = useForwardedRef(forwardedRef)\n\n  const focusCurrentWeekDay = useCallback(() => {\n    ref.current?.querySelector<HTMLElement>(`[data-focused=\"true\"]`)?.focus()\n  }, [ref])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      if (!ARROW_KEYS.includes(event.key)) {\n        return\n      }\n      const target = event.currentTarget\n      event.preventDefault()\n      if (target.hasAttribute('data-calendar-grid')) {\n        focusCurrentWeekDay()\n        return\n      }\n      if (event.key === 'ArrowUp') {\n        onFocusedDateChange(addDays(focusedDate, -7))\n      }\n      if (event.key === 'ArrowDown') {\n        onFocusedDateChange(addDays(focusedDate, 7))\n      }\n      if (event.key === 'ArrowLeft') {\n        onFocusedDateChange(addDays(focusedDate, -1))\n      }\n      if (event.key === 'ArrowRight') {\n        onFocusedDateChange(addDays(focusedDate, 1))\n      }\n      // set focus temporarily on this element to make sure focus is still inside the calendar-grid after re-render\n      ref.current?.querySelector<HTMLElement>('[data-preserve-focus]')?.focus()\n    },\n    [ref, focusCurrentWeekDay, onFocusedDateChange, focusedDate],\n  )\n\n  useEffect(() => {\n    focusCurrentWeekDay()\n  }, [focusCurrentWeekDay])\n\n  useEffect(() => {\n    const currentFocusInCalendarGrid = document.activeElement?.matches(\n      '[data-calendar-grid], [data-calendar-grid] [data-preserve-focus]',\n    )\n    if (\n      // Only move focus if it's currently in the calendar grid\n      currentFocusInCalendarGrid\n    ) {\n      focusCurrentWeekDay()\n    }\n  }, [ref, focusCurrentWeekDay, focusedDate])\n\n  const handleYesterdayClick = useCallback(\n    () => handleDateChange(addDays(new Date(), -1)),\n    [handleDateChange],\n  )\n\n  const handleTodayClick = useCallback(() => handleDateChange(new Date()), [handleDateChange])\n\n  const handleTomorrowClick = useCallback(\n    () => handleDateChange(addDays(new Date(), 1)),\n    [handleDateChange],\n  )\n\n  const handleNowClick = useCallback(() => onSelect(new Date()), [onSelect])\n\n  return (\n    <Box data-ui=\"Calendar\" {...restProps} ref={ref}>\n      {/* Select date */}\n      <Box padding={2}>\n        {/* Day presets */}\n        {features.dayPresets && (\n          <Grid columns={3} data-ui=\"CalendaryDayPresets\" gap={1}>\n            <Button text={labels.goToYesterday} mode=\"bleed\" onClick={handleYesterdayClick} />\n            <Button text={labels.goToToday} mode=\"bleed\" onClick={handleTodayClick} />\n            <Button text={labels.goToTomorrow} mode=\"bleed\" onClick={handleTomorrowClick} />\n          </Grid>\n        )}\n\n        {/* Select month and year */}\n        <Flex>\n          <Box flex={1}>\n            <CalendarMonthSelect\n              onChange={handleFocusedMonthChange}\n              monthNames={labels.monthNames}\n              value={focusedDate?.getMonth()}\n            />\n          </Box>\n          <Box marginLeft={2}>\n            <CalendarYearSelect\n              moveFocusedDate={moveFocusedDate}\n              labels={{\n                goToNextYear: labels.goToNextYear,\n                goToPreviousYear: labels.goToPreviousYear,\n              }}\n              onChange={setFocusedDateYear}\n              value={focusedDate.getFullYear()}\n            />\n          </Box>\n        </Flex>\n\n        {/* Selected month (grid of days) */}\n        <Box\n          data-calendar-grid\n          onKeyDown={handleKeyDown}\n          marginTop={2}\n          overflow=\"hidden\"\n          tabIndex={0}\n        >\n          <CalendarMonth\n            weekDayNames={labels.weekDayNamesShort}\n            date={focusedDate}\n            focused={focusedDate}\n            onSelect={handleDateChange}\n            selected={selectedDate}\n          />\n          {PRESERVE_FOCUS_ELEMENT}\n        </Box>\n      </Box>\n\n      {/* Select time */}\n      {selectTime && (\n        <Box padding={2} style={{borderTop: '1px solid var(--card-border-color)'}}>\n          <Flex align=\"center\">\n            <Flex align=\"center\" flex={1}>\n              <Box>\n                <Select\n                  aria-label={labels.selectHour}\n                  fontSize={1}\n                  padding={2}\n                  radius={2}\n                  value={selectedDate?.getHours()}\n                  onChange={handleHoursChange}\n                >\n                  {HOURS_24.map((h) => (\n                    <option key={h} value={h}>\n                      {`${h}`.padStart(2, '0')}\n                    </option>\n                  ))}\n                </Select>\n              </Box>\n\n              <Box paddingX={1}>\n                <Text size={1}>:</Text>\n              </Box>\n\n              <Box>\n                <Select\n                  aria-label={labels.selectMinute}\n                  fontSize={1}\n                  padding={2}\n                  radius={2}\n                  value={selectedDate?.getMinutes()}\n                  onChange={handleMinutesChange}\n                >\n                  {range(0, 60, timeStep).map((m) => (\n                    <option key={m} value={m}>\n                      {`${m}`.padStart(2, '0')}\n                    </option>\n                  ))}\n                </Select>\n              </Box>\n            </Flex>\n\n            <Box marginLeft={2}>\n              <Button text={labels.setToCurrentTime} mode=\"bleed\" onClick={handleNowClick} />\n            </Box>\n          </Flex>\n\n          {features.timePresets && (\n            <Flex direction=\"row\" justify=\"center\" align=\"center\" style={{marginTop: 5}}>\n              {DEFAULT_TIME_PRESETS.map(([hours, minutes]) => {\n                const text = formatTime(hours, minutes)\n                return (\n                  <CalendarTimePresetButton\n                    key={`${hours}-${minutes}`}\n                    hours={hours}\n                    minutes={minutes}\n                    onTimeChange={handleTimeChange}\n                    text={text}\n                    aria-label={labels.setToTimePreset(text, selectedDate)}\n                  />\n                )\n              })}\n            </Flex>\n          )}\n        </Box>\n      )}\n    </Box>\n  )\n})\n\nfunction CalendarTimePresetButton(props: {\n  hours: number\n  minutes: number\n  onTimeChange: (hours: number, minutes: number) => void\n  'aria-label': string\n  text: string\n}) {\n  const {hours, minutes, text, onTimeChange} = props\n\n  const handleClick = useCallback(() => {\n    onTimeChange(hours, minutes)\n  }, [hours, minutes, onTimeChange])\n\n  return <Button text={text} aria-label={props['aria-label']} mode=\"bleed\" onClick={handleClick} />\n}\n\nfunction CalendarMonthSelect(props: {\n  onChange: (e: FormEvent<HTMLSelectElement>) => void\n  value?: number\n  monthNames: MonthNames\n}) {\n  const {onChange, value, monthNames} = props\n\n  return (\n    <Flex flex={1} gap={1}>\n      <Box flex={1}>\n        <Select fontSize={1} radius={2} value={value} onChange={onChange} padding={2}>\n          {monthNames.map((monthName, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <option key={i} value={i}>\n              {monthName}\n            </option>\n          ))}\n        </Select>\n      </Box>\n    </Flex>\n  )\n}\n\nfunction CalendarYearSelect(props: {\n  moveFocusedDate: (by: number) => void\n  onChange: (year: number) => void\n  value?: number\n  labels: {goToNextYear: string; goToPreviousYear: string}\n}) {\n  const {moveFocusedDate, onChange, value, labels} = props\n\n  const handlePrevYearClick = useCallback(() => moveFocusedDate(-12), [moveFocusedDate])\n\n  const handleNextYearClick = useCallback(() => moveFocusedDate(12), [moveFocusedDate])\n\n  return (\n    <Flex gap={1}>\n      <Button\n        aria-label={labels.goToPreviousYear}\n        onClick={handlePrevYearClick}\n        mode=\"bleed\"\n        icon={ChevronLeftIcon}\n        tooltipProps={{content: 'Previous year'}}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - Button with specific styling requirements\n        {...CALENDAR_ICON_BUTTON_PROPS}\n      />\n      <YearInput value={value} onChange={onChange} radius={0} style={{width: 48}} />\n      <Button\n        aria-label={labels.goToNextYear}\n        onClick={handleNextYearClick}\n        mode=\"bleed\"\n        icon={ChevronRightIcon}\n        tooltipProps={{content: 'Next year'}}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - Button with specific styling requirements\n        {...CALENDAR_ICON_BUTTON_PROPS}\n      />\n    </Flex>\n  )\n}\n","import {type ComponentProps, type ForwardedRef, forwardRef, useCallback, useState} from 'react'\n\nimport {Calendar} from './calendar/Calendar'\nimport {type CalendarLabels} from './calendar/types'\n\nexport const DatePicker = forwardRef(function DatePicker(\n  props: Omit<ComponentProps<'div'>, 'onChange'> & {\n    value?: Date\n    onChange: (nextDate: Date) => void\n    selectTime?: boolean\n    timeStep?: number\n    calendarLabels: CalendarLabels\n  },\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {value = new Date(), onChange, calendarLabels, ...rest} = props\n  const [focusedDate, setFocusedDay] = useState<Date>()\n\n  const handleSelect = useCallback(\n    (nextDate: Date) => {\n      onChange(nextDate)\n      setFocusedDay(undefined)\n    },\n    [onChange],\n  )\n\n  return (\n    <Calendar\n      {...rest}\n      labels={calendarLabels}\n      ref={ref}\n      selectedDate={value}\n      onSelect={handleSelect}\n      focusedDate={focusedDate || value}\n      onFocusedDateChange={setFocusedDay}\n    />\n  )\n})\n","import {type CalendarLabels} from './base/calendar/types'\n\nexport function isValidDate(date: Date): boolean {\n  return date instanceof Date && !isNaN(date.valueOf())\n}\n\nexport function getCalendarLabels(\n  t: (key: string, values?: Record<string, unknown>) => string,\n): CalendarLabels {\n  return {\n    goToTomorrow: t('calendar.action.go-to-tomorrow'),\n    goToToday: t('calendar.action.go-to-today'),\n    goToYesterday: t('calendar.action.go-to-yesterday'),\n    goToNextMonth: t('calendar.action.go-to-next-month'),\n    goToPreviousMonth: t('calendar.action.go-to-previous-month'),\n    goToNextYear: t('calendar.action.go-to-next-year'),\n    goToPreviousYear: t('calendar.action.go-to-previous-year'),\n    setToCurrentTime: t('calendar.action.set-to-current-time'),\n    selectHour: t('calendar.action.select-hour'),\n    selectMinute: t('calendar.action.select-minute'),\n    monthNames: [\n      t('calendar.month-names.january'),\n      t('calendar.month-names.february'),\n      t('calendar.month-names.march'),\n      t('calendar.month-names.april'),\n      t('calendar.month-names.may'),\n      t('calendar.month-names.june'),\n      t('calendar.month-names.july'),\n      t('calendar.month-names.august'),\n      t('calendar.month-names.september'),\n      t('calendar.month-names.october'),\n      t('calendar.month-names.november'),\n      t('calendar.month-names.december'),\n    ],\n    weekDayNamesShort: [\n      t('calendar.weekday-names.short.monday'),\n      t('calendar.weekday-names.short.tuesday'),\n      t('calendar.weekday-names.short.wednesday'),\n      t('calendar.weekday-names.short.thursday'),\n      t('calendar.weekday-names.short.friday'),\n      t('calendar.weekday-names.short.saturday'),\n      t('calendar.weekday-names.short.sunday'),\n    ],\n    setToTimePreset: (time, date) => t('calendar.action.set-to-time-preset', {time, date}),\n  }\n}\n","import {type TransactionLogEventWithEffects} from '@sanity/types'\n\ntype StreamResult = TransactionLogEventWithEffects | {error: {description?: string; type: string}}\n\nexport async function getJsonStream(\n  url: string,\n  token: string | undefined,\n): Promise<ReadableStream<StreamResult>> {\n  const options: RequestInit = token\n    ? {headers: {Authorization: `Bearer ${token}`}}\n    : {credentials: 'include'}\n  const response = await fetch(url, options)\n  return getStream(response)\n}\n\nfunction getStream(response: Response): ReadableStream<StreamResult> {\n  const body = response.body\n  if (!body) {\n    throw new Error('Failed to read body from response')\n  }\n\n  let reader: ReadableStreamDefaultReader<Uint8Array>\n  let cancelled = false\n\n  return new ReadableStream<TransactionLogEventWithEffects>({\n    start(controller): void | PromiseLike<void> {\n      reader = body.getReader()\n      const decoder = new TextDecoder()\n      let buffer = ''\n\n      reader\n        .read()\n        .then(function processResult(result): void | Promise<void> {\n          if (result.done) {\n            if (cancelled) {\n              return\n            }\n\n            buffer = buffer.trim()\n            if (buffer.length === 0) {\n              controller.close()\n              return\n            }\n\n            controller.enqueue(JSON.parse(buffer))\n            controller.close()\n            return\n          }\n\n          buffer += decoder.decode(result.value, {stream: true})\n          const lines = buffer.split('\\n')\n\n          for (let i = 0; i < lines.length - 1; ++i) {\n            const line = lines[i].trim()\n            if (line.length === 0) {\n              continue\n            }\n\n            try {\n              controller.enqueue(JSON.parse(line))\n            } catch (err) {\n              controller.error(err)\n              cancelled = true\n              reader.cancel()\n              return\n            }\n          }\n\n          buffer = lines[lines.length - 1]\n\n          // eslint-disable-next-line consistent-return\n          return reader\n            .read()\n            .then(processResult)\n            .catch((err) => controller.error(err))\n        })\n        .catch((err) => controller.error(err))\n    },\n\n    cancel(): void {\n      cancelled = true\n      reader.cancel()\n    },\n  })\n}\n"],"names":["UIButton","UIDialog","UIMenuButton","UIMenuGroup","UIMenuItem","UIPopover","UITab","UITooltip","UITooltipDelayGroupProvider"],"mappings":"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"}