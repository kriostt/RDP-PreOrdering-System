{"version":3,"file":"index.js","sources":["../src/core/components/react-track-elements/createNoopTrackerScope.tsx","../src/core/changeIndicators/ChangeFieldWrapper.tsx","../src/core/util/isArray.ts","../src/core/util/isTruthy.ts","../src/core/util/schemaUtils.ts","../src/core/util/uncaughtErrorHandler.ts","../src/core/util/useThrottledCallback.ts","../src/core/components/scroll/hooks.ts","../src/core/components/scroll/scrollMonitor.tsx","../src/core/changeIndicators/helpers/findMostSpecificTarget.ts","../src/core/changeIndicators/helpers/scrollUtils.ts","../src/core/changeIndicators/helpers/getOffsetsTo.ts","../src/core/changeIndicators/helpers/isChangeBar.ts","../src/core/changeIndicators/helpers/scrollIntoView.ts","../src/core/changeIndicators/overlay/useResizeObserver.ts","../src/core/changeIndicators/overlay/ConnectorsOverlay.tsx","../src/core/changeIndicators/overlay/ChangeConnectorRoot.tsx","../src/core/components/BetaBadge.tsx","../src/core/components/Favicons.tsx","../src/core/components/globalErrorHandler/GlobalErrorHandler.tsx","../src/core/components/NoJavascript.tsx","../src/core/components/DefaultDocument.tsx","../src/core/config/defineConfig.ts","../src/core/config/definePlugin.ts","../src/core/config/document/fieldActions/define.ts","../src/core/config/document/inspector.ts","../src/core/store/_legacy/authStore/createMockAuthStore.ts","../src/core/field/types/array/util/arrayUtils.ts","../src/core/field/types/array/diff/ArrayOfOptionsFieldDiff.tsx","../src/core/field/types/slug/diff/SlugFieldDiff.tsx","../src/core/field/types/url/diff/UrlFieldDiff.tsx","../src/core/field/diff/resolve/diffResolver.ts","../src/core/form/field/HoveredFieldProvider.tsx","../src/core/presence/PresenceScope.tsx","../src/core/form/patch/PatchChannel.ts","../src/core/form/members/array/ArrayOfObjectsInputMember.tsx","../src/core/form/members/array/ArrayOfObjectsInputMembers.tsx","../src/core/form/studio/contexts/reviewChanges/useReviewChanges.ts","../src/core/form/studio/defaults.ts","../src/core/form/inputs/PortableText/_legacyDefaultParts/CustomMarkers.tsx","../src/core/form/FormBuilderProvider.tsx","../src/core/form/studio/FormProvider.tsx","../src/core/form/studio/FormBuilder.tsx","../src/core/store/_legacy/document/document-pair/remoteSnapshots.ts","../src/core/templates/prepare.ts","../src/core/store/_legacy/document/hooks/useDocumentType.ts","../src/core/store/_legacy/history/useTimelineSelector.ts","../src/core/store/_legacy/history/useTimelineStore.ts","../src/core/store/_legacy/project/useProject.ts","../src/core/store/_legacy/project/useProjectDatasets.ts","../src/core/config/resolveConfig.ts","../src/core/config/useConfigContextFromSource.ts","../src/core/studio/addonDataset/AddonDatasetProvider.tsx","../src/core/studio/addonDataset/useAddonDataset.ts","../src/core/studio/components/navbar/StudioLogo.tsx","../src/core/theme/_legacy/helpers.ts","../src/core/theme/_legacy/color.ts","../src/core/theme/_legacy/fonts.ts","../src/core/theme/_legacy/palette.ts","../src/core/theme/_legacy/tones.ts","../src/core/theme/_legacy/theme.ts","../src/core/studio/Studio.tsx","../src/core/studio/renderStudio.tsx","../src/core/hooks/useConnectionState.ts","../src/core/hooks/useDocumentOperationEvent.ts","../src/core/hooks/useEditState.ts","../src/core/hooks/useFormattedDuration.ts","../src/core/hooks/useNumberFormat.ts","../src/core/hooks/useSyncState.ts","../src/core/hooks/useTimeAgo.ts","../src/core/hooks/useTools.ts","../src/core/hooks/useUserListWithPermissions.ts","../src/core/hooks/useValidationStatus.ts","../src/core/components/hookCollection/actionId.ts","../src/core/components/hookCollection/requestIdleCallback.ts","../src/core/components/hookCollection/GetHookCollectionState.tsx","../src/core/components/Hotkeys.tsx","../src/core/components/IntentButton.tsx","../src/core/components/RelativeTime.tsx","../src/core/components/WithReferringDocuments.tsx","../src/core/components/zOffsets/ZIndexProvider.tsx","../src/core/form/inputs/TelephoneInput.tsx","../src/core/form/store/conditional-property/resolveConditionalProperty.ts","../src/core/form/store/stateTreeHelper.ts","../src/core/form/store/constants.ts","../src/core/form/store/utils/getCollapsibleOptions.ts","../src/core/form/store/utils/getItemType.ts","../src/core/form/store/formState.ts","../src/core/form/store/useFormState.ts","../src/core/form/store/types/asserters.ts","../src/core/form/store/utils/getExpandOperations.ts","../src/core/form/utils/path.ts","../src/core/form/utils/mutationPatch.ts"],"sourcesContent":["import {type ReactNode} from 'react'\n\nimport {type Reported} from './types'\n\n// eslint-disable-next-line no-empty-function, @typescript-eslint/no-empty-function\nfunction noop() {}\n\nfunction NoopTracker({children}: {children: ReactNode}) {\n  return <>{children}</>\n}\n\n/** @internal */\nexport function createNoopTrackerScope<T>() {\n  return {\n    useReportedValues: noop as () => Reported<T>[],\n    Tracker: NoopTracker,\n    useReporter: noop as (id: string | null, value: T | (() => T)) => void,\n  }\n}\n","import {type Path} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ReactNode, type SyntheticEvent, useCallback, useContext, useRef, useState} from 'react'\nimport deepCompare from 'react-fast-compare'\n\nimport {ConnectorContext} from './ConnectorContext'\nimport {useReporter} from './tracker'\n\n/**\n * This is used to draw the bar that wraps the diff components in the changes panel\n *\n * @internal\n */\nexport const ChangeFieldWrapper = (props: {path: Path; children: ReactNode; hasHover: boolean}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const {onSetFocus} = useContext(ConnectorContext)\n  const [isHover, setHover] = useState(false)\n\n  const onMouseEnter = useCallback(() => {\n    setHover(true)\n  }, [])\n\n  const onMouseLeave = useCallback(() => {\n    setHover(false)\n  }, [])\n\n  useReporter(\n    `change-${PathUtils.toString(props.path)}`,\n    () => ({\n      element: ref.current!,\n      path: props.path,\n      isChanged: true,\n      hasFocus: false,\n      hasHover: isHover,\n      hasRevertHover: props.hasHover,\n    }),\n    // note: deepCompare should be ok here since we're not comparing deep values\n    deepCompare,\n  )\n\n  const handleClick = useCallback(\n    (event: SyntheticEvent) => {\n      setFocusWithStopPropagation(event, onSetFocus, props.path)\n    },\n    [onSetFocus, props.path],\n  )\n\n  return (\n    <div ref={ref} onClick={handleClick} onMouseLeave={onMouseLeave} onMouseEnter={onMouseEnter}>\n      {props.children}\n    </div>\n  )\n}\n\n// Stop the propagation here, or it will trigger the parent diff component's onClick.\nfunction setFocusWithStopPropagation(\n  event: SyntheticEvent,\n  onSetFocus: (toPath: Path) => void,\n  path: Path,\n): void {\n  event.stopPropagation()\n  onSetFocus(path)\n}\n","/** @internal */\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value)\n}\n","/** @internal */\nexport function isTruthy<T>(value: T | false): value is T {\n  return Boolean(value)\n}\n","import {type SchemaTypeDefinition} from '@sanity/types'\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\n/**\n * @internal\n */\nexport function _isSanityDocumentTypeDefinition(\n  def: SchemaTypeDefinition,\n): def is SchemaTypeDefinition<'document'> {\n  return def.type === 'document' && BUNDLED_DOC_TYPES.includes(def.name)\n}\n\n/**\n * @internal\n */\nexport function _isCustomDocumentTypeDefinition(\n  def: SchemaTypeDefinition,\n): def is SchemaTypeDefinition<'document'> {\n  return def.type === 'document' && !_isSanityDocumentTypeDefinition(def)\n}\n","const FONT_SANS_SERIF = `-apple-system, BlinkMacSystemFont, \\\\'Segoe UI\\\\', Roboto, \\\\'Helvetica Neue\\\\', Helvetica, Arial, system-ui, sans-serif`\nconst FONT_MONOSPACE = `-apple-system-ui-monospace, \\\\'SF Mono\\\\', Menlo, Monaco, Consolas, monospace`\n\n/** @internal */\nexport const uncaughtErrorHandler = (): string =>\n  // prettier-ignore\n  [\n    `window.onerror = function(m,u,l,c,e) {`,\n      `var p=window.location.port;`,\n      `var h=window.location.protocol+'//'+window.location.hostname+(p?':'+p:'');`,\n      `var r=document.getElementById('sanity');`,\n      `while(r.firstChild){r.removeChild(r.firstChild);}`,\n      `var s=document.createElement('style');`,\n      `s.appendChild(document.createTextNode('`,\n        `html,body,#sanityBody,#sanity,#sanityError{height:100%;}`,\n        `body{-webkit-font-smoothing:antialiased;margin:0;}`,\n        `#sanityError{position:fixed;top:0;left:0;width:100%;height:100%;overflow:auto;background-color:#fff;color:#121923;font-family:${FONT_SANS_SERIF};font-size:16px;line-height:21px;min-height:100%;}`,\n        `#sanityError>div{background-color:#fff;max-width:960px;margin:0 auto;padding:47px 32px 52px;}`,\n        `@media(min-width:512px){`,\n          `#sanityError>div{`,\n            `padding:47px 84px;`,\n          `}`,\n        `}`,\n        `#sanityError button{-webkit-font-smoothing:inherit;font:inherit;font-weight:500;background-color:#2276FC;color:#fff;padding:7px 12px;border-radius:3px;border:0;}`,\n        `#sanityError button:hover{background-color:#1E63D0;}`,\n        `#sanityError button:active{background-color:#1B50A5;}`,\n      `'));`,\n      `document.head.appendChild(s);`,\n      `var f=document.createElement('div');`,\n      `f.id='sanityError';`,\n      `f.innerHTML='`,\n        `<div>`,\n          `<h1 style=\"font-size:21px;line-height:27px;margin: 0 0 10px;\">Unhandled error</h1>`,\n          `<p style=\"color:#66758D;margin:10px 0 14px;\">Encountered an unhandled error in this Studio.</p>`,\n          `<button class=\"sanity-error-handler__reload-btn\" type=\"button\">Reload page</button>`,\n          `<pre style=\"background-color:#FDEBEA;color:#C3362C;font-size:13px;line-height:17px;padding:8px 12px;border-radius:3px;margin:32px 0 0;overflow:auto;\">`,\n            `<code style=\"font-family:${FONT_MONOSPACE};\">`,\n              `'+e.stack.replaceAll(h,'')+'`,\n            `</code>`,\n          `</pre>`,\n        `</div>`,\n      `';`,\n      `var b=f.querySelector('.sanity-error-handler__reload-btn');`,\n      `if(b){`,\n        `b.onclick=function() {`,\n          `window.location.reload();`,\n        `}`,\n      `};`,\n      `r.appendChild(f);`,\n    `};`,\n  ].join('')\n","import {throttle, type ThrottleSettings} from 'lodash'\nimport {useMemo} from 'react'\n\n/**\n * @internal\n *\n * @example\n * ```tsx\n * // First create a callback using React’s `useCallback` hook\n * const myCallback = useCallback(() => {\n *   // this is not throttled\n * }, [])\n *\n * // Then make a throttled version using the `useThrottledCallback` hook\n * const myThrottledCallback = useThrottledCallback(myCallback, 100)\n *\n * // Call the throttled callback\n * <Button onClick={myThrottledCallback} />\n * ```\n */\nexport function useThrottledCallback(\n  callback: (...args: any[]) => any,\n  wait: number,\n  options: ThrottleSettings,\n): (...args: any[]) => any {\n  const throttledCallback = useMemo(\n    () => throttle(callback, wait, options),\n    [callback, options, wait],\n  )\n\n  return throttledCallback\n}\n","import {type Subscriber} from 'nano-pubsub'\nimport {useContext, useEffect} from 'react'\n\nimport {ScrollContext} from './scrollContext'\n\n/** @internal */\nexport function useOnScroll(callback: Subscriber<Event>) {\n  const parentContext = useContext(ScrollContext)\n  useEffect(() => {\n    return parentContext?.subscribe(callback)\n  }, [callback, parentContext])\n}\n","import {type ReactNode} from 'react'\n\nimport {useOnScroll} from './hooks'\nimport {type ScrollEventHandler} from './types'\n\n/** @internal */\nexport interface ScrollMonitorProps {\n  onScroll: ScrollEventHandler\n  children?: ReactNode\n}\n\n/** @internal */\nexport function ScrollMonitor({onScroll, children}: ScrollMonitorProps) {\n  useOnScroll(onScroll)\n  return <>{children}</>\n}\n","import {isKeyedObject} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\n\nimport {type TrackedArea, type TrackedChange} from '../tracker'\n\nexport function findMostSpecificTarget(\n  targetType: 'change' | 'field',\n  id: string,\n  values: Map<string, TrackedChange | TrackedArea>,\n): TrackedChange | undefined {\n  const pathString = id.slice(id.indexOf('-') + 1) || '[]'\n  const path = PathUtils.fromString(pathString)\n  const exactId = `${targetType}-${PathUtils.toString(path)}`\n  if (values.has(exactId)) {\n    return values.get(exactId) as TrackedChange\n  }\n\n  let mostSpecific: TrackedChange | undefined\n  for (const [targetId, target] of values) {\n    if (!('path' in target) || !targetId.startsWith(targetType)) {\n      continue\n    }\n\n    const numEqual = PathUtils.numEqualSegments(path, target.path)\n    const lastPathSegment = target.path[target.path.length - 1]\n    const pathOnlyDiffersByKey =\n      numEqual === target.path.length - 1 && isKeyedObject(lastPathSegment)\n\n    if (numEqual === 0) {\n      continue\n    } else if (numEqual !== target.path.length && !pathOnlyDiffersByKey) {\n      /*\n       * We only allow matching to shorter paths if the last element in the path is a keyed object.\n       * `foo.bar.portableTextField[_key=abc123]` should resolve to `foo.bar.portableTextField`.\n       *\n       * Otherwise we'll only get a connector line when you add new elements to a portable text\n       * field and not when you alter an existing part.\n       */\n      continue\n    }\n\n    mostSpecific = target\n\n    if (numEqual === path.length) {\n      // On exact match, return early\n      break\n    }\n  }\n\n  // if (!mostSpecific) {\n  //   throw new Error(`target not found: \"${id}\"`)\n  // }\n\n  return mostSpecific\n}\n","export function hasOverflowScroll(el: HTMLElement): boolean {\n  const overflow = getComputedStyle(el).overflow\n\n  return overflow.includes('auto') || overflow.includes('scroll')\n}\n\n// Check whether an element is currently scrollable (meaning it must both have overflow scroll *and* content overflowing)\nexport function isScrollable(el: HTMLElement): boolean {\n  const scrollableContent = el.scrollHeight !== el.offsetHeight || el.scrollWidth !== el.offsetWidth\n\n  return scrollableContent && hasOverflowScroll(el)\n}\n","import {type Rect} from '../overlay/types'\nimport {hasOverflowScroll} from './scrollUtils'\n\nexport const getOffsetsTo = (\n  source: HTMLElement,\n  target: HTMLElement,\n): {rect: Rect; bounds: Rect} => {\n  const bounds: Rect = {\n    top: 0,\n    left: 0,\n    height: target.offsetHeight,\n    width: target.offsetWidth,\n  }\n\n  const rect: Rect = {\n    top: 0,\n    left: 0,\n    height: source.offsetHeight,\n    width: source.offsetWidth,\n  }\n\n  let foundScrollContainer = false\n  let el: HTMLElement | null = source\n\n  while (el && el !== target && target.contains(el)) {\n    if (foundScrollContainer) {\n      bounds.top += el.offsetTop\n      bounds.left += el.offsetLeft\n    }\n\n    if (hasOverflowScroll(el)) {\n      bounds.top = el.offsetTop\n      bounds.height = el.offsetHeight\n      bounds.left = el.offsetLeft\n      bounds.width = el.offsetWidth\n\n      foundScrollContainer = true\n    }\n\n    rect.top += el.offsetTop - el.scrollTop\n    rect.left += el.offsetLeft - el.scrollLeft\n\n    el = el.offsetParent as HTMLElement\n  }\n\n  return {rect, bounds}\n}\n","import {type Reported} from '../../components/react-track-elements'\nimport {type TrackedArea, type TrackedChange} from '../tracker'\n\nexport function isChangeBar(\n  v: Reported<TrackedArea | TrackedChange>,\n): v is Reported<TrackedChange> {\n  return v[0] !== 'changePanel'\n}\n","import {type Rect} from '../overlay/types'\nimport {isScrollable} from './scrollUtils'\n\nconst SCROLL_INTO_VIEW_TOP_PADDING = -15\n\nexport function scrollIntoView(field: {element: HTMLElement; rect: Rect; bounds: Rect}): void {\n  const element = field.element\n\n  /*\n   * Start at current element and check the parent for a scroll\n   * bar until a scrollable element has been found.\n   */\n  let parentElementWithScroll: HTMLElement | null = element\n\n  while (!isScrollable(parentElementWithScroll)) {\n    parentElementWithScroll = parentElementWithScroll.parentElement\n\n    /*\n     * If the parent element is null it means we are at the root\n     * element, which has no parent. Since no scroll bar has\n     * been found so far it does not make sense to scroll.\n     */\n    if (!parentElementWithScroll) {\n      return\n    }\n  }\n\n  parentElementWithScroll.scroll({\n    top:\n      parentElementWithScroll.scrollTop +\n      field.rect.top -\n      field.bounds.top +\n      SCROLL_INTO_VIEW_TOP_PADDING,\n    left: 0,\n    behavior: 'smooth',\n  })\n}\n","import {useEffect} from 'react'\n\nimport {resizeObserver} from '../../util'\n\nexport function useResizeObserver(\n  element: HTMLDivElement,\n  onResize: (event: ResizeObserverEntry) => void,\n): void {\n  useEffect(() => resizeObserver.observe(element, onResize), [element, onResize])\n}\n","import {type Path} from '@sanity/types'\nimport {sortBy} from 'lodash'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type Reported} from '../../components/react-track-elements'\nimport {ScrollMonitor} from '../../components/scroll'\nimport {isNonNullable} from '../../util'\nimport {DEBUG_LAYER_BOUNDS} from '../constants'\nimport {findMostSpecificTarget} from '../helpers/findMostSpecificTarget'\nimport {getOffsetsTo} from '../helpers/getOffsetsTo'\nimport {isChangeBar} from '../helpers/isChangeBar'\nimport {scrollIntoView} from '../helpers/scrollIntoView'\nimport {type TrackedArea, type TrackedChange, useReportedValues} from '../tracker'\nimport {Connector} from './Connector'\nimport {SvgWrapper} from './ConnectorsOverlay.styled'\nimport {DebugLayers} from './DebugLayers'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface Rect {\n  height: number\n  width: number\n  top: number\n  left: number\n}\n\ninterface State {\n  connectors: {\n    field: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n    change: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n    hasFocus: boolean\n    hasHover: boolean\n    hasRevertHover: boolean\n  }[]\n  isHoverConnector: boolean\n}\n\ninterface ConnectorsOverlayProps {\n  rootElement: HTMLDivElement\n  onSetFocus: (nextFocusPath: Path) => void\n}\n\nfunction getState(\n  allReportedValues: Reported<TrackedChange | TrackedArea>[],\n  hovered: string | null,\n  byId: Map<string, TrackedChange | TrackedArea>,\n  rootElement: HTMLElement,\n): State {\n  const changeBarsWithHover: Reported<TrackedChange>[] = []\n  const changeBarsWithFocus: Reported<TrackedChange>[] = []\n\n  for (const value of allReportedValues) {\n    if (!isChangeBar(value) || !value[1].isChanged) {\n      continue\n    }\n\n    const [id, reportedChangeBar] = value\n\n    if (id === hovered) {\n      changeBarsWithHover.push(value)\n      continue\n    }\n\n    if (reportedChangeBar.hasHover) {\n      changeBarsWithHover.push(value)\n      continue\n    }\n\n    if (reportedChangeBar.hasFocus) {\n      changeBarsWithFocus.push(value)\n      continue\n    }\n  }\n\n  const isHoverConnector = changeBarsWithHover.length > 0\n\n  const changeBars = isHoverConnector ? changeBarsWithHover : changeBarsWithFocus\n\n  const connectors = changeBars\n    .map(([id]) => {\n      const field = findMostSpecificTarget('field', id, byId)\n      const change = findMostSpecificTarget('change', id, byId)\n\n      if (!field || !change) return null\n\n      return {field: {id, ...field}, change: {id, ...change}}\n    })\n    .filter(isNonNullable)\n    // .filter(({field, change}) => field && change && field.element && change.element)\n    .map(({field, change}) => ({\n      hasHover: field.hasHover || change.hasHover,\n      hasFocus: field.hasFocus,\n      hasRevertHover: change.hasRevertHover,\n      field: {...field, ...getOffsetsTo(field.element, rootElement)},\n      change: {...change, ...getOffsetsTo(change.element, rootElement)},\n    }))\n\n  return {connectors, isHoverConnector}\n}\n\nexport function ConnectorsOverlay(props: ConnectorsOverlayProps) {\n  const {rootElement, onSetFocus} = props\n  const [hovered, setHovered] = useState<string | null>(null)\n  const allReportedValues = useReportedValues()\n  const byId: Map<string, TrackedChange | TrackedArea> = useMemo(\n    () => new Map(allReportedValues),\n    [allReportedValues],\n  )\n\n  const [{connectors}, setState] = useState<State>(() =>\n    getState(allReportedValues, hovered, byId, rootElement),\n  )\n\n  const visibleConnectors = useMemo(\n    () => sortBy(connectors, (c) => 0 - c.field.path.length).slice(0, 1),\n    [connectors],\n  )\n\n  const handleScrollOrResize = useCallback(() => {\n    setState(getState(allReportedValues, hovered, byId, rootElement))\n  }, [byId, allReportedValues, hovered, rootElement])\n\n  useResizeObserver(rootElement, handleScrollOrResize)\n\n  return (\n    <ScrollMonitor onScroll={handleScrollOrResize}>\n      <SvgWrapper style={{zIndex: visibleConnectors[0] && visibleConnectors[0].field.zIndex}}>\n        {visibleConnectors.map(({field, change}) => {\n          if (!change) {\n            return null\n          }\n\n          return (\n            <ConnectorGroup\n              field={field}\n              change={change}\n              key={field.id}\n              onSetFocus={onSetFocus}\n              setHovered={setHovered}\n            />\n          )\n        })}\n      </SvgWrapper>\n    </ScrollMonitor>\n  )\n}\n\ninterface ConnectorGroupProps {\n  field: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n  change: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n  setHovered: (id: string | null) => void\n  onSetFocus: (path: Path) => void\n}\n\nfunction ConnectorGroup(props: ConnectorGroupProps) {\n  const {change, field, onSetFocus, setHovered} = props\n\n  const onConnectorClick = useCallback(() => {\n    scrollIntoView(field)\n    scrollIntoView(change)\n    onSetFocus(field.path)\n  }, [field, change, onSetFocus])\n\n  const handleMouseEnter = useCallback(() => setHovered(field.id), [field, setHovered])\n  const handleMouseLeave = useCallback(() => setHovered(null), [setHovered])\n\n  const from = useMemo(\n    () => ({\n      rect: {\n        ...field.rect,\n        left: field.rect.left + 3,\n      },\n      bounds: field.bounds,\n    }),\n    [field.bounds, field.rect],\n  )\n\n  const to = useMemo(\n    () => ({\n      rect: {\n        ...change.rect,\n        left: change.rect.left + 1,\n      },\n      bounds: change.bounds,\n    }),\n    [change.bounds, change.rect],\n  )\n\n  return (\n    <>\n      <g onClick={onConnectorClick} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Connector from={from} to={to} />\n      </g>\n\n      {DEBUG_LAYER_BOUNDS && <DebugLayers field={field} change={change} />}\n    </>\n  )\n}\n","import {type Path} from '@sanity/types'\nimport {type ReactNode, useMemo, useState} from 'react'\n\nimport {ScrollContainer} from '../../components/scroll'\nimport {ConnectorContext} from '../ConnectorContext'\nimport {ENABLED} from '../constants'\nimport {Tracker} from '../tracker'\nimport {ConnectorsOverlay} from './ConnectorsOverlay'\n\n/** @internal */\nexport interface EnabledChangeConnectorRootProps {\n  children: ReactNode\n  className?: string\n  isReviewChangesOpen: boolean\n  onOpenReviewChanges: () => void\n  onSetFocus: (path: Path) => void\n}\n\n/** @internal */\nexport function EnabledChangeConnectorRoot({\n  children,\n  className,\n  isReviewChangesOpen,\n  onOpenReviewChanges,\n  onSetFocus,\n  ...restProps\n}: EnabledChangeConnectorRootProps) {\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>()\n\n  const contextValue = useMemo(\n    () => ({\n      isReviewChangesOpen,\n      onOpenReviewChanges,\n      onSetFocus,\n    }),\n    [isReviewChangesOpen, onOpenReviewChanges, onSetFocus],\n  )\n\n  return (\n    <ConnectorContext.Provider value={contextValue}>\n      <Tracker>\n        <ScrollContainer {...restProps} ref={setRootElement} className={className}>\n          {children}\n          {rootElement && <ConnectorsOverlay rootElement={rootElement} onSetFocus={onSetFocus} />}\n        </ScrollContainer>\n      </Tracker>\n    </ConnectorContext.Provider>\n  )\n}\n\n/** @internal */\nexport interface DisabledChangeConnectorRootProps {\n  className?: string\n  children: ReactNode\n}\n\n/** @internal */\nexport function DisabledChangeConnectorRoot({\n  children,\n  className,\n}: DisabledChangeConnectorRootProps) {\n  return <ScrollContainer className={className}>{children}</ScrollContainer>\n}\n\n/** @internal */\nexport const ChangeConnectorRoot = ENABLED\n  ? EnabledChangeConnectorRoot\n  : DisabledChangeConnectorRoot\n","import {Badge, type BadgeProps} from '@sanity/ui'\nimport {type HTMLProps} from 'react'\n\n/** @internal */\nexport type BetaBadgeProps = Omit<BadgeProps, 'mode' | 'tone'>\n\n/** @internal */\nexport function BetaBadge(props: BetaBadgeProps & Omit<HTMLProps<HTMLDivElement>, 'ref'>) {\n  const {fontSize = 1, children = 'Beta', ...rest} = props\n\n  return (\n    <Badge {...rest} fontSize={fontSize} radius={2} tone=\"primary\">\n      {children}\n    </Badge>\n  )\n}\n","export interface FaviconProps {\n  basePath: string\n}\n\nexport function Favicons({basePath}: FaviconProps) {\n  const base = `${basePath.replace(/\\/+$/, '')}/static`\n  return (\n    <>\n      <link rel=\"icon\" href={`${base}/favicon.ico`} sizes=\"any\" />\n      <link rel=\"icon\" href={`${base}/favicon.svg`} type=\"image/svg+xml\" />\n      <link rel=\"apple-touch-icon\" href={`${base}/apple-touch-icon.png`} />\n      <link rel=\"manifest\" href={`${base}/manifest.webmanifest`} />\n    </>\n  )\n}\n","const errorHandlerScript = `\n;(function () {\n  var _caughtErrors = []\n\n  var errorChannel = (function () {\n    var subscribers = []\n\n    function publish(msg) {\n      for (var i = 0; i < subscribers.length; i += 1) {\n        subscribers[i](msg)\n      }\n    }\n\n    function subscribe(subscriber) {\n      subscribers.push(subscriber)\n\n      return function () {\n        var idx = subscribers.indexOf(subscriber)\n\n        if (idx > -1) {\n          subscribers.splice(idx, 1)\n        }\n      }\n    }\n\n    return {publish, subscribe, subscribers}\n  })()\n\n  // NOTE: Store the error channel instance in the global scope so that the Studio application can\n  // access it and subscribe to errors.\n  window.__sanityErrorChannel = {\n    subscribe: errorChannel.subscribe,\n  }\n\n  function _nextTick(callback) {\n    setTimeout(callback, 0)\n  }\n\n  function _handleError(error, params) {\n    _nextTick(function () {\n      // - If there are error channel subscribers, then we notify them (no console error).\n      // - If there are no subscribers, then we log the error to the console and render the error overlay.\n      if (errorChannel.subscribers.length) {\n        errorChannel.publish({error, params})\n      } else {\n        console.error(error)\n\n        _renderErrorOverlay(error, params)\n      }\n    })\n  }\n\n  var ERROR_BOX_STYLE = [\n    'background: #fff',\n    'border-radius: 6px',\n    'box-sizing: border-box',\n    'color: #121923',\n    'flex: 1',\n    \"font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue','Liberation Sans',Helvetica,Arial,system-ui,sans-serif\",\n    'font-size: 16px',\n    'line-height: 21px',\n    'margin: 0 auto',\n    'max-width: 960px',\n    'overflow: auto',\n    'padding: 20px',\n    'width: 100%',\n  ].join(';')\n\n  var ERROR_CODE_STYLE = [\n    'color: #972E2A',\n    \"font-family: -apple-system-ui-monospace, 'SF Mono', Menlo, Monaco, Consolas, monospace\",\n    'font-size: 13px',\n    'line-height: 17px',\n    'margin: 0',\n  ].join(';')\n\n  function _renderErrorOverlay(error, params) {\n    var errorElement = document.querySelector('#__sanityError') || document.createElement('div')\n    var colno = params.event.colno\n    var lineno = params.event.lineno\n    var filename = params.event.filename\n\n    errorElement.id = '__sanityError'\n    errorElement.innerHTML = [\n      '<div style=\"' + ERROR_BOX_STYLE + '\">',\n      '<div style=\"font-weight: 700;\">Uncaught error: ' + error.message + '</div>',\n      '<div style=\"color: #515E72; font-size: 13px; line-height: 17px; margin: 10px 0;\">' +\n        filename +\n        ':' +\n        lineno +\n        ':' +\n        colno +\n        '</div>',\n      '<pre style=\"' + ERROR_CODE_STYLE + '\">' + error.stack + '</pre>',\n      '</div>',\n    ].join('')\n\n    errorElement.style.position = 'fixed'\n    errorElement.style.zIndex = 1000000\n    errorElement.style.top = 0\n    errorElement.style.left = 0\n    errorElement.style.right = 0\n    errorElement.style.bottom = 0\n    errorElement.style.padding = '20px'\n    errorElement.style.background = 'rgba(16,17,18,0.66)'\n    errorElement.style.display = 'flex'\n    errorElement.style.alignItems = 'center'\n    errorElement.style.justifyContent = 'center'\n\n    document.body.appendChild(errorElement)\n  }\n\n  // NOTE:\n  // Yes – we're attaching 2 error listeners below 👀\n  // This is because React makes the same error throw twice (in development mode).\n  // See: https://github.com/facebook/react/issues/10384\n\n  // Error listener #1\n  window.onerror = function (event, source, lineno, colno, error) {\n    _nextTick(function () {\n      if (_caughtErrors.indexOf(error) !== -1) return\n\n      _caughtErrors.push(error)\n\n      _handleError(error, {\n        event,\n        lineno,\n        colno,\n        source,\n      })\n\n      _nextTick(function () {\n        var idx = _caughtErrors.indexOf(error)\n\n        if (idx > -1) _caughtErrors.splice(idx, 1)\n      })\n    })\n\n    // IMPORTANT: this callback must return \\`true\\` to prevent the error from being rendered in\n    // the browser’s console.\n    return true\n  }\n\n  // Error listener #2\n  window.addEventListener('error', function (event) {\n    if (_caughtErrors.indexOf(event.error) !== -1) return true\n\n    _caughtErrors.push(event.error)\n\n    _handleError(event.error, {\n      event,\n      lineno: event.lineno,\n      colno: event.colno,\n    })\n\n    _nextTick(function () {\n      _nextTick(function () {\n        var idx = _caughtErrors.indexOf(event.error)\n\n        if (idx > -1) _caughtErrors.splice(idx, 1)\n      })\n    })\n\n    return true\n  })\n})()\n`\n\n/** @internal */\nexport function GlobalErrorHandler() {\n  // eslint-disable-next-line react/no-danger\n  return <script dangerouslySetInnerHTML={{__html: errorHandlerScript}} />\n}\n","/* eslint-disable i18next/no-literal-string,@sanity/i18n/no-attribute-string-literals */\nconst NoJsStyles = `\n.sanity-app-no-js__root {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background: #fff;\n}\n\n.sanity-app-no-js__content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-family: helvetica, arial, sans-serif;\n}\n`\n\n/** @internal */\nexport function NoJavascript() {\n  return (\n    <noscript>\n      <div className=\"sanity-app-no-js__root\">\n        <div className=\"sanity-app-no-js__content\">\n          <style type=\"text/css\">{NoJsStyles}</style>\n          <h1>JavaScript disabled</h1>\n          <p>\n            Please <a href=\"https://www.enable-javascript.com/\">enable JavaScript</a> in your\n            browser and reload the page to proceed.\n          </p>\n        </div>\n      </div>\n    </noscript>\n  )\n}\n","/* eslint-disable i18next/no-literal-string */\nimport {type ReactElement} from 'react'\n\nimport {Favicons} from './Favicons'\nimport {GlobalErrorHandler} from './globalErrorHandler'\nimport {NoJavascript} from './NoJavascript'\n\nconst globalStyles = `\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 400;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Regular.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 400;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Italic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Medium.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 500;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-MediumItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-SemiBold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 600;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-SemiBoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 700;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Bold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 700;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-BoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-ExtraBold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 800;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-ExtraBoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 900;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Black.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 900;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-BlackItalic.woff2\") format(\"woff2\");\n  }\n  html {\n    background-color: #f1f3f6;\n  }\n  html,\n  body,\n  #sanity {\n    height: 100%;\n  }\n  body {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n  }\n`\n\n/**\n * @hidden\n * @beta */\nexport interface DefaultDocumentProps {\n  entryPath: string\n  css?: string[]\n  basePath?: string\n}\n\nconst EMPTY_ARRAY: never[] = []\n\n/**\n * @hidden\n * @beta */\nexport function DefaultDocument(props: DefaultDocumentProps): ReactElement {\n  const {entryPath, css = EMPTY_ARRAY, basePath = '/'} = props\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, maximum-scale=1, viewport-fit=cover\"\n        />\n        <meta name=\"robots\" content=\"noindex\" />\n        <meta name=\"referrer\" content=\"same-origin\" />\n\n        <Favicons basePath={basePath} />\n\n        <title>Sanity Studio</title>\n\n        <GlobalErrorHandler />\n\n        {css.map((href) => (\n          <link key={href} rel=\"stylesheet\" href={href} />\n        ))}\n        {/* eslint-disable-next-line react/no-danger */}\n        <style dangerouslySetInnerHTML={{__html: globalStyles}} />\n      </head>\n      <body>\n        <div id=\"sanity\" />\n        <script type=\"module\" src={entryPath} />\n        <NoJavascript />\n      </body>\n    </html>\n  )\n}\n","import {type Config} from './types'\n\n/**\n * @hidden\n * @beta */\nexport function defineConfig<T extends Config>(config: T): T {\n  return config\n}\n\n/**\n * @deprecated Use `defineConfig` instead\n *\n * @hidden\n * @beta\n */\nexport function createConfig<T extends Config>(config: T): T {\n  return defineConfig(config)\n}\n","import {isString} from 'lodash'\n\nimport {type Plugin, type PluginOptions} from './types'\n\n/**\n * @hidden\n * @beta */\nexport type PluginFactory<TOptions> = (options: TOptions) => PluginOptions\n\nfunction validatePlugin(pluginResult: PluginOptions) {\n  // TODO: name is required etc\n  const messages = [\n    'projectId' in pluginResult && '`projectId` not allowed in plugin configuration',\n    'dataset' in pluginResult && '`dataset` not allowed in plugin configuration',\n  ].filter(isString)\n\n  if (messages.length)\n    throw new Error(\n      `Invalid plugin configuration:\\n${messages.map((message) => `\\t${message}`).join('\\n')}`,\n    )\n}\n\n/**\n * @hidden\n * @beta */\nexport function definePlugin<TOptions = void>(\n  arg: PluginFactory<TOptions> | PluginOptions,\n): Plugin<TOptions> {\n  if (typeof arg === 'function') {\n    const pluginFactory = arg\n\n    return (options: TOptions) => {\n      // TODO: there's a possiblity of passing default arguments to users'\n      // plugin factories or reading from default options in `TOptions`\n      const result = pluginFactory(options)\n\n      validatePlugin(result)\n      return result\n    }\n  }\n\n  validatePlugin(arg)\n  return () => arg\n}\n\n/**\n * @deprecated Use `definePlugin` instead\n *\n * @hidden\n * @beta\n */\nexport function createPlugin<TOptions = void>(\n  arg: PluginFactory<TOptions> | PluginOptions,\n): Plugin<TOptions> {\n  return definePlugin(arg)\n}\n","import {type DocumentFieldAction} from './types'\n\n/** @internal */\nexport function defineDocumentFieldAction(fieldAction: DocumentFieldAction): DocumentFieldAction {\n  return fieldAction\n}\n","import {type ButtonTone} from '@sanity/ui'\nimport {type ComponentType} from 'react'\n\n/** @hidden @beta */\nexport interface DocumentInspectorProps {\n  documentId: string\n  documentType: string\n  onClose: () => void\n}\n\n/** @hidden @beta */\nexport type DocumentInspectorComponent = ComponentType<DocumentInspectorProps>\n\n/** @hidden @beta */\nexport interface DocumentInspectorUseMenuItemProps {\n  documentId: string\n  documentType: string\n}\n\n/** @hidden @beta */\nexport interface DocumentInspectorMenuItem {\n  hidden?: boolean\n  hotkeys?: string[]\n  icon?: ComponentType\n  showAsAction?: boolean\n  status?: ButtonTone\n  title: string\n  tone?: ButtonTone\n}\n\n/** @hidden @beta */\nexport interface DocumentInspector {\n  name: string\n  component: DocumentInspectorComponent\n  /**\n   * Hook for defining a menu item for the inspector.\n   */\n  useMenuItem?: (props: DocumentInspectorUseMenuItemProps) => DocumentInspectorMenuItem\n\n  /**\n   * Callback for when the inspector is closed, which can be used to clean up custom document pane\n   * parameters.\n   */\n  onClose?: (ctx: {params: Record<string, string | undefined>}) => {\n    params: Record<string, string | undefined>\n  }\n\n  /**\n   * Callback for when the inspector is opened, which can be used to set custom document pane\n   * parameters.\n   */\n  onOpen?: (ctx: {params: Record<string, string | undefined>}) => {\n    params: Record<string, string | undefined>\n  }\n}\n\n/**\n * Define a document inspector to be used in Sanity configuration.\n *\n * @example\n *\n * ```ts\n * // sanity.config.ts\n *\n * import {RocketIcon} from '@sanity/icons'\n * import {defineConfig, defineDocumentInspector} from 'sanity'\n *\n * const customInspector = defineDocumentInspector({\n *   name: 'custom',\n *   useMenuItem: () => ({\n *     icon: RocketIcon,\n *     showAsAction: true,\n *     title: 'Custom'\n *   }),\n *   component: lazy(() => import('./inspectors/custom')),\n * })\n *\n * export default defineConfig({\n *   // ...\n *\n *   document: {\n *     inspectors: (prev) => [customInspector, ...prev],\n *   },\n * })\n * ```\n *\n * @hidden @beta\n * */\nexport function defineDocumentInspector(inspector: DocumentInspector): DocumentInspector {\n  return inspector\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser} from '@sanity/types'\nimport {of} from 'rxjs'\n\nimport {type AuthStore} from './types'\n\n/** @internal */\nexport interface MockAuthStoreOptions {\n  currentUser: CurrentUser | null\n  client: SanityClient\n}\n\n/**\n * Creates a mock `AuthStore` (for testing) that emits an `AuthState` derived\n * from the `client` and `currentUser` given.\n *\n * @internal\n */\nexport function createMockAuthStore({client, currentUser = null}: MockAuthStoreOptions): AuthStore {\n  return {\n    state: of({authenticated: true, client, currentUser}),\n  }\n}\n","import {isKeyedObject} from '@sanity/types'\n\nexport function isEqual(item: unknown, otherItem: unknown): boolean {\n  if (item === otherItem) {\n    return true\n  }\n\n  if (typeof item !== typeof otherItem) {\n    return false\n  }\n\n  if (typeof item !== 'object' && !Array.isArray(item)) {\n    return item === otherItem\n  }\n\n  if (isKeyedObject(item) && isKeyedObject(otherItem) && item._key === otherItem._key) {\n    return true\n  }\n\n  if (Array.isArray(item) && Array.isArray(otherItem)) {\n    if (item.length !== otherItem.length) {\n      return false\n    }\n\n    return item.every((child, i) => isEqual(child, otherItem[i]))\n  }\n\n  if (item === null || otherItem === null) {\n    return item === otherItem\n  }\n\n  const obj = item as Record<string, unknown>\n  const otherObj = otherItem as Record<string, unknown>\n\n  const keys = Object.keys(obj)\n  const otherKeys = Object.keys(otherObj)\n  if (keys.length !== otherKeys.length) {\n    return false\n  }\n\n  return keys.every((keyName) => isEqual(obj[keyName], otherObj[keyName]))\n}\n","import {type ArraySchemaType, isKeyedObject, type SchemaType, type TypedObject} from '@sanity/types'\nimport {Box, Flex} from '@sanity/ui'\n\nimport {useTranslation} from '../../../../i18n'\nimport {Preview} from '../../../../preview/components/Preview'\nimport {useUserColorManager} from '../../../../user-color'\nimport {DiffTooltip, FromToArrow, getAnnotationColor} from '../../../diff'\nimport {\n  type Annotation,\n  type ArrayDiff,\n  type Diff,\n  type DiffComponent,\n  type ItemDiff,\n} from '../../../types'\nimport {Checkbox} from '../../boolean/preview'\nimport {isEqual} from '../util/arrayUtils'\n\ninterface NamedListOption {\n  title?: string\n  value: unknown\n}\n\ninterface NormalizedListOption {\n  title?: string\n  value: unknown\n  memberType?: Exclude<SchemaType, ArraySchemaType>\n  isPresent: boolean\n  annotation: Annotation\n  itemIndex: number\n}\n\nexport const ArrayOfOptionsFieldDiff: DiffComponent<ArrayDiff> = ({diff, schemaType}) => {\n  const options = schemaType.options?.list\n  const colorManager = useUserColorManager()\n  const {t} = useTranslation()\n  if (!Array.isArray(options)) {\n    // Shouldn't happen, because the resolver should only resolve here if it does\n    return null\n  }\n\n  return (\n    <div>\n      {diff.items\n        .map((item) => normalizeItems(item, diff, schemaType))\n        .filter((item): item is NormalizedListOption => item !== null)\n        .sort(sortItems)\n        .map((item, index) => {\n          const {annotation, isPresent, value, memberType, title} = item\n          const color = getAnnotationColor(colorManager, annotation)\n          const action = isPresent ? t('changes.added-label') : t('changes.removed-label')\n          return (\n            <Flex align=\"center\" key={getItemKey(diff, index)}>\n              <DiffTooltip annotations={annotation ? [annotation] : []} description={action}>\n                <Flex align=\"center\">\n                  <Checkbox checked={!isPresent} color={color} />\n                  <Box margin={2}>\n                    <FromToArrow />\n                  </Box>\n                  <Checkbox checked={isPresent} color={color} />\n                </Flex>\n              </DiffTooltip>\n              <Flex align=\"center\">\n                <ItemPreview value={title || value} memberType={memberType} />\n              </Flex>\n            </Flex>\n          )\n        })}\n    </div>\n  )\n}\n\nfunction normalizeItems(\n  item: ItemDiff,\n  parentDiff: ArrayDiff,\n  schemaType: ArraySchemaType,\n): NormalizedListOption | null {\n  if (item.diff.action === 'unchanged') {\n    return null\n  }\n\n  const {fromValue, toValue} = parentDiff\n  const value = getValue(item.diff)\n  const wasPresent = isInArray(value, fromValue)\n  const isPresent = isInArray(value, toValue)\n  if (wasPresent === isPresent) {\n    return null\n  }\n\n  return {\n    title: getItemTitle(value, schemaType),\n    memberType: resolveMemberType(getValue(item.diff), schemaType),\n    itemIndex: getOptionIndex(value, schemaType),\n    annotation: item.annotation,\n    isPresent,\n    value,\n  }\n}\n\nfunction sortItems(itemA: NormalizedListOption, itemB: NormalizedListOption): number {\n  return itemA.itemIndex - itemB.itemIndex\n}\n\nfunction ItemPreview({value, memberType}: {memberType?: SchemaType; value: unknown}) {\n  return (\n    <Box marginX={2} marginY={1}>\n      {typeof value === 'string' || typeof value === 'number' ? (\n        value\n      ) : (\n        <Preview schemaType={memberType!} value={value as any} layout=\"default\" />\n      )}\n    </Box>\n  )\n}\n\nfunction isInArray(value: unknown, parent?: unknown[] | null): boolean {\n  const array = parent || []\n  return typeof value === 'object' && value !== null\n    ? array.some((item) => isEqual(item, value))\n    : array.includes(value)\n}\n\nfunction getItemKey(diff: Diff, index: number): string | number {\n  const value = diff.toValue || diff.fromValue\n  return isKeyedObject(value) ? value._key : index\n}\n\nfunction getValue(diff: Diff) {\n  return typeof diff.toValue === 'undefined' ? diff.fromValue : diff.toValue\n}\n\nfunction resolveMemberType(item: unknown, schemaType: ArraySchemaType) {\n  const itemTypeName = resolveTypeName(item)\n  return schemaType.of.find((memberType) => memberType.name === itemTypeName)\n}\n\nfunction resolveTypeName(value: unknown): string {\n  const jsType = resolveJSType(value)\n  if (jsType !== 'object') {\n    return jsType\n  }\n\n  const obj = value as TypedObject\n  return ('_type' in obj && obj._type) || jsType\n}\n\nfunction resolveJSType(val: unknown) {\n  if (val === null) {\n    return 'null'\n  }\n\n  if (Array.isArray(val)) {\n    return 'array'\n  }\n\n  return typeof val\n}\n\nfunction isNamedOption(item: unknown | NamedListOption): item is NamedListOption {\n  return typeof item === 'object' && item !== null && 'title' in item\n}\n\nfunction getOptionIndex(item: unknown, schemaType: ArraySchemaType): number {\n  const list = schemaType.options?.list || []\n  return list.findIndex((opt) => isEqual(isNamedOption(opt) ? opt.value : opt, item))\n}\n\nfunction getItemTitle(item: unknown, schemaType: ArraySchemaType): string | undefined {\n  const list = (schemaType.options?.list || []) as NamedListOption[]\n  const index = getOptionIndex(item, schemaType)\n  return index === -1 ? undefined : list[index].title || undefined\n}\n","import {DiffFromTo} from '../../../diff'\nimport {type DiffComponent, type ObjectDiff} from '../../../types'\nimport {SlugPreview} from '../preview'\n\ninterface Slug {\n  current?: string\n}\n\nexport const SlugFieldDiff: DiffComponent<ObjectDiff<Slug>> = ({diff, schemaType}) => {\n  return (\n    <DiffFromTo\n      layout=\"inline\"\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={SlugPreview}\n    />\n  )\n}\n","import {DiffFromTo} from '../../../diff'\nimport {type DiffComponent, type StringDiff} from '../../../types'\nimport {StringPreview} from '../../string/preview'\n\nexport const UrlFieldDiff: DiffComponent<StringDiff> = ({diff, schemaType}) => {\n  return <DiffFromTo diff={diff} schemaType={schemaType} previewComponent={StringPreview} />\n}\n","import {type DiffComponentResolver} from '../../types'\nimport {ArrayOfOptionsFieldDiff} from '../../types/array/diff'\nimport {DatetimeFieldDiff} from '../../types/datetime/diff'\nimport {SlugFieldDiff} from '../../types/slug/diff'\nimport {UrlFieldDiff} from '../../types/url/diff'\n\n/** @internal */\nexport const diffResolver: DiffComponentResolver = ({schemaType}) => {\n  // datetime or date\n  if (['datetime', 'date'].includes(schemaType.name)) {\n    return DatetimeFieldDiff\n  }\n\n  if (schemaType.name === 'url') {\n    return UrlFieldDiff\n  }\n\n  if (schemaType.name === 'slug') {\n    return SlugFieldDiff\n  }\n\n  if (schemaType.jsonType === 'array' && Array.isArray(schemaType.options?.list)) {\n    return ArrayOfOptionsFieldDiff\n  }\n\n  return undefined\n}\n","import {type Path} from '@sanity/types'\nimport {type PropsWithChildren, useCallback, useMemo, useState} from 'react'\n\nimport {pathToString} from '../../field'\nimport {HoveredFieldContext, type HoveredFieldContextValue} from './HoveredFieldContext'\n\n/** @internal */\nexport function HoveredFieldProvider(props: PropsWithChildren) {\n  const {children} = props\n  const [hoveredStack, setHoveredStack] = useState<string[]>([])\n\n  const handleMouseEnter = useCallback((path: Path) => {\n    const pathString = pathToString(path)\n\n    setHoveredStack((prev) => {\n      if (prev.includes(pathString)) {\n        return prev\n      }\n\n      return [pathString, ...prev]\n    })\n  }, [])\n\n  const handleMouseLeave = useCallback((path: Path) => {\n    const pathString = pathToString(path)\n\n    setHoveredStack((prev) => {\n      if (prev.includes(pathString)) {\n        return prev.filter((item) => item !== pathString)\n      }\n\n      return prev\n    })\n  }, [])\n\n  const context: HoveredFieldContextValue = useMemo(\n    () => ({\n      hoveredStack,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n    }),\n    [handleMouseEnter, handleMouseLeave, hoveredStack],\n  )\n\n  return <HoveredFieldContext.Provider value={context}>{children}</HoveredFieldContext.Provider>\n}\n","import {type Path} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ReactNode, useContext, useMemo} from 'react'\n\nimport {FormFieldPresenceContext} from './context'\n\nconst EMPTY_ARRAY: never[] = []\n\nfunction trimChildPath(path: Path, childPath: Path) {\n  return PathUtils.startsWith(path, childPath) ? PathUtils.trimLeft(path, childPath) : EMPTY_ARRAY\n}\n\n/** @internal */\nexport interface PresenceScopeProps {\n  readOnly?: boolean\n  path: Path\n  children: ReactNode\n}\n\n/** @internal */\nexport function PresenceScope(props: PresenceScopeProps) {\n  const {readOnly, path, children} = props\n  const contextPresence = useContext(FormFieldPresenceContext)\n\n  const childPresence = useMemo(() => {\n    return readOnly\n      ? EMPTY_ARRAY\n      : (contextPresence || EMPTY_ARRAY)\n          .filter((presence) => {\n            return PathUtils.startsWith(path, presence.path)\n          })\n          .map((presence) => ({\n            ...presence,\n            path: trimChildPath(path, presence.path),\n          }))\n  }, [contextPresence, path, readOnly])\n\n  return (\n    <FormFieldPresenceContext.Provider value={childPresence}>\n      {children}\n    </FormFieldPresenceContext.Provider>\n  )\n}\n","import {type FormPatch} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface MutationPatchMsg {\n  type: 'mutation'\n  patches: FormPatch[]\n  snapshot: unknown\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface RebasePatchMsg {\n  type: 'rebase'\n  patches: FormPatch[]\n  snapshot: unknown\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport type PatchMsg = MutationPatchMsg | RebasePatchMsg\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface PatchMsgSubscriber {\n  (msg: PatchMsg): void\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface PatchChannel {\n  publish: (msg: PatchMsg) => void\n  subscribe: (subscriber: PatchMsgSubscriber) => () => void\n}\n\n/**\n * @internal\n */\nexport function createPatchChannel(): PatchChannel {\n  const _subscribers: PatchMsgSubscriber[] = []\n\n  return {\n    publish(msg: PatchMsg) {\n      for (const subscriber of _subscribers) {\n        subscriber(msg)\n      }\n    },\n\n    subscribe(subscriber) {\n      _subscribers.push(subscriber)\n\n      return () => {\n        const idx = _subscribers.indexOf(subscriber)\n\n        if (idx > -1) {\n          _subscribers.splice(idx, 1)\n        }\n      }\n    },\n  }\n}\n","import {type ArrayOfObjectsMember} from '../../store'\nimport {\n  type RenderAnnotationCallback,\n  type RenderArrayOfObjectsItemCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderPreviewCallback,\n} from '../../types'\nimport {ArrayOfObjectsItem} from './items/ArrayOfObjectsItem'\nimport {MemberItemError} from './MemberItemError'\n\n/** @internal */\nexport interface ArrayOfObjectsMemberProps {\n  member: ArrayOfObjectsMember\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderField: RenderFieldCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderItem: RenderArrayOfObjectsItemCallback\n  renderPreview: RenderPreviewCallback\n}\n\n/**\n * Convenience component for rendering an \"array of objects\"-item\n * @internal\n */\nexport function ArrayOfObjectsInputMember(props: ArrayOfObjectsMemberProps) {\n  const {\n    member,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n  } = props\n  if (member.kind === 'item') {\n    return (\n      <ArrayOfObjectsItem\n        key={member.key}\n        member={member}\n        renderAnnotation={renderAnnotation}\n        renderBlock={renderBlock}\n        renderField={renderField}\n        renderInlineBlock={renderInlineBlock}\n        renderInput={renderInput}\n        renderItem={renderItem}\n        renderPreview={renderPreview}\n      />\n    )\n  }\n  if (member.kind === 'error') {\n    return <MemberItemError key={member.key} member={member} />\n  }\n\n  //@ts-expect-error The branching above should cover all possible cases\n  console.warn(new Error(`Unhandled member kind ${member.kind}`))\n  return null\n}\n","import {type ArrayOfObjectsMember} from '../../store'\nimport {\n  type RenderAnnotationCallback,\n  type RenderArrayOfObjectsItemCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderPreviewCallback,\n} from '../../types'\nimport {ArrayOfObjectsInputMember} from './ArrayOfObjectsInputMember'\n\n/** @internal */\nexport interface ArrayOfObjectsInputMembersProps {\n  members: ArrayOfObjectsMember[]\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderField: RenderFieldCallback\n  renderItem: RenderArrayOfObjectsItemCallback\n  renderPreview: RenderPreviewCallback\n}\n\n/**\n * Convenience component for wrapping an array of objects\n * @internal\n */\nexport function ArrayOfObjectsInputMembers(props: ArrayOfObjectsInputMembersProps) {\n  const {members, ...rest} = props\n  return (\n    <>\n      {members.map((member) => (\n        <ArrayOfObjectsInputMember key={member.key} member={member} {...rest} />\n      ))}\n    </>\n  )\n}\n","import {useContext} from 'react'\n\nimport {ReviewChangesContext} from './ReviewChangesContext'\nimport {type ReviewChangesContextValue} from './types'\n\n/**\n * @internal\n */\nexport function useReviewChanges(): ReviewChangesContextValue {\n  const reviewChanges = useContext(ReviewChangesContext)\n\n  if (!reviewChanges) {\n    throw new Error('Review changes: missing context value')\n  }\n\n  return reviewChanges\n}\n","import {createElement} from 'react'\n\nimport {Preview} from '../../preview/components/Preview'\nimport {\n  type RenderAnnotationCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderItemCallback,\n  type RenderPreviewCallback,\n} from '../types'\nimport {\n  defaultResolveAnnotationComponent,\n  defaultResolveBlockComponent,\n  defaultResolveInlineBlockComponent,\n} from './inputResolver/blockResolver'\nimport {defaultResolveFieldComponent} from './inputResolver/fieldResolver'\nimport {defaultResolveInputComponent} from './inputResolver/inputResolver'\nimport {defaultResolveItemComponent} from './inputResolver/itemResolver'\n\n/** @internal */\nexport const defaultRenderAnnotation: RenderAnnotationCallback = (props) => {\n  return createElement(defaultResolveAnnotationComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderBlock: RenderBlockCallback = (props) => {\n  return createElement(defaultResolveBlockComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderInlineBlock: RenderBlockCallback = (props) => {\n  return createElement(defaultResolveInlineBlockComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderField: RenderFieldCallback = (props) => {\n  return createElement(defaultResolveFieldComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderInput: RenderInputCallback = (props) => {\n  return createElement(defaultResolveInputComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderItem: RenderItemCallback = (props) => {\n  return createElement(defaultResolveItemComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderPreview: RenderPreviewCallback = (props) => {\n  return createElement(Preview, props)\n}\n","/* eslint-disable i18next/no-literal-string */\nimport {Text} from '@sanity/ui'\n\n// This is the fallback marker renderer if the block editor didn't get the 'renderCustomMarkers' prop\n// You will probably only see this when you first start to play with custom markers as a developer\nexport function DefaultCustomMarkers() {\n  return (\n    <Text size={1}>\n      This is a example custom marker, please implement <code>renderCustomMarkers</code> function.\n    </Text>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {type ReactNode, useMemo} from 'react'\n\nimport {type DocumentFieldAction, type Source} from '../config'\nimport {type FormNodePresence} from '../presence'\nimport {EMPTY_ARRAY} from '../util'\nimport {DocumentIdProvider} from './contexts/DocumentIdProvider'\nimport {HoveredFieldProvider} from './field'\nimport {FormBuilderContext, type FormBuilderContextValue} from './FormBuilderContext'\nimport {ArrayOfObjectsFunctions} from './inputs/arrays/ArrayOfObjectsInput/ArrayOfObjectsFunctions'\nimport {DefaultCustomMarkers} from './inputs/PortableText/_legacyDefaultParts/CustomMarkers'\nimport {DefaultMarkers} from './inputs/PortableText/_legacyDefaultParts/Markers'\nimport {type PatchChannel, type PatchEvent} from './patch'\nimport {type FormFieldGroup, type StateTree} from './store'\nimport {FormCallbacksProvider} from './studio/contexts/FormCallbacks'\nimport {PresenceProvider} from './studio/contexts/Presence'\nimport {ValidationProvider} from './studio/contexts/Validation'\nimport {\n  type FormBuilderFilterFieldFn,\n  type RenderAnnotationCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderItemCallback,\n  type RenderPreviewCallback,\n} from './types'\n\nexport interface FormBuilderProviderProps {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal */\n  __internal_patchChannel?: PatchChannel // eslint-disable-line camelcase\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  children?: ReactNode\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  file: Source['form']['file']\n  filterField?: FormBuilderFilterFieldFn\n  focusPath: Path\n  focused?: boolean\n  groups: FormFieldGroup[]\n  id: string\n  image: Source['form']['image']\n  onChange: (event: PatchEvent) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderField: RenderFieldCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderItem: RenderItemCallback\n  renderPreview: RenderPreviewCallback\n  schemaType: ObjectSchemaType\n  unstable?: Source['form']['unstable']\n  validation: ValidationMarker[]\n}\n\nconst missingPatchChannel: PatchChannel = {\n  publish: () => undefined,\n  subscribe: () => {\n    console.warn(\n      'No patch channel provided to form-builder. If you need input based patch updates, please provide one',\n    )\n\n    return () => undefined\n  },\n}\n\nexport function FormBuilderProvider(props: FormBuilderProviderProps) {\n  const {\n    __internal_fieldActions: fieldActions = EMPTY_ARRAY,\n    __internal_patchChannel: patchChannel = missingPatchChannel,\n    autoFocus,\n    changesOpen,\n    children,\n    collapsedFieldSets,\n    collapsedPaths,\n    file,\n    filterField,\n    focusPath,\n    focused,\n    groups,\n    id,\n    image,\n    onChange,\n    onFieldGroupSelect,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onSetFieldSetCollapsed,\n    onSetPathCollapsed,\n    presence,\n    readOnly,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n    schemaType,\n    unstable,\n    validation,\n  } = props\n\n  const __internal: FormBuilderContextValue['__internal'] = useMemo(\n    () => ({\n      patchChannel, // eslint-disable-line camelcase\n      components: {\n        ArrayFunctions: ArrayOfObjectsFunctions,\n        CustomMarkers: unstable?.CustomMarkers || DefaultCustomMarkers,\n        Markers: unstable?.Markers || DefaultMarkers,\n      },\n      field: {\n        actions: fieldActions,\n      },\n      file: {\n        assetSources: file.assetSources,\n        directUploads: file?.directUploads !== false,\n      },\n      filterField: filterField || (() => true),\n      image: {\n        assetSources: image.assetSources,\n        directUploads: image?.directUploads !== false,\n      },\n      onChange,\n    }),\n    [\n      fieldActions,\n      file.assetSources,\n      file?.directUploads,\n      filterField,\n      image.assetSources,\n      image?.directUploads,\n      onChange,\n      patchChannel,\n      unstable?.CustomMarkers,\n      unstable?.Markers,\n    ],\n  )\n\n  const formBuilder: FormBuilderContextValue = useMemo(\n    () => ({\n      __internal,\n      autoFocus,\n      changesOpen,\n      collapsedFieldSets,\n      collapsedPaths,\n      focusPath,\n      focused,\n      groups,\n      id,\n      readOnly,\n      renderAnnotation,\n      renderBlock,\n      renderField,\n      renderInlineBlock,\n      renderInput,\n      renderItem,\n      renderPreview,\n      schemaType,\n    }),\n    [\n      __internal,\n      autoFocus,\n      changesOpen,\n      collapsedFieldSets,\n      collapsedPaths,\n      focusPath,\n      focused,\n      groups,\n      id,\n      readOnly,\n      renderAnnotation,\n      renderBlock,\n      renderField,\n      renderInlineBlock,\n      renderInput,\n      renderItem,\n      renderPreview,\n      schemaType,\n    ],\n  )\n\n  return (\n    <FormBuilderContext.Provider value={formBuilder}>\n      <FormCallbacksProvider\n        onChange={onChange}\n        onFieldGroupSelect={onFieldGroupSelect}\n        onPathBlur={onPathBlur}\n        onPathFocus={onPathFocus}\n        onPathOpen={onPathOpen}\n        onSetPathCollapsed={onSetPathCollapsed}\n        onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      >\n        <DocumentIdProvider id={id}>\n          <PresenceProvider presence={presence}>\n            <ValidationProvider validation={validation}>\n              <HoveredFieldProvider>{children}</HoveredFieldProvider>\n            </ValidationProvider>\n          </PresenceProvider>\n        </DocumentIdProvider>\n      </FormCallbacksProvider>\n    </FormBuilderContext.Provider>\n  )\n}\n","import {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\n\nimport {type DocumentFieldAction} from '../../config'\nimport {type FormNodePresence} from '../../presence'\nimport {PreviewLoader} from '../../preview/components/PreviewLoader'\nimport {useSource} from '../../studio'\nimport {\n  useAnnotationComponent,\n  useBlockComponent,\n  useFieldComponent,\n  useInlineBlockComponent,\n  useInputComponent,\n  useItemComponent,\n  usePreviewComponent,\n} from '../form-components-hooks'\nimport {FormBuilderProvider} from '../FormBuilderProvider'\nimport {type PatchChannel, type PatchEvent} from '../patch'\nimport {type FormFieldGroup, type StateTree} from '../store'\nimport {\n  type BlockAnnotationProps,\n  type BlockProps,\n  type FieldProps,\n  type InputProps,\n  type ItemProps,\n  type RenderPreviewCallbackProps,\n} from '../types'\n\n/**\n * @alpha This API might change.\n */\nexport interface FormProviderProps {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal Considered internal, do not use. */\n  __internal_patchChannel: PatchChannel\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  children?: ReactNode\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  focusPath: Path\n  focused: boolean | undefined\n  groups: FormFieldGroup[]\n  id: string\n  onChange: (changeEvent: PatchEvent) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  schemaType: ObjectSchemaType\n  validation: ValidationMarker[]\n}\n\n/**\n * Default wiring for `FormBuilderProvider` when used with Sanity\n *\n * @alpha This API might change.\n */\nexport function FormProvider(props: FormProviderProps) {\n  const {\n    __internal_fieldActions: fieldActions,\n    __internal_patchChannel: patchChannel,\n    autoFocus,\n    changesOpen,\n    children,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    focused,\n    groups,\n    id,\n    onChange,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onFieldGroupSelect,\n    onSetPathCollapsed,\n    onSetFieldSetCollapsed,\n    presence,\n    readOnly,\n    schemaType,\n    validation,\n  } = props\n\n  const {file, image} = useSource().form\n\n  // These hooks may be stored in context as an perf optimization\n  const Input = useInputComponent()\n  const Field = useFieldComponent()\n  const Preview = usePreviewComponent()\n  const Item = useItemComponent()\n  const Block = useBlockComponent()\n  const InlineBlock = useInlineBlockComponent()\n  const Annotation = useAnnotationComponent()\n\n  const renderInput = useCallback(\n    (inputProps: Omit<InputProps, 'renderDefault'>) => <Input {...inputProps} />,\n    [Input],\n  )\n  const renderField = useCallback(\n    (fieldProps: Omit<FieldProps, 'renderDefault'>) => <Field {...fieldProps} />,\n    [Field],\n  )\n  const renderItem = useCallback(\n    (itemProps: Omit<ItemProps, 'renderDefault'>) => <Item {...itemProps} />,\n    [Item],\n  )\n  const renderPreview = useCallback(\n    (previewProps: RenderPreviewCallbackProps) => (\n      <PreviewLoader component={Preview} {...previewProps} />\n    ),\n    [Preview],\n  )\n  const renderBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <Block {...blockProps} />,\n    [Block],\n  )\n  const renderInlineBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <InlineBlock {...blockProps} />,\n    [InlineBlock],\n  )\n  const renderAnnotation = useCallback(\n    (annotationProps: Omit<BlockAnnotationProps, 'renderDefault'>) => (\n      <Annotation {...annotationProps} />\n    ),\n    [Annotation],\n  )\n\n  return (\n    <FormBuilderProvider\n      __internal_fieldActions={fieldActions}\n      __internal_patchChannel={patchChannel}\n      autoFocus={autoFocus}\n      changesOpen={changesOpen}\n      collapsedFieldSets={collapsedFieldSets}\n      collapsedPaths={collapsedPaths}\n      file={file}\n      focusPath={focusPath}\n      focused={focused}\n      groups={groups}\n      id={id}\n      image={image}\n      onChange={onChange}\n      onPathBlur={onPathBlur}\n      onPathFocus={onPathFocus}\n      onPathOpen={onPathOpen}\n      onFieldGroupSelect={onFieldGroupSelect}\n      onSetPathCollapsed={onSetPathCollapsed}\n      onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      presence={presence}\n      readOnly={readOnly}\n      renderAnnotation={renderAnnotation}\n      renderBlock={renderBlock}\n      renderField={renderField}\n      renderInlineBlock={renderInlineBlock}\n      renderInput={renderInput}\n      renderItem={renderItem}\n      renderPreview={renderPreview}\n      schemaType={schemaType}\n      validation={validation}\n    >\n      {children}\n    </FormBuilderProvider>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable react/jsx-handler-names */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {useCallback, useRef} from 'react'\n\nimport {type DocumentFieldAction} from '../../config'\nimport {type FormNodePresence} from '../../presence'\nimport {PreviewLoader} from '../../preview'\nimport {EMPTY_ARRAY} from '../../util'\nimport {FormValueProvider} from '../contexts/FormValue'\nimport {GetFormValueProvider} from '../contexts/GetFormValue'\nimport {\n  useAnnotationComponent,\n  useBlockComponent,\n  useFieldComponent,\n  useInlineBlockComponent,\n  useInputComponent,\n  useItemComponent,\n  usePreviewComponent,\n} from '../form-components-hooks'\nimport {type FormPatch, type PatchChannel, PatchEvent} from '../patch'\nimport {type StateTree} from '../store'\nimport {type ObjectFormNode} from '../store/types/nodes'\nimport {\n  type BlockAnnotationProps,\n  type BlockProps,\n  type FieldProps,\n  type FormDocumentValue,\n  type InputProps,\n  type ItemProps,\n  type ObjectInputProps,\n  type RenderPreviewCallbackProps,\n} from '../types'\nimport {DocumentFieldActionsProvider} from './contexts/DocumentFieldActions'\nimport {FormProvider} from './FormProvider'\n\n/**\n * @alpha\n */\nexport interface FormBuilderProps\n  extends Omit<ObjectFormNode, 'level' | 'path' | 'presence' | 'validation' | '_allMembers'> {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal Considered internal – do not use. */\n  __internal_patchChannel: PatchChannel\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  focusPath: Path\n  focused: boolean | undefined\n  id: string\n  onChange: (changeEvent: PatchEvent) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  schemaType: ObjectSchemaType\n  validation: ValidationMarker[]\n  value: FormDocumentValue | undefined\n}\n\n/**\n * @alpha\n */\nexport function FormBuilder(props: FormBuilderProps) {\n  const {\n    __internal_fieldActions: fieldActions,\n    __internal_patchChannel: patchChannel,\n    autoFocus,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    focused,\n    groups,\n    id,\n    members,\n    onChange,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onFieldGroupSelect,\n    onSetFieldSetCollapsed,\n    onSetPathCollapsed,\n    presence,\n    readOnly,\n    schemaType,\n    validation,\n    value,\n  } = props\n\n  const handleCollapseField = useCallback(\n    (fieldName: string) => onSetPathCollapsed([fieldName], true),\n    [onSetPathCollapsed],\n  )\n\n  const handleExpandField = useCallback(\n    (fieldName: string) => onSetPathCollapsed([fieldName], false),\n    [onSetPathCollapsed],\n  )\n\n  const handleBlur = useCallback(() => onPathBlur(EMPTY_ARRAY), [onPathBlur])\n\n  const handleFocus = useCallback(() => onPathFocus(EMPTY_ARRAY), [onPathFocus])\n\n  const handleChange = useCallback(\n    (patch: FormPatch | FormPatch[] | PatchEvent) => onChange(PatchEvent.from(patch)),\n    [onChange],\n  )\n\n  const focusRef = useRef(null)\n\n  const handleSelectFieldGroup = useCallback(\n    (groupName: string) => onFieldGroupSelect(EMPTY_ARRAY, groupName),\n    [onFieldGroupSelect],\n  )\n\n  const handleOpenField = useCallback((fieldName: string) => onPathOpen([fieldName]), [onPathOpen])\n\n  const handleCloseField = useCallback(() => onPathOpen([]), [onPathOpen])\n\n  const handleCollapseFieldSet = useCallback(\n    (fieldSetName: string) => onSetFieldSetCollapsed([fieldSetName], true),\n    [onSetFieldSetCollapsed],\n  )\n\n  const handleExpandFieldSet = useCallback(\n    (fieldSetName: string) => onSetFieldSetCollapsed([fieldSetName], false),\n    [onSetFieldSetCollapsed],\n  )\n  // These hooks may be stored in context as an perf optimization\n  const Input = useInputComponent()\n  const Field = useFieldComponent()\n  const Preview = usePreviewComponent()\n  const Item = useItemComponent()\n  const Block = useBlockComponent()\n  const InlineBlock = useInlineBlockComponent()\n  const Annotation = useAnnotationComponent()\n\n  const renderInput = useCallback(\n    (inputProps: Omit<InputProps, 'renderDefault'>) => <Input {...inputProps} />,\n    [Input],\n  )\n  const renderField = useCallback(\n    (fieldProps: Omit<FieldProps, 'renderDefault'>) => <Field {...fieldProps} />,\n    [Field],\n  )\n  const renderItem = useCallback(\n    (itemProps: Omit<ItemProps, 'renderDefault'>) => <Item {...itemProps} />,\n    [Item],\n  )\n  const renderPreview = useCallback(\n    (previewProps: RenderPreviewCallbackProps) => (\n      <PreviewLoader component={Preview} {...previewProps} />\n    ),\n    [Preview],\n  )\n  const renderBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <Block {...blockProps} />,\n    [Block],\n  )\n  const renderInlineBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <InlineBlock {...blockProps} />,\n    [InlineBlock],\n  )\n  const renderAnnotation = useCallback(\n    (annotationProps: Omit<BlockAnnotationProps, 'renderDefault'>) => (\n      <Annotation {...annotationProps} />\n    ),\n    [Annotation],\n  )\n\n  const rootInputProps: Omit<ObjectInputProps, 'renderDefault'> = {\n    focusPath,\n    elementProps: {\n      ref: focusRef,\n      id,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      'aria-describedby': undefined, // Root input should not have any aria-describedby\n    },\n    changed: members.some((m) => m.kind === 'field' && m.field.changed),\n    focused,\n    groups,\n    id,\n    level: 0,\n    members,\n    onChange: handleChange,\n    onFieldClose: handleCloseField,\n    onFieldCollapse: handleCollapseField,\n    onFieldSetCollapse: handleCollapseFieldSet,\n    onFieldExpand: handleExpandField,\n    onFieldSetExpand: handleExpandFieldSet,\n    onPathFocus: onPathFocus,\n    onFieldOpen: handleOpenField,\n    onFieldGroupSelect: handleSelectFieldGroup,\n    path: EMPTY_ARRAY,\n    presence: EMPTY_ARRAY,\n    readOnly,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n    schemaType,\n    validation: EMPTY_ARRAY,\n    value,\n  }\n\n  return (\n    <FormProvider\n      __internal_fieldActions={fieldActions}\n      __internal_patchChannel={patchChannel}\n      autoFocus={autoFocus}\n      changesOpen={changesOpen}\n      collapsedFieldSets={collapsedFieldSets}\n      collapsedPaths={collapsedPaths}\n      focusPath={focusPath}\n      focused={focused}\n      groups={groups}\n      id={id}\n      onChange={onChange}\n      onPathBlur={onPathBlur}\n      onPathFocus={onPathFocus}\n      onPathOpen={onPathOpen}\n      onFieldGroupSelect={onFieldGroupSelect}\n      onSetPathCollapsed={onSetPathCollapsed}\n      onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      presence={presence}\n      validation={validation}\n      readOnly={readOnly}\n      schemaType={schemaType}\n    >\n      <GetFormValueProvider value={value}>\n        <FormValueProvider value={value}>\n          <DocumentFieldActionsProvider actions={fieldActions}>\n            {renderInput(rootInputProps)}\n          </DocumentFieldActionsProvider>\n        </FormValueProvider>\n      </GetFormValueProvider>\n    </FormProvider>\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {merge, type Observable} from 'rxjs'\nimport {switchMap} from 'rxjs/operators'\n\nimport {type IdPair} from '../types'\nimport {memoize} from '../utils/createMemoizer'\nimport {type RemoteSnapshotVersionEvent} from './checkoutPair'\nimport {memoizedPair} from './memoizedPair'\nimport {memoizeKeyGen} from './memoizeKeyGen'\n\n/** @internal */\nexport const remoteSnapshots = memoize(\n  (\n    client: SanityClient,\n    idPair: IdPair,\n    typeName: string,\n  ): Observable<RemoteSnapshotVersionEvent> => {\n    return memoizedPair(client, idPair, typeName).pipe(\n      switchMap(({published, draft}) => merge(published.remoteSnapshot$, draft.remoteSnapshot$)),\n    )\n  },\n  memoizeKeyGen,\n)\n","import {type Schema, type SchemaType} from '@sanity/types'\n\nimport {isBuilder} from './resolve'\nimport {type Template} from './types'\nimport {validateTemplates} from './validate'\n\nfunction maybeSerialize(template: Template) {\n  return isBuilder(template) ? template.serialize() : template\n}\n\nfunction isNonNullable<T>(t: T): t is NonNullable<T> {\n  return !!t\n}\n\n/** @internal */\nexport function prepareTemplates(schema: Schema, initialValueTemplates: Template[]): Template[] {\n  const serialized = initialValueTemplates.map(maybeSerialize)\n  return validateTemplates(schema, serialized)\n}\n\n/** @internal */\nexport function defaultTemplateForType(schemaType: SchemaType): Template {\n  return {\n    id: schemaType.name,\n    schemaType: schemaType.name,\n    title: schemaType.title || schemaType.name,\n    icon: schemaType.icon,\n    value: schemaType.initialValue || {_type: schemaType.name},\n  }\n}\n\n/** @internal */\nexport function defaultTemplatesForSchema(schema: Schema): Template[] {\n  const schemaTypes = schema\n    .getTypeNames()\n    .filter((typeName) => !/^sanity\\./.test(typeName))\n    .map((typeName) => schema.get(typeName))\n    .filter(isNonNullable)\n    .filter((schemaType) => schemaType.type?.name === 'document')\n\n  return prepareTemplates(\n    schema,\n    schemaTypes.map((schemaType) => defaultTemplateForType(schemaType)),\n  )\n}\n","import {useEffect, useMemo, useState} from 'react'\n\nimport {getPublishedId} from '../../../../util'\nimport {useDocumentStore} from '../../datastores'\n\n/** @internal */\nexport interface DocumentTypeResolveState {\n  isLoaded: boolean\n  documentType: string | undefined\n}\n\nconst LOADING_STATE: DocumentTypeResolveState = {\n  isLoaded: false,\n  documentType: undefined,\n}\n\n/** @internal */\nexport function useDocumentType(documentId: string, specifiedType = '*'): DocumentTypeResolveState {\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n  const isResolved = Boolean(specifiedType && specifiedType !== '*')\n\n  // Memoize what a synchronously resolved state looks like (eg specified type is present),\n  // in order to return the same object each time. Note that this can be \"incorrect\", but\n  // that we won't be returning it in that case, eg: `{documentType: '*', isResolved: true}\n  const SYNC_RESOLVED_STATE = useMemo(\n    () => ({documentType: specifiedType, isLoaded: true}),\n    [specifiedType],\n  )\n\n  // Set up our state that we'll only use when we need to reach out to the API to find\n  // the document type for a given document. Otherwise we'll be using SYNC_RESOLVED_STATE.\n  // For consistency (between different document ids/types), we're setting the sync resolved\n  // state here as well, but it isn't strictly necessary for correct rendering.\n  const [resolvedState, setDocumentType] = useState<DocumentTypeResolveState>(\n    isResolved ? SYNC_RESOLVED_STATE : LOADING_STATE,\n  )\n\n  // Reset documentType when documentId changes. Note that we're using the referentially\n  // stable LOADING_STATE in order to prevent double rendering on initial load.\n  useEffect(() => setDocumentType(LOADING_STATE), [publishedId, specifiedType])\n\n  // Load the documentType from Content Lake, unless we're already in a resolved state\n  useEffect(() => {\n    if (isResolved) {\n      return undefined\n    }\n\n    const sub = documentStore\n      .resolveTypeForDocument(publishedId, specifiedType)\n      .subscribe((documentType: string) => setDocumentType({documentType, isLoaded: true}))\n\n    return () => sub.unsubscribe()\n  }, [documentStore, publishedId, specifiedType, isResolved])\n\n  return isResolved\n    ? // `isResolved` is only true when we're _synchronously_ resolved\n      SYNC_RESOLVED_STATE\n    : // Using the document type resolved from the API\n      resolvedState\n}\n","import {useSyncExternalStoreWithSelector} from 'use-sync-external-store/with-selector'\n\nimport {type TimelineState, type TimelineStore} from './useTimelineStore'\n\n/**\n * Custom hook which wraps around `useSyncExternalStore`.\n * Accepts a selector function which can be used to opt-in to specific timelineStore updates.\n *\n * @internal\n */\nexport function useTimelineSelector<ReturnValue>(\n  timelineStore: TimelineStore,\n  selector: (timelineState: TimelineState) => ReturnValue,\n): ReturnValue {\n  return useSyncExternalStoreWithSelector(\n    timelineStore.subscribe,\n    timelineStore.getSnapshot,\n    null,\n    selector,\n  )\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {useEffect, useMemo, useRef} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {\n  BehaviorSubject,\n  catchError,\n  distinctUntilChanged,\n  map,\n  of,\n  type Subscription,\n  tap,\n} from 'rxjs'\n\nimport {\n  type Annotation,\n  type Chunk,\n  type SelectionState,\n  type TimelineController,\n  useHistoryStore,\n} from '../../..'\nimport {useClient} from '../../../hooks'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../../../studioClient'\nimport {remoteSnapshots, type RemoteSnapshotVersionEvent} from '../document'\n\ninterface UseTimelineControllerOpts {\n  documentId: string\n  documentType: string\n  onError?: (err: Error) => void\n  rev?: string\n  since?: string\n}\n\n/** @internal */\nexport interface TimelineState {\n  chunks: Chunk[]\n  diff: ObjectDiff<Annotation, Record<string, any>> | null\n  /** null is used here when the chunks hasn't loaded / is not known */\n  hasMoreChunks: boolean | null\n  isLoading: boolean\n  /**\n   * Whether this timeline is fully loaded and completely empty (true for new documents)\n   * It can be `null` when the chunks hasn't loaded / is not known\n   */\n  isPristine: boolean | null\n  lastNonDeletedRevId: string | null\n  onOlderRevision: boolean\n  realRevChunk: Chunk | null\n  revTime: Chunk | null\n  selectionState: SelectionState\n  sinceAttributes: Record<string, unknown> | null\n  sinceTime: Chunk | null\n  timelineDisplayed: Record<string, unknown> | null\n  timelineReady: boolean\n}\n\nconst INITIAL_TIMELINE_STATE: TimelineState = {\n  chunks: [],\n  diff: null,\n  hasMoreChunks: null,\n  isLoading: false,\n  isPristine: null,\n  lastNonDeletedRevId: null,\n  onOlderRevision: false,\n  realRevChunk: null,\n  revTime: null,\n  selectionState: 'inactive',\n  sinceAttributes: null,\n  sinceTime: null,\n  timelineDisplayed: null,\n  timelineReady: false,\n}\n\n/** @internal */\nexport interface TimelineStore {\n  findRangeForRev: TimelineController['findRangeForNewRev']\n  findRangeForSince: TimelineController['findRangeForNewSince']\n  loadMore: () => void\n  getSnapshot: () => TimelineState\n  subscribe: (callback: () => void) => () => void\n}\n\n/**\n * Creates a store which handles the creation of a document Timeline,\n * TimelineController and also fetches pre-requisite document snapshots.\n *\n * `TimelineStore` exposes select TimelineController methods used to query\n * ranges and fetch more transactions. It can also be used with\n * `useSyncExternalStore` to subscribe to selected state changes.\n *\n * @internal\n * */\nexport function useTimelineStore({\n  documentId,\n  documentType,\n  onError,\n  rev,\n  since,\n}: UseTimelineControllerOpts): TimelineStore {\n  const historyStore = useHistoryStore()\n  const snapshotsSubscriptionRef = useRef<Subscription | null>(null)\n  const timelineStateRef = useRef<TimelineState>(INITIAL_TIMELINE_STATE)\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  /**\n   * The mutable TimelineController, used internally\n   */\n  const controller = useMemo(\n    () =>\n      historyStore.getTimelineController({\n        client,\n        documentId,\n        documentType,\n      }),\n    [client, documentId, documentType, historyStore],\n  )\n\n  /**\n   * A BehaviorSubject which can be subscribed by multiple observers, which broadcasts\n   * the the latest state of the (mutable) TimelineController.\n   */\n  const timelineController$ = useMemo(\n    () => new BehaviorSubject<TimelineController>(controller),\n    [controller],\n  )\n\n  /**\n   * Broadcasts the updated state on TimelineController's `handler` updates (as well as on mount / unmount).\n   *\n   * Note that TimelineController triggers updates very frequently when fetching transactions, which it does so\n   * in fairly small batches.\n   *\n   * This will also suspend TimelineController transaction fetching on cleanup, ensuring that fetches don't\n   * continue once the document pane has been closed.\n   */\n  useEffect(() => {\n    controller.setRange(since || null, rev || null)\n    timelineController$.next(controller)\n\n    controller.handler = (err, innerController) => {\n      if (err) {\n        timelineController$.error(err)\n      } else {\n        /**\n         * NOTE: TimelineController requires that you call `setRange` manually whenever its internal\n         * timeline has changed (e.g. has a result of fetched transactions).\n         * Ideally, TimelineController would be updated to handle this automatically for us.\n         * Until then, this workaround waits until the next call stack before calling `setRange`.\n         */\n        setTimeout(() => {\n          innerController.setRange(since || null, rev || null)\n          timelineController$.next(innerController)\n        }, 0)\n      }\n    }\n    controller.resume()\n    return () => controller.suspend()\n  }, [rev, since, controller, timelineController$])\n\n  /**\n   * Fetch document snapshots and update the mutable controller.\n   * Unsubscribes on clean up, preventing double fetches in strict mode.\n   */\n  useEffect(() => {\n    if (!snapshotsSubscriptionRef.current) {\n      snapshotsSubscriptionRef.current = remoteSnapshots(\n        client,\n        {draftId: `drafts.${documentId}`, publishedId: documentId},\n        documentType,\n      ).subscribe((ev: RemoteSnapshotVersionEvent) => {\n        controller.handleRemoteMutation(ev)\n      })\n    }\n    return () => {\n      if (snapshotsSubscriptionRef.current) {\n        snapshotsSubscriptionRef.current.unsubscribe()\n        snapshotsSubscriptionRef.current = null\n      }\n    }\n  }, [client, controller, documentId, documentType])\n\n  const timelineStore = useMemo(() => {\n    return {\n      findRangeForRev: (chunk: Chunk) => controller.findRangeForNewRev(chunk),\n      findRangeForSince: (chunk: Chunk) => controller.findRangeForNewSince(chunk),\n      loadMore: () => {\n        controller.setLoadMore(true)\n        timelineStateRef.current.isLoading = true\n      },\n      getSnapshot: () => timelineStateRef.current,\n      subscribe: (callback: () => void) => {\n        const subscription = timelineController$\n          .pipe(\n            // Manually stop loading transactions in TimelineController, otherwise transaction history\n            // will continue to be fetched – even if unwanted.\n            tap((innerController) => innerController.setLoadMore(false)),\n            map((innerController) => {\n              const chunks = innerController.timeline.mapChunks((c) => c)\n              const lastNonDeletedChunk = chunks.filter(\n                (chunk) => !['delete', 'initial'].includes(chunk.type),\n              )\n              const hasMoreChunks = !innerController.timeline.reachedEarliestEntry\n              const timelineReady = !['invalid', 'loading'].includes(innerController.selectionState)\n              return {\n                chunks,\n                diff: innerController.sinceTime ? innerController.currentObjectDiff() : null,\n                isLoading: false,\n                isPristine: timelineReady ? chunks.length === 0 && hasMoreChunks === false : null,\n                hasMoreChunks: !innerController.timeline.reachedEarliestEntry,\n                lastNonDeletedRevId: lastNonDeletedChunk?.[0]?.id,\n                onOlderRevision: innerController.onOlderRevision(),\n                realRevChunk: innerController.realRevChunk,\n                revTime: innerController.revTime,\n                selectionState: innerController.selectionState,\n                sinceAttributes: innerController.sinceAttributes(),\n                sinceTime: innerController.sinceTime,\n                timelineDisplayed: innerController.displayed(),\n                timelineReady,\n              }\n            }),\n            // Only emit (and in turn, re-render) when values have changed\n            distinctUntilChanged(deepEquals),\n            // Emit initial timeline state whenever we encounter an error in TimelineController's `handler` callback.\n            // A little ham-fisted, but also reflects how we handle timeline errors in the UI\n            // (i.e. no timeline state or diffs are rendered and we revert to the current editable document)\n            catchError((err) => {\n              onError?.(err)\n              return of(INITIAL_TIMELINE_STATE)\n            }),\n            tap((timelineState) => {\n              timelineStateRef.current = timelineState\n            }),\n            // Trigger callback function required by `useSyncExternalStore` to denote when to re-render\n            tap(callback),\n          )\n          .subscribe()\n\n        return () => subscription.unsubscribe()\n      },\n    }\n  }, [controller, onError, timelineController$])\n\n  return timelineStore\n}\n","import {useEffect, useState} from 'react'\n\nimport {useProjectStore} from '../datastores'\nimport {type ProjectData} from './types'\n\n/** @internal */\nexport function useProject(): {value: ProjectData | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectData | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.get()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import {useEffect, useState} from 'react'\n\nimport {useProjectStore} from '../datastores'\nimport {type ProjectDatasetData} from './types'\n\n/** @internal */\nexport function useProjectDatasets(): {value: ProjectDatasetData[] | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectDatasetData[] | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.getDatasets()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser} from '@sanity/types'\nimport {combineLatest, firstValueFrom, type Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {createMockAuthStore} from '../store'\nimport {prepareConfig} from './prepareConfig'\nimport {\n  type Config,\n  type SchemaPluginOptions,\n  type SingleWorkspace,\n  type Source,\n  type Workspace,\n} from './types'\n\n/**\n * Fully resolves a configuration including subscribing to all sources and\n * workspaces from a config. Returns an `Observable` that waits till all sources\n * emit once before emitting an array of fully resolved sources and workspaces.\n *\n * @internal\n */\nexport function resolveConfig(config: Config): Observable<Workspace[]> {\n  const {workspaces} = prepareConfig(config)\n\n  return combineLatest(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    workspaces.flatMap((workspaceSummary) =>\n      combineLatest(workspaceSummary.__internal.sources.map(({source}) => source)).pipe(\n        map(\n          (sources): Workspace => ({\n            ...workspaceSummary,\n            ...sources[0],\n            unstable_sources: sources,\n            type: 'workspace',\n          }),\n        ),\n      ),\n    ),\n  )\n}\n\n/** @internal */\nexport type CreateWorkspaceFromConfigOptions =\n  | SingleWorkspace\n  | (SingleWorkspace & {\n      currentUser: CurrentUser\n      getClient: (options: {apiVersion: string}) => SanityClient\n      schema?: SchemaPluginOptions\n    })\n\n/**\n * PRIMARILY FOR TESTING PURPOSES.\n *\n * This will create a fully resolved workspace from a config and optionally\n * allows a `client` and `currentUser` override. This exists primarily for\n * testing purposes. If you need to use a workspace, we recommend using the\n * `useWorkspace` hook to grab the fully resolved workspace from the\n * `StudioProvider`\n *\n * @internal\n */\nexport async function createWorkspaceFromConfig(\n  options: CreateWorkspaceFromConfigOptions,\n): Promise<Workspace> {\n  const client = 'getClient' in options ? options.getClient({apiVersion: '2023-11-13'}) : undefined\n  const [workspace] = await firstValueFrom(\n    resolveConfig({\n      ...options,\n      ...(client &&\n        'currentUser' in options && {\n          auth: createMockAuthStore({...options, client}),\n        }),\n    }),\n  )\n\n  return workspace\n}\n\n/**\n * PRIMARILY FOR TESTING PURPOSES.\n *\n * This will create a fully resolved source from a config and optionally\n * allows a `client` and `currentUser` override. This exists primarily for\n * testing purposes. If you need to use a source, we recommend using the\n * `useSource` hook to grab the fully resolved source from the `StudioProvider`\n *\n * @internal\n */\nexport async function createSourceFromConfig(\n  options: CreateWorkspaceFromConfigOptions,\n): Promise<Source> {\n  const workspace = await createWorkspaceFromConfig(options)\n  return workspace.unstable_sources[0]\n}\n","import {useMemo} from 'react'\n\nimport {type ConfigContext, type Source} from './types'\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, memoizing using `useMemo`\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function useConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient, i18n} = source\n  return useMemo(() => {\n    return {projectId, dataset, schema, currentUser, getClient, i18n}\n  }, [projectId, dataset, schema, currentUser, getClient, i18n])\n}\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, without memoization - use for non-react contexts\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function getConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient, i18n} = source\n  return {projectId, dataset, schema, currentUser, getClient, i18n}\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\n\nimport {useClient} from '../../hooks'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../../studioClient'\nimport {useWorkspace} from '../workspace'\nimport {AddonDatasetContext} from './AddonDatasetContext'\nimport {type AddonDatasetContextValue} from './types'\n\nconst API_VERSION = 'v2023-11-13'\n\ninterface AddonDatasetSetupProviderProps {\n  children: React.ReactNode\n}\n\n/**\n * This provider sets the addon dataset client, currently called `comments` dataset.\n * It also exposes a `createAddonDataset` function that can be used to create the addon dataset if it does not exist.\n * @beta\n * @hidden\n */\nexport function AddonDatasetProvider(props: AddonDatasetSetupProviderProps) {\n  const {children} = props\n  const {dataset, projectId} = useWorkspace()\n  const originalClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n  const [addonDatasetClient, setAddonDatasetClient] = useState<SanityClient | null>(null)\n  const [isCreatingDataset, setIsCreatingDataset] = useState<boolean>(false)\n  const [ready, setReady] = useState<boolean>(false)\n\n  const getAddonDatasetName = useCallback(async (): Promise<string | undefined> => {\n    const res = await originalClient.withConfig({apiVersion: API_VERSION}).request({\n      uri: `/projects/${projectId}/datasets?datasetProfile=comments&addonFor=${dataset}`,\n      tag: 'sanity.studio',\n    })\n\n    // The response is an array containing the addon dataset. We only expect\n    // one addon dataset to be returned, so we return the name of the first\n    // addon dataset in the array.\n    return res?.[0]?.name\n  }, [dataset, originalClient, projectId])\n\n  const handleCreateClient = useCallback(\n    (addonDatasetName: string) => {\n      const client = originalClient.withConfig({\n        apiVersion: API_VERSION,\n        dataset: addonDatasetName,\n        projectId,\n        requestTagPrefix: 'sanity.studio',\n        useCdn: false,\n        withCredentials: true,\n      })\n\n      return client\n    },\n    [originalClient, projectId],\n  )\n\n  const handleCreateAddonDataset = useCallback(async (): Promise<SanityClient | null> => {\n    setIsCreatingDataset(true)\n\n    // Before running the setup, we check if the addon dataset already exists.\n    // The addon dataset might already exist if another user has already run\n    // the setup, but the current user has not refreshed the page yet and\n    // therefore don't have a client for the addon dataset yet.\n    try {\n      const addonDatasetName = await getAddonDatasetName()\n\n      if (addonDatasetName) {\n        const client = handleCreateClient(addonDatasetName)\n        setAddonDatasetClient(client)\n        setIsCreatingDataset(false)\n        return client\n      }\n    } catch (_) {\n      // If the dataset does not exist we will get an error, but we can ignore\n      // it since we will create the dataset in the next step.\n    }\n\n    try {\n      // 1. Create the addon dataset\n      const res = await originalClient.withConfig({apiVersion: API_VERSION}).request({\n        uri: `/comments/${dataset}/setup`,\n        method: 'POST',\n      })\n\n      const datasetName = res?.datasetName\n\n      // 2. We can't continue if the addon dataset name is not returned\n      if (!datasetName) {\n        setIsCreatingDataset(false)\n        return null\n      }\n\n      // 3. Create a client for the addon dataset and set it in the context value\n      //    so that the consumers can use it to execute comment operations and set up\n      //    the real time listener for the addon dataset.\n      const client = handleCreateClient(datasetName)\n      setAddonDatasetClient(client)\n\n      // 4. Return the client so that the caller can use it to execute operations\n      return client\n    } catch (err) {\n      throw err\n    } finally {\n      setIsCreatingDataset(false)\n    }\n  }, [dataset, getAddonDatasetName, handleCreateClient, originalClient])\n\n  useEffect(() => {\n    // On mount, we check if the addon dataset already exists. If it does, we create\n    // a client for it and set it in the context value so that the consumers can use\n    // it to execute comment operations and set up the real time listener for the addon\n    // dataset.\n    getAddonDatasetName()\n      .then((addonDatasetName) => {\n        if (!addonDatasetName) return\n        const client = handleCreateClient(addonDatasetName)\n        setAddonDatasetClient(client)\n      })\n      .finally(() => {\n        setReady(true)\n      })\n  }, [getAddonDatasetName, handleCreateClient])\n\n  const ctxValue = useMemo(\n    (): AddonDatasetContextValue => ({\n      client: addonDatasetClient,\n      createAddonDataset: handleCreateAddonDataset,\n      isCreatingDataset,\n      ready,\n    }),\n    [addonDatasetClient, handleCreateAddonDataset, isCreatingDataset, ready],\n  )\n\n  return <AddonDatasetContext.Provider value={ctxValue}>{children}</AddonDatasetContext.Provider>\n}\n","import {useContext} from 'react'\n\nimport {AddonDatasetContext} from './AddonDatasetContext'\nimport {type AddonDatasetContextValue} from './types'\n\n/**\n * @beta\n * @hidden\n */\nexport function useAddonDataset(): AddonDatasetContextValue {\n  const ctx = useContext(AddonDatasetContext)\n\n  if (!ctx) {\n    throw new Error('useAddonDataset: missing context value')\n  }\n\n  return ctx\n}\n","import {Box, Text} from '@sanity/ui'\n\nimport {type LogoProps} from '../../../config'\n\n/**\n * @hidden\n * @beta */\nexport function StudioLogo(props: LogoProps) {\n  const {title} = props\n\n  return (\n    <Box padding={3} data-testid=\"studio-logo\">\n      <Text weight=\"medium\">{title}</Text>\n    </Box>\n  )\n}\n","import {multiply, parseColor, rgbToHex, screen} from '@sanity/ui/theme'\nimport {getLuminance, mix, parseToRgb, rgb} from 'polished'\n\nimport {type LegacyThemeTints} from './types'\n\n/**\n * @internal\n */\nexport function _buildTints(bg: string, mid: string, fg: string): LegacyThemeTints {\n  return {\n    50: mix(0.1, mid, bg),\n    100: mix(0.2, mid, bg),\n    200: mix(0.4, mid, bg),\n    300: mix(0.6, mid, bg),\n    400: mix(0.8, mid, bg),\n    500: mid,\n    600: mix(0.8, mid, fg),\n    700: mix(0.6, mid, fg),\n    800: mix(0.4, mid, fg),\n    900: mix(0.2, mid, fg),\n    950: mix(0.1, mid, fg),\n  }\n}\n\n/**\n * @internal\n */\nexport function _toHex(color: string): string {\n  const {red, green, blue} = parseToRgb(color)\n  return rgb(red, green, blue)\n}\n\n/**\n * @internal\n */\nexport function _isDark(bg: string, fg: string): boolean {\n  return getLuminance(bg) < getLuminance(fg)\n}\n\n/**\n * Blend two colors using the \"screen\" blend mode\n * @internal\n */\nexport function _multiply(bg: string, fg: string): string {\n  const b = parseColor(bg)\n  const s = parseColor(fg)\n  const hex = rgbToHex(multiply(b, s))\n\n  return hex\n}\n\n/**\n * Blend two colors using the \"screen\" blend mode\n * @internal\n */\nexport function _screen(bg: string, fg: string): string {\n  const b = parseColor(bg)\n  const s = parseColor(fg)\n  const hex = rgbToHex(screen(b, s))\n\n  return hex\n}\n","import {hues} from '@sanity/color'\nimport {createColorTheme, rgba, type ThemeColorSchemes} from '@sanity/ui/theme'\n\nimport {_isDark, _multiply, _screen} from './helpers'\nimport {type LegacyPalette} from './palette'\nimport {type LegacyTones} from './tones'\nimport {type LegacyThemeTints} from './types'\n\nconst NEUTRAL_TONES = ['default', 'transparent']\n\nexport function buildColor(\n  legacyPalette: LegacyPalette,\n  legacyTones: LegacyTones,\n): ThemeColorSchemes {\n  return createColorTheme({\n    base: ({dark: navbar, name}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = navbar ? _screen : _multiply\n      const tints = stateTones[name] || stateTones.default\n\n      if (name === 'default') {\n        const skeletonFrom = stateTones.default[100]\n\n        return {\n          fg: stateTones.fg,\n          bg: stateTones.bg,\n          border: stateTones.default[200],\n          focusRing: legacyPalette.focus.base,\n          shadow: {\n            outline: rgba(stateTones.default[500], 0.4),\n            umbra: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.2),\n            penumbra: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.14),\n            ambient: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.12),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (name === 'transparent') {\n        const bg = tints[50]\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          fg: tints[900],\n          bg,\n          border: tints[300],\n          focusRing: legacyPalette.focus.base,\n          shadow: {\n            outline: rgba(tints[500], dark ? 0.2 : 0.4),\n            umbra: rgba(dark ? legacyPalette.black : tints[500], 0.2),\n            penumbra: rgba(dark ? legacyPalette.black : tints[500], 0.14),\n            ambient: rgba(dark ? legacyPalette.black : tints[500], 0.12),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = tints[50]\n      const skeletonFrom = blend(bg, tints[100])\n\n      return {\n        fg: tints[900],\n        bg,\n        border: tints[200],\n        focusRing: tints[500],\n        shadow: {\n          outline: rgba(tints[500], dark ? 0.2 : 0.4),\n          umbra: rgba(dark ? legacyPalette.black : tints[500], 0.2),\n          penumbra: rgba(dark ? legacyPalette.black : tints[500], 0.14),\n          ambient: rgba(dark ? legacyPalette.black : tints[500], 0.12),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    solid: ({base, dark: navbar, name, state, tone}) => {\n      const buttonTones = navbar ? legacyTones.button.navbar : legacyTones.button.default\n      const dark = buttonTones.dark\n      const blend = dark ? _screen : _multiply\n      const blendInvert = dark ? _multiply : _screen\n      const defaultTints = buttonTones[name] || buttonTones.default\n      const isNeutral = NEUTRAL_TONES.includes(name) && NEUTRAL_TONES.includes(tone)\n      let tints = buttonTones[tone === 'default' ? name : tone] || defaultTints\n\n      if (state === 'disabled') {\n        tints = defaultTints\n\n        const bg = blend(base.bg, tints[200])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[200]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[50]),\n          },\n          accent: {\n            fg: blend(base.bg, tints[50]),\n          },\n          link: {\n            fg: blend(base.bg, tints[50]),\n          },\n          code: {\n            bg,\n            fg: blend(base.bg, tints[50]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'hovered') {\n        const bg = blend(base.bg, tints[600])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[600]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'pressed') {\n        const bg = blend(base.bg, tints[800])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[800]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          tints = buttonTones.primary\n        }\n\n        const bg = blend(base.bg, tints[800])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[800]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = blend(base.bg, tints[500])\n      const skeletonFrom = blendInvert(bg, tints[800])\n\n      return {\n        bg,\n        border: blend(base.bg, tints[500]),\n        fg: blend(base.bg, buttonTones.bg),\n        icon: blend(base.bg, buttonTones.bg),\n        muted: {\n          fg: blend(base.bg, tints[100]),\n        },\n        accent: {\n          fg: blendInvert(bg, buttonTones.critical[200]),\n        },\n        link: {\n          fg: blendInvert(bg, buttonTones.primary[100]),\n        },\n        code: {\n          bg: blend(bg, tints[50]),\n          fg: blend(base.bg, tints[100]),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    muted: ({base, dark: navbar, name, state, tone}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n      const defaultTints = stateTones[name] || stateTones.default\n      const isNeutral = NEUTRAL_TONES.includes(name) && NEUTRAL_TONES.includes(tone)\n\n      let tints: LegacyThemeTints = stateTones[tone === 'default' ? name : tone] || defaultTints\n\n      if (state === 'disabled') {\n        tints = defaultTints\n\n        const bg = base.bg\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[50]),\n          fg: blend(base.bg, tints[200]),\n          icon: blend(base.bg, tints[200]),\n          muted: {\n            fg: blend(bg, tints[100]),\n          },\n          accent: {\n            fg: blend(bg, tints[100]),\n          },\n          link: {\n            fg: blend(bg, tints[100]),\n          },\n          code: {\n            bg,\n            fg: blend(bg, tints[100]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'hovered') {\n        const bg = blend(base.bg, tints[50])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(base.bg, tints[900]),\n          icon: blend(base.bg, tints[900]),\n          muted: {\n            fg: blend(base.bg, tints[600]),\n          },\n          accent: {\n            fg: blend(base.bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(base.bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'pressed') {\n        if (isNeutral) {\n          tints = stateTones.primary\n        }\n\n        const bg = blend(base.bg, tints[100])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(base.bg, tints[800]),\n          icon: blend(base.bg, tints[800]),\n          muted: {\n            fg: blend(base.bg, tints[600]),\n          },\n          accent: {\n            fg: blend(bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          tints = stateTones.primary\n        }\n\n        const bg = blend(base.bg, tints[100])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(bg, tints[800]),\n          icon: blend(bg, tints[800]),\n          muted: {\n            fg: blend(bg, tints[600]),\n          },\n          accent: {\n            fg: blend(bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = base.bg\n      const skeletonFrom = blend(base.bg, tints[100])\n\n      return {\n        bg,\n        border: blend(bg, tints[100]),\n        fg: blend(bg, tints[700]),\n        icon: blend(bg, tints[700]),\n        muted: {\n          fg: blend(bg, tints[600]),\n        },\n        accent: {\n          fg: blend(bg, stateTones.critical[500]),\n        },\n        link: {\n          fg: blend(bg, stateTones.primary[600]),\n        },\n        code: {\n          bg: blend(bg, tints[50]),\n          fg: blend(bg, tints[600]),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    button: ({base, mode, muted, solid}) => {\n      if (mode === 'bleed') {\n        return {\n          enabled: {\n            ...muted.enabled,\n            border: muted.enabled.bg,\n          },\n          hovered: {\n            ...muted.hovered,\n            border: muted.hovered.bg,\n          },\n          pressed: {\n            ...muted.pressed,\n            border: muted.pressed.bg,\n          },\n          selected: {\n            ...muted.selected,\n            border: muted.selected.bg,\n          },\n          disabled: {\n            ...muted.disabled,\n            border: muted.disabled.bg,\n          },\n        }\n      }\n\n      if (mode === 'ghost') {\n        return {\n          ...solid,\n          enabled: {\n            ...muted.enabled,\n            border: base.border,\n          },\n          disabled: muted.disabled,\n        }\n      }\n\n      return solid\n    },\n\n    card: ({base, dark: navbar, muted, name, solid, state}) => {\n      if (state === 'hovered') {\n        return muted[name].hovered\n      }\n\n      if (state === 'disabled') {\n        return muted[name].disabled\n      }\n\n      const isNeutral = NEUTRAL_TONES.includes(name)\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const tints: LegacyThemeTints = stateTones[name] || stateTones.default\n\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n\n      if (state === 'pressed') {\n        if (isNeutral) {\n          return muted.primary.pressed\n        }\n\n        return muted[name].pressed\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          return solid.primary.enabled\n        }\n\n        return solid[name].enabled\n      }\n\n      const bg = base.bg\n      const skeletonFrom = blend(base.bg, tints[dark ? 900 : 100])\n\n      return {\n        bg,\n        fg: base.fg,\n        icon: base.fg,\n        border: base.border,\n        muted: {\n          fg: blend(base.bg, tints[dark ? 400 : 600]),\n        },\n        accent: {\n          fg: blend(base.bg, stateTones.critical[dark ? 400 : 500]),\n        },\n        link: {\n          fg: blend(base.bg, stateTones.primary[dark ? 400 : 600]),\n        },\n        code: {\n          bg: blend(base.bg, tints[dark ? 950 : 50]),\n          fg: tints[dark ? 400 : 600],\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    input: ({base, dark: navbar, mode, state}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n\n      if (mode === 'invalid') {\n        const tints = stateTones.critical\n\n        return {\n          bg: blend(base.bg, tints[50]),\n          bg2: blend(base.bg, tints[50]),\n          fg: blend(base.bg, tints[700]),\n          border: blend(base.bg, tints[200]),\n          placeholder: blend(base.bg, tints[400]),\n        }\n      }\n\n      if (state === 'hovered') {\n        return {\n          bg: base.bg,\n          bg2: base.bg,\n          fg: base.fg,\n          border: blend(base.bg, hues.gray[300].hex),\n          placeholder: blend(base.bg, hues.gray[400].hex),\n        }\n      }\n\n      if (state === 'disabled') {\n        return {\n          bg: blend(base.bg, hues.gray[50].hex),\n          bg2: blend(base.bg, hues.gray[50].hex),\n          fg: blend(base.bg, hues.gray[200].hex),\n          border: blend(base.bg, hues.gray[100].hex),\n          placeholder: blend(base.bg, hues.gray[100].hex),\n        }\n      }\n\n      if (state === 'readOnly') {\n        return {\n          bg: blend(base.bg, hues.gray[50].hex),\n          bg2: blend(base.bg, hues.gray[50].hex),\n          fg: blend(base.bg, hues.gray[800].hex),\n          border: blend(base.bg, hues.gray[200].hex),\n          placeholder: blend(base.bg, hues.gray[400].hex),\n        }\n      }\n\n      return {\n        bg: base.bg,\n        bg2: base.bg,\n        fg: base.fg,\n        border: base.border,\n        placeholder: blend(base.bg, hues.gray[700].hex),\n      }\n    },\n\n    selectable: ({base, muted, tone, solid, state}) => {\n      if (state === 'enabled') {\n        return {\n          ...muted[tone].enabled,\n          bg: base.bg,\n        }\n      }\n\n      if (state === 'pressed') {\n        if (tone === 'default') {\n          return muted.primary.pressed\n        }\n\n        return muted[tone].pressed\n      }\n\n      if (state === 'selected') {\n        if (tone === 'default') {\n          return solid.primary.enabled\n        }\n\n        return solid[tone].enabled\n      }\n\n      if (state === 'disabled') {\n        return {\n          ...muted[tone].disabled,\n          bg: base.bg,\n        }\n      }\n\n      return muted[tone][state]\n    },\n\n    spot: ({base, key}) => {\n      const dark = _isDark(base.bg, base.fg)\n      const blend = dark ? _screen : _multiply\n\n      return blend(base.bg, hues[key][dark ? 400 : 500].hex)\n    },\n\n    syntax: ({base, dark: navbar}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n      const mainShade = 600\n      const secondaryShade = 400\n\n      return {\n        atrule: blend(base.bg, hues.purple[mainShade].hex),\n        attrName: blend(base.bg, stateTones.positive[mainShade]),\n        attrValue: blend(base.bg, stateTones.caution[mainShade]),\n        attribute: blend(base.bg, stateTones.caution[mainShade]),\n        boolean: blend(base.bg, hues.purple[mainShade].hex),\n        builtin: blend(base.bg, hues.purple[mainShade].hex),\n        cdata: blend(base.bg, stateTones.caution[mainShade]),\n        char: blend(base.bg, stateTones.caution[mainShade]),\n        class: blend(base.bg, hues.orange[mainShade].hex),\n        className: blend(base.bg, hues.cyan[mainShade].hex),\n        comment: blend(base.bg, stateTones.default[secondaryShade]),\n        constant: blend(base.bg, hues.purple[mainShade].hex),\n        deleted: blend(base.bg, stateTones.critical[mainShade]),\n        doctype: blend(base.bg, stateTones.default[secondaryShade]),\n        entity: blend(base.bg, stateTones.critical[mainShade]),\n        function: blend(base.bg, stateTones.positive[mainShade]),\n        hexcode: blend(base.bg, stateTones.primary[mainShade]),\n        id: blend(base.bg, hues.purple[mainShade].hex),\n        important: blend(base.bg, hues.purple[mainShade].hex),\n        inserted: blend(base.bg, stateTones.caution[mainShade]),\n        keyword: blend(base.bg, hues.magenta[mainShade].hex),\n        number: blend(base.bg, hues.purple[mainShade].hex),\n        operator: blend(base.bg, hues.magenta[mainShade].hex),\n        prolog: blend(base.bg, stateTones.default[secondaryShade]),\n        property: blend(base.bg, stateTones.primary[mainShade]),\n        pseudoClass: blend(base.bg, stateTones.caution[mainShade]),\n        pseudoElement: blend(base.bg, stateTones.caution[mainShade]),\n        punctuation: blend(base.bg, stateTones.default[mainShade]),\n        regex: blend(base.bg, stateTones.primary[mainShade]),\n        selector: blend(base.bg, stateTones.critical[mainShade]),\n        string: blend(base.bg, stateTones.caution[mainShade]),\n        symbol: blend(base.bg, hues.purple[mainShade].hex),\n        tag: blend(base.bg, stateTones.critical[mainShade]),\n        unit: blend(base.bg, hues.orange[mainShade].hex),\n        url: blend(base.bg, stateTones.critical[mainShade]),\n        variable: blend(base.bg, stateTones.critical[mainShade]),\n      }\n    },\n  })\n}\n","import {studioTheme as defaults, type ThemeFonts} from '@sanity/ui'\n\nimport {type LegacyThemeProps} from './types'\n\nexport function buildFonts(cssCustomProperties: LegacyThemeProps): ThemeFonts {\n  return {\n    ...defaults.fonts,\n    code: {\n      ...defaults.fonts.code,\n      family: cssCustomProperties['--font-family-monospace'] || defaults.fonts.code.family,\n    },\n    heading: {\n      ...defaults.fonts.heading,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n    label: {\n      ...defaults.fonts.label,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n    text: {\n      ...defaults.fonts.text,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n  }\n}\n","import {_toHex} from './helpers'\nimport {type LegacyThemeProps} from './types'\n\nexport interface LegacyPalette {\n  black: string\n  component: {\n    bg: string\n    fg: string\n  }\n  defaultButton: {\n    default: {\n      base: string\n    }\n    primary: {\n      base: string\n    }\n    success: {\n      base: string\n    }\n    warning: {\n      base: string\n    }\n    danger: {\n      base: string\n    }\n  }\n  focus: {\n    base: string\n  }\n  gray: {\n    base: string\n  }\n  mainNavigation: {\n    bg: string\n    fg: string\n  }\n  state: {\n    info: {\n      fg: string\n    }\n    success: {\n      fg: string\n    }\n    warning: {\n      fg: string\n    }\n    danger: {\n      fg: string\n    }\n  }\n}\n\nexport function buildLegacyPalette(cssCustomProperties: LegacyThemeProps): LegacyPalette {\n  return {\n    black: _toHex(cssCustomProperties['--black']),\n    component: {\n      bg: _toHex(cssCustomProperties['--component-bg']),\n      fg: _toHex(cssCustomProperties['--component-text-color']),\n    },\n    defaultButton: {\n      default: {\n        base: _toHex(cssCustomProperties['--default-button-color']),\n      },\n      primary: {\n        base: _toHex(cssCustomProperties['--default-button-primary-color']),\n      },\n      success: {\n        base: _toHex(cssCustomProperties['--default-button-success-color']),\n      },\n      warning: {\n        base: _toHex(cssCustomProperties['--default-button-warning-color']),\n      },\n      danger: {\n        base: _toHex(cssCustomProperties['--default-button-danger-color']),\n      },\n    },\n    focus: {\n      base: _toHex(cssCustomProperties['--focus-color']),\n    },\n    gray: {\n      base: _toHex(cssCustomProperties['--gray-base']),\n    },\n    mainNavigation: {\n      bg: _toHex(cssCustomProperties['--main-navigation-color']),\n      fg: _toHex(cssCustomProperties['--main-navigation-color--inverted']),\n    },\n    state: {\n      info: {\n        fg: _toHex(cssCustomProperties['--state-info-color']),\n      },\n      success: {\n        fg: _toHex(cssCustomProperties['--state-success-color']),\n      },\n      warning: {\n        fg: _toHex(cssCustomProperties['--state-warning-color']),\n      },\n      danger: {\n        fg: _toHex(cssCustomProperties['--state-danger-color']),\n      },\n    },\n  }\n}\n","import {_buildTints, _isDark} from './helpers'\nimport {type LegacyPalette} from './palette'\nimport {type LegacyThemeTints} from './types'\n\nexport interface LegacyTones {\n  button: {\n    default: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n\n    navbar: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n  }\n\n  state: {\n    default: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n\n    navbar: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n  }\n}\n\nexport function buildLegacyTones(legacyPalette: LegacyPalette): LegacyTones {\n  return {\n    state: {\n      default: {\n        bg: legacyPalette.component.bg,\n        fg: legacyPalette.component.fg,\n        dark: _isDark(legacyPalette.component.bg, legacyPalette.component.fg),\n        default: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.gray.base,\n          legacyPalette.component.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.gray.base,\n          legacyPalette.component.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.info.fg,\n          legacyPalette.component.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.success.fg,\n          legacyPalette.component.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.warning.fg,\n          legacyPalette.component.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.danger.fg,\n          legacyPalette.component.fg,\n        ),\n      },\n      navbar: {\n        bg: legacyPalette.mainNavigation.bg,\n        fg: legacyPalette.mainNavigation.fg,\n        dark: _isDark(legacyPalette.mainNavigation.bg, legacyPalette.mainNavigation.fg),\n\n        default: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.gray.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.gray.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.info.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.success.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.warning.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.danger.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n      },\n    },\n    button: {\n      default: {\n        bg: legacyPalette.component.bg,\n        fg: legacyPalette.component.fg,\n        dark: _isDark(legacyPalette.component.bg, legacyPalette.component.fg),\n\n        default: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.component.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.component.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.primary.base,\n          legacyPalette.component.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.success.base,\n          legacyPalette.component.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.warning.base,\n          legacyPalette.component.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.danger.base,\n          legacyPalette.component.fg,\n        ),\n      },\n      navbar: {\n        bg: legacyPalette.mainNavigation.bg,\n        fg: legacyPalette.mainNavigation.fg,\n        dark: _isDark(legacyPalette.mainNavigation.bg, legacyPalette.mainNavigation.fg),\n\n        default: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.primary.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.success.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.warning.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.danger.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n      },\n    },\n  }\n}\n","import {black, blue, gray, green, red, white, yellow} from '@sanity/color'\nimport {studioTheme as defaults} from '@sanity/ui'\n\nimport {type StudioTheme} from '../types'\nimport {buildColor} from './color'\nimport {buildFonts} from './fonts'\nimport {_isDark} from './helpers'\nimport {buildLegacyPalette} from './palette'\nimport {buildLegacyTones} from './tones'\nimport {type LegacyThemeProps} from './types'\n\n/**\n * Build a Sanity UI theme from legacy CSS properties.\n *\n * @example\n * ```tsx\n * import {buildLegacyTheme, defineConfig} from 'sanity'\n *\n * export default defineConfig({\n *   // project configuration ...\n *\n *   // Customize theming\n *   theme: buildLegacyTheme({\n *     '--black': '#000',\n *     '--gray': '#777',\n *     '--focus-color': '#00f',\n *   })\n * })\n * ```\n *\n * @param partialLegacyTheme - Properties to override the theme with. See {@link LegacyThemeProps}\n * @public\n * @deprecated Legacy theming will be deprecated in a future version of Sanity Studio\n */\nexport function buildLegacyTheme(partialLegacyTheme: Partial<LegacyThemeProps>): StudioTheme {\n  const legacyTheme = resolveLegacyTheme(partialLegacyTheme)\n  const legacyPalette = buildLegacyPalette(legacyTheme)\n  const legacyTones = buildLegacyTones(legacyPalette)\n\n  const color = buildColor(legacyPalette, legacyTones)\n  const fonts = buildFonts(legacyTheme)\n\n  return {\n    __dark: _isDark(color.light.default.base.bg, color.light.default.base.fg),\n    __legacy: true,\n    color,\n    fonts,\n  }\n}\n\nconst defaultCustomProperties: LegacyThemeProps = {\n  '--font-family-monospace': defaults.fonts.code.family,\n  '--font-family-base': defaults.fonts.text.family,\n\n  '--black': black.hex,\n  '--white': white.hex,\n\n  // Brand\n  '--brand-primary': blue[500].hex,\n\n  // Component\n  '--component-bg': white.hex,\n  '--component-text-color': black.hex,\n\n  // Gray\n  '--gray': gray[500].hex,\n  '--gray-base': gray[500].hex,\n\n  // Default button\n  '--default-button-color': gray[500].hex,\n  '--default-button-danger-color': red[500].hex,\n  '--default-button-primary-color': blue[500].hex,\n  '--default-button-success-color': green[500].hex,\n  '--default-button-warning-color': yellow[500].hex,\n\n  // Focus\n  '--focus-color': blue[500].hex,\n\n  // Screen\n  '--screen-medium-break': '512px',\n  '--screen-default-break': '640px',\n  '--screen-large-break': '960px',\n  '--screen-xlarge-break': '1600px',\n\n  // State\n  '--state-info-color': blue[500].hex,\n  '--state-success-color': green[500].hex,\n  '--state-warning-color': yellow[500].hex,\n  '--state-danger-color': red[500].hex,\n\n  // Navbar\n  '--main-navigation-color': black.hex,\n  '--main-navigation-color--inverted': white.hex,\n}\n\nfunction resolveLegacyTheme(legacyTheme: Partial<LegacyThemeProps>): LegacyThemeProps {\n  const props: LegacyThemeProps = {\n    ...defaultCustomProperties,\n    ...legacyTheme,\n  }\n\n  // Update properties (order matters)\n  props['--focus-color'] = legacyTheme['--focus-color'] || props['--brand-primary']\n  props['--default-button-primary-color'] =\n    legacyTheme['--default-button-primary-color'] || props['--brand-primary']\n  props['--main-navigation-color'] = legacyTheme['--main-navigation-color'] || props['--black']\n  props['--main-navigation-color--inverted'] =\n    legacyTheme['--main-navigation-color--inverted'] || props['--white']\n  props['--state-info-color'] = legacyTheme['--brand-primary'] || props['--brand-primary']\n\n  return props\n}\n","/* eslint-disable simple-import-sort/imports */\n/* disabling for now because the imports trigger side effects causing test snapshots to update */\nimport {type ReactElement} from 'react'\nimport {type Config} from '../config'\nimport {type StudioThemeColorSchemeKey} from '../theme/types'\nimport {GlobalStyle} from './GlobalStyle'\nimport {type RouterHistory} from './router'\nimport {StudioLayout} from './StudioLayout'\nimport {StudioProvider} from './StudioProvider'\n\n/**\n * @hidden\n * @beta */\nexport interface StudioProps {\n  config: Config\n  basePath?: string\n  /**\n   * Useful for scenarios where the Studio is embedded in another app,\n   * and the surrounding app also implements light and dark color schemes.\n   *\n   * The callback is fired whenever the user selects a new color scheme in the \"Appearance\" menu in the top-right dropdown.\n   * It also fires on first render with its initial value if you don't provide a `scheme` prop.\n   *\n   * If the user selects \"System\" in the \"Appearance\" menu, the callback will be fired with `\"system\"` as the scheme.\n   * To resolve `\"system\"` to the same color scheme as the Studio use the `usePrefersDark` hook from `@sanity/ui`:\n   *\n   * ```tsx\n   * import {usePrefersDark} from '@sanity/ui'\n   * import {Studio} from 'sanity'\n   *\n   * export default function StudioPage() {\n   *   const prefersDark = usePrefersDark()\n   *   const [_scheme, setScheme] = useState('system')\n   *   const prefersScheme = prefersDark ? 'dark' : 'light'\n   *   const scheme = _scheme === 'system' ? prefersScheme : _scheme\n   *\n   *   return (\n   *     <AppLayout scheme={scheme}>\n   *       <Studio config={config} onSchemeChange={setScheme} />\n   *     </AppLayout>\n   *   )\n   * }\n   * ```\n   *\n   *\n   * @hidden\n   * @beta\n   */\n  onSchemeChange?: (nextScheme: StudioThemeColorSchemeKey) => void\n  /**\n   * By default the Studio handles the color scheme itself, but you can provide a color scheme to use.\n   * If you only define `scheme` then the top-right \"Appearance\" dropdown menu will be hidden,\n   * and the Studio will stay in sync with the `scheme` prop.\n   *\n   * You may setup two-way sync and re-enable the \"Appearance\" dropdown menu by also providing an `onSchemeChange` callback:\n   * ```tsx\n   * import {Studio} from 'sanity'\n   * import {useSession} from 'your-app'\n   *\n   * export default function StudioPage() {\n   *   const session = useSession()\n   *   // Overrides the default scheme to be what's in the app user session\n   *   const [_scheme, setScheme] = useState(session.scheme)\n   *   const scheme = _scheme === 'system' ? session.scheme : _scheme\n   *\n   *   return (\n   *     <AppLayout scheme={scheme}>\n   *       <Studio config={config} scheme={scheme} onSchemeChange={setScheme} />\n   *     </AppLayout>\n   *   )\n   * }\n   * ```\n   *\n   *\n   * @hidden\n   * @beta\n   */\n  scheme?: StudioThemeColorSchemeKey\n  /**\n   * @hidden\n   * @beta */\n  unstable_history?: RouterHistory\n  /**\n   * @hidden\n   * @beta */\n  unstable_globalStyles?: boolean\n  /**\n   * @hidden\n   * @beta */\n  unstable_noAuthBoundary?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport function Studio(props: StudioProps): ReactElement {\n  const {\n    basePath,\n    config,\n    onSchemeChange,\n    scheme,\n    unstable_globalStyles: globalStyles,\n    unstable_history,\n    unstable_noAuthBoundary,\n  } = props\n\n  return (\n    <StudioProvider\n      basePath={basePath}\n      config={config}\n      onSchemeChange={onSchemeChange}\n      scheme={scheme}\n      unstable_history={unstable_history}\n      unstable_noAuthBoundary={unstable_noAuthBoundary}\n    >\n      {globalStyles && <GlobalStyle />}\n      <StudioLayout />\n    </StudioProvider>\n  )\n}\n","import {StrictMode} from 'react'\nimport {createRoot} from 'react-dom/client'\n\nimport {type Config} from '../config'\nimport {Studio} from './Studio'\n\ninterface RenderStudioOptions {\n  basePath?: string\n  reactStrictMode?: boolean\n}\n\n/**\n * @internal\n * @deprecated Use `renderStudio(rootElement, config, {reactStrictMode: true})` instead\n */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: boolean,\n): () => void\n\n/** @internal */\nexport function renderStudio(rootElement: HTMLElement | null, config: Config): () => void\n\n/** @internal */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: RenderStudioOptions,\n): () => void\n\n/** @internal */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: RenderStudioOptions | boolean = false,\n): () => void {\n  if (!rootElement) {\n    throw new Error('Missing root element to mount application into')\n  }\n\n  const opts = typeof options === 'boolean' ? {reactStrictMode: options} : options\n  const {reactStrictMode = false, basePath} = opts\n\n  const root = createRoot(rootElement)\n\n  root.render(\n    reactStrictMode ? (\n      <StrictMode>\n        <Studio config={config} basePath={basePath} unstable_globalStyles />\n      </StrictMode>\n    ) : (\n      <Studio config={config} basePath={basePath} unstable_globalStyles />\n    ),\n  )\n\n  return () => root.unmount()\n}\n","import {useMemoObservable} from 'react-rx'\nimport {of, timer} from 'rxjs'\nimport {distinctUntilChanged, map, mapTo, startWith, switchMap} from 'rxjs/operators'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport type ConnectionState = 'connecting' | 'reconnecting' | 'connected'\n\nconst INITIAL: ConnectionState = 'connecting'\n\n/** @internal */\nexport function useConnectionState(publishedDocId: string, docTypeName: string): ConnectionState {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () =>\n      documentStore.pair.documentEvents(publishedDocId, docTypeName).pipe(\n        map((ev: {type: string}) => ev.type),\n        map((eventType) => eventType !== 'reconnect'),\n        switchMap((isConnected) =>\n          isConnected ? of('connected') : timer(200).pipe(mapTo('reconnecting')),\n        ),\n        startWith(INITIAL as any),\n        distinctUntilChanged(),\n      ),\n    [documentStore.pair, publishedDocId, docTypeName],\n    INITIAL,\n  )\n}\n","import {useMemoObservable} from 'react-rx'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport function useDocumentOperationEvent(publishedDocId: string, docTypeName: string) {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () => documentStore.pair.operationEvents(publishedDocId, docTypeName),\n    [documentStore.pair, publishedDocId, docTypeName],\n  )\n}\n","import {useMemoObservable} from 'react-rx'\nimport {debounce, merge, share, skip, take, timer} from 'rxjs'\n\nimport {type EditStateFor, useDocumentStore} from '../store'\n\n/** @internal */\nexport function useEditState(\n  publishedDocId: string,\n  docTypeName: string,\n  priority: 'default' | 'low' = 'default',\n): EditStateFor {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(() => {\n    if (priority === 'low') {\n      const base = documentStore.pair.editState(publishedDocId, docTypeName).pipe(share())\n\n      return merge(\n        base.pipe(take(1)),\n        base.pipe(\n          skip(1),\n          debounce(() => timer(1000)),\n        ),\n      )\n    }\n\n    return documentStore.pair.editState(publishedDocId, docTypeName)\n  }, [documentStore.pair, publishedDocId, docTypeName, priority]) as EditStateFor\n}\n","import {useMemo} from 'react'\n\nimport {useCurrentLocale} from '../i18n/hooks/useLocale'\nimport {intlCache} from '../i18n/intlCache'\nimport {useListFormat} from './useListFormat'\n\ntype Duration = {\n  days: number\n  hours: number\n  minutes: number\n  seconds: number\n  milliseconds: number\n}\ntype DurationUnit = keyof Duration\n\nconst PERIODS = ['days', 'hours', 'minutes', 'seconds', 'milliseconds'] as const\n\n/**\n * Options for the duration formatter\n *\n * @public\n */\nexport interface UseFormattedDurationOptions {\n  /**\n   * The formatting style to use in unit and list formatting. The default is \"short\".\n   */\n  style?: 'short' | 'long' | 'narrow'\n\n  /**\n   * The resolution of the duration. The default is \"seconds\".\n   */\n  resolution?: 'seconds' | 'milliseconds'\n}\n\n/**\n * The result of the duration formatter\n *\n * @public\n */\nexport interface FormattedDuration {\n  /** The human-readable, formatted duration as a string, eg \"2 days, 3 hr, and 20 sec\" */\n  formatted: string\n\n  /** The machine-readable, formatted ISO-8601 duration string, eg \"P2DT3H20S\" */\n  iso8601: string\n}\n\n/**\n * Formats a duration (in milliseconds) to a more user friendly string eg `1h 30m` or `1t 29m 15s`.\n * Can be configured to output full units, eg `1 hour 30 minutes` or `1 hour 3 minutes 15 seconds`.\n * Uses the current locale, which also applies to the division of units.\n *\n * @example English (en-US) locale formatting\n * ```ts\n * useFormattedDuration(5589000)\n * // {\"formatted\": \"1 hour, 33 minutes, and 9 seconds\", \"iso8601\": \"PT1H33M9S\"}\n * ```\n *\n * @example Norwegian (no-NB) locale formatting\n * ```ts\n * useFormattedDuration(5589000)\n * // {\"formatted\": \"1 time, 33 minutter og 9 sekunder\", \"iso8601\": \"PT1H33M9S\"}\n * ```\n *\n * @param options - Optional options for the number formatter\n * @returns An object with `formatted` and `iso8601` properties\n * @public\n */\nexport function useFormattedDuration(\n  durationMs: number,\n  options?: UseFormattedDurationOptions,\n): FormattedDuration {\n  const {style = 'short', resolution = 'seconds'} = options || {}\n  const unitDisplay = style\n  const locale = useCurrentLocale().id\n  const listFormat = useListFormat({type: 'unit', style})\n  const isNegative = durationMs < 0\n  const duration = parseMilliseconds(Math.abs(durationMs))\n  const formatters: Record<DurationUnit, Intl.NumberFormat> = useMemo(\n    () => ({\n      days: intlCache.numberFormat(locale, {style: 'unit', unit: 'day', unitDisplay}),\n      hours: intlCache.numberFormat(locale, {style: 'unit', unit: 'hour', unitDisplay}),\n      minutes: intlCache.numberFormat(locale, {style: 'unit', unit: 'minute', unitDisplay}),\n      seconds: intlCache.numberFormat(locale, {style: 'unit', unit: 'second', unitDisplay}),\n      milliseconds: intlCache.numberFormat(locale, {\n        style: 'unit',\n        unit: 'millisecond',\n        unitDisplay,\n      }),\n    }),\n    [locale, unitDisplay],\n  )\n\n  const parts: string[] = []\n  for (const period of PERIODS) {\n    const value = duration[period]\n    if (!value || (resolution === 'seconds' && period === 'milliseconds')) {\n      continue\n    }\n\n    const prefix = isNegative && parts.length === 0 ? '-' : ''\n    parts.push(`${prefix}${formatters[period].format(value)}`)\n  }\n\n  const formatted =\n    parts.length === 0\n      ? // If passing duration 0, we still want to show something\n        formatters[resolution].format(0)\n      : // Usually, we want to join the parts with the locales list formatter\n        listFormat.format(parts)\n\n  const iso8601 = durationToISO8601(duration, isNegative)\n\n  return {formatted, iso8601}\n}\n\n/**\n * Parse milliseconds to durations. We stop at days because months are not a fixed unit,\n * nor are years (365.25 strictly speaking, but people may expact calendar days). If we\n * wanted to include those, we'd want to use `intervalToDuration` from date-fns, and base\n * it on two specific dates.\n *\n * @param milliseconds - Milliseconds to parse\n * @returns Object of duration parts\n * @internal\n */\nfunction parseMilliseconds(milliseconds: number): Duration {\n  return {\n    days: Math.trunc(milliseconds / 86400000),\n    hours: Math.trunc(milliseconds / 3600000) % 24,\n    minutes: Math.trunc(milliseconds / 60000) % 60,\n    seconds: Math.trunc(milliseconds / 1000) % 60,\n    milliseconds: Math.trunc(milliseconds) % 1000,\n  }\n}\n\n/**\n * Format the given duration to an {@link https://en.wikipedia.org/wiki/ISO_8601#Durations | ISO-8601 duration}\n * string, eg `P1DT2H3M4.005S` meaning \"1 day, 2 hours, 3 minutes, 4 seconds and 5 milliseconds\".\n *\n * If days are zero, it will skip straight to the time part, eg `PT2H3M4.005S`.\n * If milliseconds are zero, it will skip the milliseconds part, eg `PT2H3M4S`.\n *\n * @param dur - The duration to format\n * @returns The formatted duration\n * @internal\n */\nfunction durationToISO8601(dur: Duration, isNegative: boolean): string {\n  const date = dur.days ? `${dur.days}D` : ''\n\n  let time = ''\n  if (dur.hours) time += `${dur.hours}H`\n  if (dur.minutes) time += `${dur.minutes}M`\n\n  if (dur.milliseconds) {\n    time += `${((dur.seconds * 1000 + dur.milliseconds) / 1000).toFixed(3)}S`\n  } else if (dur.seconds) {\n    time += `${dur.seconds}S`\n  }\n\n  if (!date && !time) {\n    return 'PT0S'\n  }\n\n  const parts = time ? [date, time] : [date]\n  const duration = `P${parts.join('T')}`\n  return isNegative ? `-${duration}` : duration\n}\n","import {useCurrentLocale} from '../i18n/hooks/useLocale'\nimport {intlCache} from '../i18n/intlCache'\n\n/**\n * Options for the `useNumberFormat` hook\n *\n * @public\n */\nexport type UseNumberFormatOptions = Intl.NumberFormatOptions\n\n/**\n * Returns an instance of `Intl.NumberFormat` that uses the currently selected locale,\n * and enables locale/language-sensitive number formatting.\n *\n * @param options - Optional options for the number formatter\n * @returns Instance of `Intl.NumberFormat`\n * @public\n */\nexport function useNumberFormat(options: UseNumberFormatOptions = {}): Intl.NumberFormat {\n  const currentLocale = useCurrentLocale().id\n  return intlCache.numberFormat(currentLocale, options)\n}\n","import {useMemoObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport interface SyncState {\n  isSyncing: boolean\n}\n\nconst SYNCING = {isSyncing: true}\nconst NOT_SYNCING = {isSyncing: false}\n\n/** @internal */\nexport function useSyncState(publishedDocId: string, documentType: string): SyncState {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable<SyncState>(\n    () =>\n      documentStore.pair\n        .consistencyStatus(publishedDocId, documentType)\n        .pipe(map((isConsistent) => (isConsistent ? NOT_SYNCING : SYNCING))),\n    [documentStore.pair, documentType, publishedDocId],\n    NOT_SYNCING,\n  )\n}\n","import {useRelativeTime} from './useRelativeTime'\n\n/** @internal */\nexport interface TimeAgoOpts {\n  minimal?: boolean\n  agoSuffix?: boolean\n}\n\n/**\n * @deprecated - Use {@link useRelativeTime} instead\n * @internal\n */\nexport function useTimeAgo(time: Date | string, options: TimeAgoOpts = {}): string {\n  return useRelativeTime(time, {\n    minimal: options.minimal,\n    useTemporalPhrase: options.agoSuffix,\n  })\n}\n","import {type Tool} from '../config'\nimport {useSource} from '../studio'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function useTools(): Tool[] {\n  return useSource().tools\n}\n","/* eslint-disable max-nested-callbacks */\nimport {type SanityDocument} from '@sanity/client'\nimport {type User} from '@sanity/types'\nimport {sortBy} from 'lodash'\nimport {useEffect, useMemo, useState} from 'react'\nimport {concat, forkJoin, map, mergeMap, type Observable, of, switchMap} from 'rxjs'\n\nimport {\n  type DocumentValuePermission,\n  grantsPermissionOn,\n  type ProjectData,\n  useProjectStore,\n  useUserStore,\n} from '../store'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../studioClient'\nimport {useClient} from './useClient'\n\ntype Loadable<T> = {\n  data: T | null\n  error: Error | null\n  loading: boolean\n}\n\n/**\n * @beta\n * @hidden\n */\nexport type UserListWithPermissionsHookValue = Loadable<UserWithPermission[]>\n\n/**\n * @beta\n * @hidden\n */\nexport interface UserWithPermission extends User {\n  granted: boolean\n}\n\nconst INITIAL_STATE: UserListWithPermissionsHookValue = {\n  data: [],\n  error: null,\n  loading: true,\n}\n\n/**\n * @beta\n */\nexport interface UserListWithPermissionsOptions {\n  documentValue: SanityDocument | null\n  permission: DocumentValuePermission\n}\n\nlet cachedSystemGroups: [] | null = null\n\n/**\n * @beta\n * Returns a list of users with the specified permission on the document.\n * If no document is provided it will return all as `granted: true`\n */\nexport function useUserListWithPermissions(\n  opts: UserListWithPermissionsOptions,\n): UserListWithPermissionsHookValue {\n  const {documentValue, permission} = opts\n\n  const projectStore = useProjectStore()\n  const userStore = useUserStore()\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const [state, setState] = useState<UserListWithPermissionsHookValue>(INITIAL_STATE)\n\n  const list$ = useMemo(() => {\n    // 1. Get the project members and filter out the robot users\n    const members$: Observable<ProjectData['members']> = projectStore\n      .get()\n      .pipe(map((res: ProjectData) => res.members?.filter((m) => !m.isRobot)))\n\n    // 2. Map the members to users to get more data of the users such as displayName (used for filtering)\n    const users$: Observable<UserWithPermission[]> = members$.pipe(\n      switchMap(async (members) => {\n        const ids = members.map(({id}) => id)\n        const users = await userStore.getUsers(ids)\n        return users\n      }),\n      map((res) =>\n        res.map((user) => ({\n          displayName: user.displayName,\n          id: user.id,\n          granted: false,\n        })),\n      ),\n    )\n\n    // 3. Get all the system groups. Use the cached response if it exists to avoid unnecessary requests.\n    const cached = cachedSystemGroups\n    const systemGroup$ = cached ? of(cached) : client.observable.fetch('*[_type == \"system.group\"]')\n\n    // 4. Check if the user has read permission on the document and set the `granted` property\n    const grants$: Observable<UserWithPermission[]> = forkJoin([users$, systemGroup$]).pipe(\n      mergeMap(async ([users, groups]) => {\n        if (!cached) {\n          cachedSystemGroups = groups\n        }\n\n        const grantPromises = users?.map(async (user) => {\n          const grants = groups.map((group: any) => {\n            if (group.members.includes(user.id)) {\n              return group.grants\n            }\n\n            return []\n          })\n\n          const flattenedGrants = [...grants].flat()\n          const {granted} = await grantsPermissionOn(\n            user.id,\n            flattenedGrants,\n            permission,\n            documentValue,\n          )\n\n          return {\n            ...user,\n            granted: granted,\n          }\n        })\n\n        const usersWithPermission = await Promise.all(grantPromises || [])\n\n        return usersWithPermission\n      }),\n    )\n\n    // 5. Sort the users alphabetically\n    const $alphabetical: Observable<Loadable<UserWithPermission[]>> = grants$.pipe(\n      map((res) => ({\n        error: null,\n        loading: false,\n        data: sortBy(res, 'displayName'),\n      })),\n    )\n\n    return $alphabetical\n  }, [client.observable, documentValue, projectStore, userStore, permission])\n\n  useEffect(() => {\n    const initial$ = of(INITIAL_STATE)\n    const state$ = concat(initial$, list$)\n\n    const sub = state$.subscribe({\n      next: setState,\n      error: (error) => {\n        setState({data: [], error, loading: false})\n      },\n    })\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [list$])\n\n  return state\n}\n","import {useMemoObservable} from 'react-rx'\n\nimport {useDocumentStore, type ValidationStatus} from '../store'\n\nconst INITIAL: ValidationStatus = {validation: [], isValidating: false}\n\n/** @internal */\nexport function useValidationStatus(publishedDocId: string, docTypeName: string): ValidationStatus {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () => documentStore.pair.validation(publishedDocId, docTypeName),\n    [documentStore.pair, publishedDocId, docTypeName],\n    INITIAL,\n  )\n}\n","import {type ActionHook} from './types'\n\nconst actionIds = new WeakMap<ActionHook<any, any>, string>()\n\nlet counter = 0\n\n/** @internal */\nexport function getHookId<T, K>(actionHook: ActionHook<T, K>): string {\n  const cachedId = actionIds.get(actionHook)\n\n  if (cachedId) return cachedId\n\n  const id = `${actionHook.name || (actionHook as any).displayName || '<anonymous>'}-${counter++}`\n\n  actionIds.set(actionHook, id)\n\n  return id\n}\n","const requestIdleCallbackShim: Window['requestIdleCallback'] = (callback) => {\n  const start = Date.now()\n\n  return setTimeout(() => {\n    callback({\n      didTimeout: false,\n      timeRemaining() {\n        return Math.max(0, Date.now() - start)\n      },\n    })\n  }, 1) as unknown as ReturnType<Window['requestIdleCallback']>\n}\n\nconst cancelIdleCallbackShim: Window['cancelIdleCallback'] = (handle: unknown) => {\n  return clearTimeout(handle as any)\n}\n\nconst _requestIdleCallback =\n  typeof requestIdleCallback === 'undefined' ? requestIdleCallbackShim : requestIdleCallback\nconst _cancelIdleCallback =\n  typeof cancelIdleCallback === 'undefined' ? cancelIdleCallbackShim : cancelIdleCallback\n\nexport {_requestIdleCallback as requestIdleCallback}\nexport {_cancelIdleCallback as cancelIdleCallback}\n","import {type ThrottleSettings} from 'lodash'\nimport {type ReactNode, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {isNonNullable, useThrottledCallback} from '../../util'\nimport {getHookId} from './actionId'\nimport {HookStateContainer} from './HookStateContainer'\nimport {cancelIdleCallback, requestIdleCallback} from './requestIdleCallback'\nimport {type ActionHook} from './types'\n\n/** @internal */\nexport interface GetHookCollectionStateProps<T, K> {\n  /**\n   * Arguments that will be received by the action hooks, `onComplete` will be added by the HookStateContainer component.\n   */\n  args: T\n  children: (props: {states: K[]}) => ReactNode\n  hooks: ActionHook<T & {onComplete: () => void}, K>[]\n  onReset?: () => void\n  /**\n   * Name for the hook group. If provided, only hooks with the same group name will be included in the collection.\n   */\n  group?: string\n}\n\nconst throttleOptions: ThrottleSettings = {trailing: true}\n\n/** @internal */\nexport function GetHookCollectionState<T, K>(props: GetHookCollectionStateProps<T, K>) {\n  const {hooks, args, children, group, onReset} = props\n\n  const statesRef = useRef<Record<string, {value: K}>>({})\n  const [tickId, setTick] = useState(0)\n\n  const [keys, setKeys] = useState<Record<string, number>>({})\n\n  const ricHandle = useRef<number | null>(null)\n\n  const handleRequestUpdate = useCallback(() => {\n    if (ricHandle.current) {\n      cancelIdleCallback(ricHandle.current)\n    }\n\n    ricHandle.current = requestIdleCallback(() => {\n      ricHandle.current = null\n\n      setTick((tick) => tick + 1)\n    })\n  }, [])\n\n  const handleRequestUpdateThrottled = useThrottledCallback(\n    handleRequestUpdate,\n    60,\n    throttleOptions,\n  )\n\n  const handleNext = useCallback(\n    (id: any, hookState: any) => {\n      const hookGroup = hookState?.group || ['default']\n      if (hookState === null || (group && !hookGroup.includes(group))) {\n        delete statesRef.current[id]\n      } else {\n        const current = statesRef.current[id]\n        statesRef.current[id] = {...current, value: hookState}\n      }\n    },\n    [group],\n  )\n\n  const handleReset = useCallback(\n    (id: any) => {\n      setKeys((currentKeys) => ({...currentKeys, [id]: (currentKeys[id] || 0) + 1}))\n\n      if (onReset) {\n        onReset()\n      }\n    },\n    [onReset],\n  )\n\n  const hookIds = useMemo(() => hooks.map((hook) => getHookId(hook)), [hooks])\n  const states = useMemo(\n    () => hookIds.map((id) => statesRef.current[id]?.value).filter(isNonNullable),\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- tickId is used to refresh the memo, before it can be removed it needs to be investigated what impact it has\n    [hookIds, tickId],\n  )\n\n  return (\n    <>\n      {hooks.map((hook) => {\n        const id = getHookId(hook)\n        const key = keys[id] || 0\n\n        return (\n          <HookStateContainer\n            key={`${id}-${key}`}\n            hook={hook}\n            id={id}\n            args={args}\n            onNext={handleNext}\n            onRequestUpdate={handleRequestUpdateThrottled}\n            onReset={handleReset}\n          />\n        )\n      })}\n\n      {children({states})}\n    </>\n  )\n}\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","import {type HTMLProps} from 'react'\nimport {IntentLink, type IntentLinkProps} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function IntentButton(\n  props: IntentLinkProps & ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'ref' | 'size' | 'as'>,\n) {\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...props} as={IntentLink} />\n  )\n}\n","import {type RelativeTimeOptions, useRelativeTime} from '../hooks/useRelativeTime'\n\n/**\n * @internal\n */\nexport interface RelativeTimeProps extends RelativeTimeOptions {\n  time: string | Date\n}\n\n/**\n * @internal\n */\nexport function RelativeTime({time, ...options}: RelativeTimeProps) {\n  const timestamp = time instanceof Date ? time : new Date(time)\n  const timeAgo = useRelativeTime(timestamp, options)\n\n  return (\n    <time dateTime={timestamp.toISOString()} title={timeAgo}>\n      {timeAgo}\n    </time>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type ReactElement} from 'react'\n\nimport {useReferringDocuments} from '../hooks/useReferringDocuments'\nimport {type DocumentStore} from '../store'\n\n/**\n * @internal\n * @deprecated - Will be removed in 4.0.0, use the `useReferringDocuments(<documentId>)` hook instead\n */\nexport function WithReferringDocuments({\n  children,\n  id,\n}: {\n  children: (props: {isLoading: boolean; referringDocuments: SanityDocument[]}) => ReactElement\n  /**\n   * @deprecated - no longer required\n   */\n  documentStore?: DocumentStore\n  id: string\n}) {\n  return children(useReferringDocuments(id))\n}\n","import {type ReactElement, type ReactNode} from 'react'\n\nimport {defaults} from './defaults'\nimport {ZIndexContext} from './ZIndexContext'\n\n/**\n * TODO: Rename to `ZOffsetsProvider`\n *\n * @internal\n */\nexport function ZIndexProvider({children}: {children?: ReactNode}): ReactElement {\n  return <ZIndexContext.Provider value={defaults}>{children}</ZIndexContext.Provider>\n}\n","import {TextInput} from '@sanity/ui'\n\nimport {type StringInputProps} from '../types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport type TelephoneInputProps = StringInputProps\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function TelephoneInput(props: TelephoneInputProps) {\n  const {schemaType, validationError, value, elementProps} = props\n\n  return (\n    <TextInput\n      type=\"tel\"\n      inputMode=\"tel\"\n      customValidity={validationError}\n      value={value || ''}\n      placeholder={schemaType.placeholder}\n      {...elementProps}\n    />\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {type ConditionalProperty, type CurrentUser} from '@sanity/types'\n\n/**\n * @internal\n */\nexport interface ConditionalPropertyCallbackContext {\n  parent?: unknown\n  document?: Record<string, unknown>\n  currentUser: Omit<CurrentUser, 'role'> | null\n  value: unknown\n}\n\n/**\n * @internal\n */\nexport function resolveConditionalProperty(\n  property: ConditionalProperty,\n  context: ConditionalPropertyCallbackContext,\n) {\n  const {currentUser, document, parent, value} = context\n\n  if (typeof property === 'boolean' || property === undefined) {\n    return Boolean(property)\n  }\n\n  return (\n    property({\n      document: document as any,\n      parent,\n      value,\n      currentUser,\n    }) === true // note: we can't strictly \"trust\" the return value here, so the conditional property should probably be typed as unknown\n  )\n}\n","import {isKeySegment, type Path} from '@sanity/types'\n\nimport {type StateTree} from './types'\n\n/** @internal */\nexport function setAtPath<T>(\n  currentTree: StateTree<T> | undefined,\n  path: Path,\n  value: T,\n): StateTree<T> {\n  if (path.length === 0) {\n    return {...(currentTree || {}), value}\n  }\n  const [head, ...tail] = path\n  const key = isKeySegment(head) ? head._key : String(head)\n  const children = currentTree?.children ?? {}\n  return {\n    value: currentTree?.value,\n    children: {...children, [key]: setAtPath(children[key] || {}, tail, value)},\n  }\n}\n","import {type FieldGroup} from '@sanity/types'\n\n/**\n * Max supported field depth. Fields deeper than this will be considered hidden.\n */\nexport const MAX_FIELD_DEPTH = 20\n\n/**\n * Start auto-collapsing fields at this nesting level unless schema/field configuration says otherwise\n */\nexport const AUTO_COLLAPSE_DEPTH = 3\n\nexport const ALL_FIELDS_GROUP: FieldGroup = {\n  name: 'all-fields',\n  title: 'All fields',\n  hidden: false,\n}\n","import {type ObjectSchemaTypeWithOptions} from '@sanity/types'\n\nimport {AUTO_COLLAPSE_DEPTH} from '../constants'\n\ninterface CollapsibleOptions {\n  collapsible: boolean | undefined\n  // Initial collapsed state\n  collapsed: boolean | undefined\n}\n\n/**\n * Takes an option object that can optionally have a 'collapsed' property\n * (`{collapsed?: boolean, collapsible?: boolean}`)\n * and returns a resolved collapsed state based on configuration and whether it's below a certain nesting level threshold\n - collapsible: boolean - whether the field can be collapsed\n - collapsed: boolean - whether the field is initially collapsed\n * NOTE: If a field is configured with ´collapsed: true´, ignore any ´collapsible´ configuration and make it collapsible no matter what, otherwise it will be left forever collapsed.\n *\n * If the nesting level is deeper than or equal to AUTO_COLLAPSE_DEPTH, the default for the field/fieldset becomes \"collapsed\"\n *\n * @param options - Whether the field or fieldset should be collapsed\n * @param level - Nesting level\n */\nexport function getCollapsedWithDefaults(\n  options: ObjectSchemaTypeWithOptions['options'] = {},\n  level: number,\n): CollapsibleOptions {\n  if (options?.collapsible === false || options?.collapsable === false) {\n    return {collapsible: false, collapsed: false}\n  }\n\n  const collapsed =\n    // eslint-disable-next-line no-nested-ternary\n    typeof options?.collapsed === 'boolean'\n      ? options.collapsed\n      : level >= AUTO_COLLAPSE_DEPTH\n        ? true\n        : undefined\n\n  const collapsible =\n    options?.collapsible === true || options?.collapsable === true || collapsed === true\n      ? true\n      : undefined\n\n  return {\n    collapsible,\n    collapsed,\n  }\n}\n","import {type ArraySchemaType, type SchemaType} from '@sanity/types'\nimport {resolveTypeName} from '@sanity/util/content'\n\nexport function getItemType(arrayType: ArraySchemaType, item: unknown): SchemaType | undefined {\n  const itemTypeName = resolveTypeName(item)\n\n  return itemTypeName === 'object' && arrayType.of.length === 1\n    ? arrayType.of[0]\n    : arrayType.of.find((memberType) => memberType.name === itemTypeName)\n}\n\nexport function getPrimitiveItemType(\n  arrayType: ArraySchemaType,\n  item: unknown,\n): SchemaType | undefined {\n  const itemTypeName = resolveTypeName(item)\n\n  return arrayType?.of.find(\n    (memberType) => memberType.name === itemTypeName || memberType.jsonType === itemTypeName,\n  )\n}\n","/* eslint-disable max-statements */\n/* eslint-disable camelcase, no-else-return */\n\nimport {\n  type ArraySchemaType,\n  type BooleanSchemaType,\n  type CurrentUser,\n  isArrayOfObjectsSchemaType,\n  isArraySchemaType,\n  isObjectSchemaType,\n  type NumberSchemaType,\n  type ObjectField,\n  type ObjectSchemaType,\n  type Path,\n  type StringSchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {resolveTypeName} from '@sanity/util/content'\nimport {isEqual, pathFor, startsWith, toString, trimChildPath} from '@sanity/util/paths'\nimport {castArray, isEqual as _isEqual, pick} from 'lodash'\n\nimport {type FIXME} from '../../FIXME'\nimport {type FormNodePresence} from '../../presence'\nimport {EMPTY_ARRAY, isRecord} from '../../util'\nimport {getFieldLevel} from '../studio/inputResolver/helpers'\nimport {resolveConditionalProperty} from './conditional-property'\nimport {ALL_FIELDS_GROUP, MAX_FIELD_DEPTH} from './constants'\nimport {\n  type FieldSetMember,\n  type HiddenField,\n  type ObjectArrayFormNode,\n  type PrimitiveFormNode,\n  type StateTree,\n} from './types'\nimport {type FormFieldGroup} from './types/fieldGroup'\nimport {type FieldError} from './types/memberErrors'\nimport {\n  type ArrayOfObjectsMember,\n  type ArrayOfPrimitivesMember,\n  type FieldMember,\n  type ObjectMember,\n} from './types/members'\nimport {\n  type ArrayOfObjectsFormNode,\n  type ArrayOfPrimitivesFormNode,\n  type ObjectFormNode,\n} from './types/nodes'\nimport {getCollapsedWithDefaults} from './utils/getCollapsibleOptions'\nimport {getItemType, getPrimitiveItemType} from './utils/getItemType'\n\ntype PrimitiveSchemaType = BooleanSchemaType | NumberSchemaType | StringSchemaType\n\nfunction isFieldEnabledByGroupFilter(\n  // the groups config for the \"enclosing object\" type\n  groupsConfig: FormFieldGroup[],\n  fieldGroup: string | string[] | undefined,\n  selectedGroup: FormFieldGroup,\n) {\n  if (selectedGroup.name === ALL_FIELDS_GROUP.name) {\n    return true\n  }\n\n  // \"all fields\" is not the selected group and the field has no group config, so it should be hidden\n  if (fieldGroup === undefined) {\n    return false\n  }\n\n  // if there's no group config for the object type, all fields are visible\n  if (groupsConfig.length === 0 && selectedGroup.name === ALL_FIELDS_GROUP.name) {\n    return true\n  }\n\n  return castArray(fieldGroup).includes(selectedGroup.name)\n}\n\nfunction isAcceptedObjectValue(value: any): value is Record<string, unknown> | undefined {\n  return typeof value === 'undefined' || isRecord(value)\n}\n\nfunction isValidArrayOfObjectsValue(value: any): value is unknown[] | undefined {\n  return typeof value === 'undefined' || Array.isArray(value)\n}\n\nfunction isValidArrayOfPrimitivesValue(\n  value: any,\n): value is (boolean | number | string)[] | undefined {\n  return typeof value === 'undefined' || Array.isArray(value)\n}\n\nfunction everyItemIsObject(value: unknown[]): value is object[] {\n  return value.length === 0 || value.every((item) => isRecord(item))\n}\n\nfunction findDuplicateKeyEntries(array: {_key: string}[]) {\n  const seenKeys = new Set<string>()\n  return array.reduce((acc: [index: number, key: string][], item, index) => {\n    if (seenKeys.has(item._key)) {\n      acc.push([index, item._key])\n    }\n    seenKeys.add(item._key)\n    return acc\n  }, [])\n}\n\nfunction hasKey<T extends object>(value: T): value is T & {_key: string} {\n  return '_key' in value\n}\n\nfunction everyItemHasKey<T extends object>(array: T[]): array is (T & {_key: string})[] {\n  return array?.every((item) => isRecord(item) && hasKey(item))\n}\n\nfunction isChangedValue(value: any, comparisonValue: any) {\n  // changes panel is not being able to identify changes in array of objects\n  // (especially when it comes to unpublished changes)\n  // the main issue it fixes is in instances where the array removes a last item but instead of turning\n  // \"undefined\" it returns an empty array (and so the change indicator remains active when it shouldn't)\n  if (\n    (Array.isArray(value) && typeof comparisonValue === 'undefined') ||\n    (Array.isArray(comparisonValue) && typeof value === 'undefined')\n  ) {\n    return false\n  }\n\n  if (value && !comparisonValue) {\n    return true\n  }\n  return !_isEqual(value, comparisonValue)\n}\n\n/*\n * Takes a field in context of a parent object and returns prepared props for it\n */\nfunction prepareFieldMember(props: {\n  field: ObjectField\n  parent: RawState<ObjectSchemaType, unknown> & {\n    groups: FormFieldGroup[]\n    selectedGroup: FormFieldGroup\n  }\n  index: number\n}): ObjectMember | HiddenField | null {\n  const {parent, field, index} = props\n  const fieldPath = pathFor([...parent.path, field.name])\n  const fieldLevel = getFieldLevel(field.type, parent.level + 1)\n\n  const parentValue = parent.value\n  const parentComparisonValue = parent.comparisonValue\n  if (!isAcceptedObjectValue(parentValue)) {\n    // Note: we validate each field, before passing it recursively to this function so getting this error means that the\n    // ´prepareFormState´ function itself has been called with a non-object value\n    throw new Error('Unexpected non-object value')\n  }\n\n  const normalizedFieldGroupNames = field.group ? castArray(field.group) : []\n  const inSelectedGroup = isFieldEnabledByGroupFilter(\n    parent.groups,\n    field.group,\n    parent.selectedGroup,\n  )\n\n  if (isObjectSchemaType(field.type)) {\n    const fieldValue = parentValue?.[field.name]\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n\n    if (!isAcceptedObjectValue(fieldValue)) {\n      return {\n        kind: 'error',\n        key: field.name,\n        fieldName: field.name,\n        error: {\n          type: 'INCOMPATIBLE_TYPE',\n          expectedSchemaType: field.type,\n          resolvedValueType: resolveTypeName(fieldValue),\n          value: fieldValue,\n        },\n      }\n    }\n\n    const conditionalPropertyContext = {\n      value: fieldValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    }\n    const hidden = resolveConditionalProperty(field.type.hidden, conditionalPropertyContext)\n\n    if (hidden) {\n      return {\n        kind: 'hidden',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n      }\n    }\n\n    // readonly is inherited\n    const readOnly =\n      parent.readOnly || resolveConditionalProperty(field.type.readOnly, conditionalPropertyContext)\n\n    // todo: consider requiring a _type annotation for object values on fields as well\n    // if (resolvedValueType !== field.type.name) {\n    //   return {\n    //     kind: 'error',\n    //     key: field.name,\n    //     error: {\n    //       type: 'TYPE_ANNOTATION_MISMATCH',\n    //       expectedSchemaType: field.type,\n    //       resolvedValueType,\n    //     },\n    //   }\n    // }\n\n    const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n    const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n    const scopedCollapsedFieldsets = parent.collapsedFieldSets?.children?.[field.name]\n\n    const inputState = prepareObjectInputState({\n      schemaType: field.type,\n      currentUser: parent.currentUser,\n      parent: parent.value,\n      document: parent.document,\n      value: fieldValue,\n      changed: isChangedValue(fieldValue, fieldComparisonValue),\n      comparisonValue: fieldComparisonValue,\n      presence: parent.presence,\n      validation: parent.validation,\n      fieldGroupState,\n      path: fieldPath,\n      level: fieldLevel,\n      focusPath: parent.focusPath,\n      openPath: parent.openPath,\n      collapsedPaths: scopedCollapsedPaths,\n      collapsedFieldSets: scopedCollapsedFieldsets,\n      readOnly,\n      changesOpen: parent.changesOpen,\n    })\n\n    if (inputState === null) {\n      // if inputState is null is either because we reached max field depth or if it has no visible members\n      return null\n    }\n\n    const defaultCollapsedState = getCollapsedWithDefaults(field.type.options as FIXME, fieldLevel)\n    const collapsed = scopedCollapsedPaths\n      ? scopedCollapsedPaths.value\n      : defaultCollapsedState.collapsed\n\n    return {\n      kind: 'field',\n      key: `field-${field.name}`,\n      name: field.name,\n      index: index,\n\n      inSelectedGroup,\n      groups: normalizedFieldGroupNames,\n\n      open: startsWith(fieldPath, parent.openPath),\n      field: inputState,\n      collapsed,\n      collapsible: defaultCollapsedState.collapsible,\n    }\n  } else if (isArraySchemaType(field.type)) {\n    const fieldValue = parentValue?.[field.name] as unknown[] | undefined\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n    if (isArrayOfObjectsSchemaType(field.type)) {\n      const hasValue = typeof fieldValue !== 'undefined'\n      if (hasValue && !isValidArrayOfObjectsValue(fieldValue)) {\n        const resolvedValueType = resolveTypeName(fieldValue)\n\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'INCOMPATIBLE_TYPE',\n            expectedSchemaType: field.type,\n            resolvedValueType,\n            value: fieldValue,\n          },\n        }\n      }\n\n      if (hasValue && !everyItemIsObject(fieldValue)) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'MIXED_ARRAY',\n            schemaType: field.type,\n            value: fieldValue,\n          },\n        }\n      }\n\n      if (hasValue && !everyItemHasKey(fieldValue)) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'MISSING_KEYS',\n            value: fieldValue,\n            schemaType: field.type,\n          },\n        }\n      }\n\n      const duplicateKeyEntries = hasValue ? findDuplicateKeyEntries(fieldValue) : []\n      if (duplicateKeyEntries.length > 0) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'DUPLICATE_KEYS',\n            duplicates: duplicateKeyEntries,\n            schemaType: field.type,\n          },\n        }\n      }\n\n      const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n      const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n      const scopedCollapsedFieldSets = parent.collapsedFieldSets?.children?.[field.name]\n\n      const readOnly =\n        parent.readOnly ||\n        resolveConditionalProperty(field.type.readOnly, {\n          value: fieldValue,\n          parent: parent.value,\n          document: parent.document,\n          currentUser: parent.currentUser,\n        })\n\n      const fieldState = prepareArrayOfObjectsInputState({\n        schemaType: field.type,\n        parent: parent.value,\n        currentUser: parent.currentUser,\n        document: parent.document,\n        value: fieldValue,\n        changed: isChangedValue(fieldValue, fieldComparisonValue),\n        comparisonValue: fieldComparisonValue as FIXME,\n        fieldGroupState,\n        focusPath: parent.focusPath,\n        openPath: parent.openPath,\n        presence: parent.presence,\n        validation: parent.validation,\n        collapsedPaths: scopedCollapsedPaths,\n        collapsedFieldSets: scopedCollapsedFieldSets,\n        level: fieldLevel,\n        path: fieldPath,\n        readOnly,\n      })\n\n      if (fieldState === null) {\n        return null\n      }\n\n      return {\n        kind: 'field',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n\n        open: startsWith(fieldPath, parent.openPath),\n\n        inSelectedGroup,\n        groups: normalizedFieldGroupNames,\n\n        collapsible: false,\n        collapsed: false,\n        // note: this is what we actually end up passing down as to the next input component\n        field: fieldState,\n      }\n    } else {\n      // array of primitives\n      if (!isValidArrayOfPrimitivesValue(fieldValue)) {\n        const resolvedValueType = resolveTypeName(fieldValue)\n\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'INCOMPATIBLE_TYPE',\n            expectedSchemaType: field.type,\n            resolvedValueType,\n            value: fieldValue,\n          },\n        }\n      }\n\n      const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n      const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n      const scopedCollapsedFieldSets = parent.collapsedFieldSets?.children?.[field.name]\n\n      const readOnly =\n        parent.readOnly ||\n        resolveConditionalProperty(field.type.readOnly, {\n          value: fieldValue,\n          parent: parent.value,\n          document: parent.document,\n          currentUser: parent.currentUser,\n        })\n\n      const fieldState = prepareArrayOfPrimitivesInputState({\n        changed: isChangedValue(fieldValue, fieldComparisonValue),\n        comparisonValue: fieldComparisonValue as FIXME,\n        schemaType: field.type,\n        parent: parent.value,\n        currentUser: parent.currentUser,\n        document: parent.document,\n        value: fieldValue,\n        fieldGroupState,\n        focusPath: parent.focusPath,\n        openPath: parent.openPath,\n        presence: parent.presence,\n        validation: parent.validation,\n        collapsedPaths: scopedCollapsedPaths,\n        collapsedFieldSets: scopedCollapsedFieldSets,\n        level: fieldLevel,\n        path: fieldPath,\n        readOnly,\n      })\n\n      if (fieldState === null) {\n        return null\n      }\n\n      return {\n        kind: 'field',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n\n        inSelectedGroup,\n        groups: normalizedFieldGroupNames,\n\n        open: startsWith(fieldPath, parent.openPath),\n\n        // todo: consider support for collapsible arrays\n        collapsible: false,\n        collapsed: false,\n        // note: this is what we actually end up passing down as to the next input component\n        field: fieldState,\n      }\n    }\n  } else {\n    // primitive fields\n\n    const fieldValue = parentValue?.[field.name] as undefined | boolean | string | number\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n\n    const conditionalPropertyContext = {\n      value: fieldValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    }\n\n    // note: we *only* want to call the conditional props here, as it's handled by the prepare<Object|Array>InputProps otherwise\n    const hidden = resolveConditionalProperty(field.type.hidden, conditionalPropertyContext)\n\n    if (hidden) {\n      return null\n    }\n\n    const readOnly =\n      parent.readOnly || resolveConditionalProperty(field.type.readOnly, conditionalPropertyContext)\n\n    const fieldState = preparePrimitiveInputState({\n      ...parent,\n      comparisonValue: fieldComparisonValue,\n      value: fieldValue as boolean | string | number | undefined,\n      schemaType: field.type as PrimitiveSchemaType,\n      path: fieldPath,\n      readOnly,\n    })\n\n    return {\n      kind: 'field',\n      key: `field-${field.name}`,\n      name: field.name,\n      index: index,\n      open: startsWith(fieldPath, parent.openPath),\n\n      inSelectedGroup,\n      groups: normalizedFieldGroupNames,\n\n      // todo: consider support for collapsible primitive fields\n      collapsible: false,\n      collapsed: false,\n      field: fieldState,\n    }\n  }\n}\n\ninterface RawState<SchemaType, T> {\n  schemaType: SchemaType\n  value?: T\n  comparisonValue?: T | null\n  changed?: boolean\n  document: FIXME_SanityDocument\n  currentUser: Omit<CurrentUser, 'role'> | null\n  parent?: unknown\n  hidden?: boolean\n  readOnly?: boolean\n  path: Path\n  openPath: Path\n  focusPath: Path\n  presence: FormNodePresence[]\n  validation: ValidationMarker[]\n  fieldGroupState?: StateTree<string>\n  collapsedPaths?: StateTree<boolean>\n  collapsedFieldSets?: StateTree<boolean>\n  // nesting level\n  level: number\n  changesOpen?: boolean\n}\n\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck?: false,\n): ObjectFormNode\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck?: true,\n): ObjectFormNode | null\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck = true,\n): ObjectFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n\n  // readonly is inherited\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  const schemaTypeGroupConfig = props.schemaType.groups || []\n  const defaultGroupName = (schemaTypeGroupConfig.find((g) => g.default) || ALL_FIELDS_GROUP)?.name\n\n  const groups = [ALL_FIELDS_GROUP, ...schemaTypeGroupConfig].flatMap((group): FormFieldGroup[] => {\n    const groupHidden = resolveConditionalProperty(group.hidden, conditionalPropertyContext)\n    const isSelected = group.name === (props.fieldGroupState?.value || defaultGroupName)\n\n    // Set the \"all-fields\" group as selected when review changes is open to enable review of all\n    // fields and changes together. When review changes is closed - switch back to the selected tab.\n    const selected = props.changesOpen ? group.name === ALL_FIELDS_GROUP.name : isSelected\n    // Also disable non-selected groups when review changes is open\n    const disabled = props.changesOpen ? !selected : false\n\n    return groupHidden\n      ? []\n      : [\n          {\n            disabled,\n            icon: group?.icon,\n            name: group.name,\n            selected,\n            title: group.title,\n          },\n        ]\n  })\n\n  const selectedGroup = groups.find((group) => group.selected)!\n\n  // note: this is needed because not all object types gets a ´fieldsets´ property during schema parsing.\n  // ideally members should be normalized as part of the schema parsing and not here\n  const normalizedSchemaMembers: typeof props.schemaType.fieldsets = props.schemaType.fieldsets\n    ? props.schemaType.fieldsets\n    : props.schemaType.fields.map((field) => ({single: true, field}))\n\n  // create a members array for the object\n  const members = normalizedSchemaMembers.flatMap(\n    (fieldSet, index): (ObjectMember | HiddenField)[] => {\n      // \"single\" means not part of a fieldset\n      if (fieldSet.single) {\n        const field = fieldSet.field\n\n        const fieldMember = prepareFieldMember({\n          field: field,\n          parent: {...props, readOnly, groups, selectedGroup},\n          index,\n        })\n\n        return fieldMember ? [fieldMember] : []\n      }\n\n      // it's an actual fieldset\n      const fieldsetFieldNames = fieldSet.fields.map((f) => f.name)\n      const fieldsetHidden = resolveConditionalProperty(fieldSet.hidden, {\n        currentUser: props.currentUser,\n        document: props.document,\n        parent: props.value,\n        value: pick(props.value, fieldsetFieldNames),\n      })\n\n      const fieldsetReadOnly = resolveConditionalProperty(fieldSet.readOnly, {\n        currentUser: props.currentUser,\n        document: props.document,\n        parent: props.value,\n        value: pick(props.value, fieldsetFieldNames),\n      })\n\n      const fieldsetMembers = fieldSet.fields.flatMap(\n        (field): (FieldMember | FieldError | HiddenField)[] => {\n          if (fieldsetHidden) {\n            return [\n              {\n                kind: 'hidden',\n                key: `field-${field.name}`,\n                name: field.name,\n                index: index,\n              },\n            ]\n          }\n          const fieldMember = prepareFieldMember({\n            field: field,\n            parent: {...props, readOnly: readOnly || fieldsetReadOnly, groups, selectedGroup},\n            index,\n          }) as FieldMember | FieldError | HiddenField\n\n          return fieldMember ? [fieldMember] : []\n        },\n      )\n\n      const defaultCollapsedState = getCollapsedWithDefaults(fieldSet.options, props.level)\n\n      const collapsed =\n        (props.collapsedFieldSets?.children || {})[fieldSet.name]?.value ??\n        defaultCollapsedState.collapsed\n\n      return [\n        {\n          kind: 'fieldSet',\n          key: `fieldset-${fieldSet.name}`,\n          _inSelectedGroup: isFieldEnabledByGroupFilter(groups, fieldSet.group, selectedGroup),\n          groups: fieldSet.group ? castArray(fieldSet.group) : [],\n          fieldSet: {\n            path: pathFor(props.path.concat(fieldSet.name)),\n            name: fieldSet.name,\n            title: fieldSet.title,\n            description: fieldSet.description,\n            hidden: false,\n            level: props.level + 1,\n            members: fieldsetMembers.filter(\n              (member): member is FieldMember => member.kind !== 'hidden',\n            ),\n            collapsible: defaultCollapsedState?.collapsible,\n            collapsed,\n            columns: fieldSet?.options?.columns,\n          },\n        },\n      ]\n    },\n  )\n\n  const hasFieldGroups = schemaTypeGroupConfig.length > 0\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n\n  const visibleMembers = members.filter(\n    (member): member is ObjectMember => member.kind !== 'hidden',\n  )\n\n  // Return null here only when enableHiddenCheck, or we end up with array members that have 'item: null' when they\n  // really should not be. One example is when a block object inside the PT-input have a type with one single hidden field.\n  // Then it should still be possible to see the member item, even though all of it's fields are null.\n  if (visibleMembers.length === 0 && enableHiddenCheck) {\n    return null\n  }\n\n  const visibleGroups = hasFieldGroups\n    ? groups.flatMap((group) => {\n        // The \"all fields\" group is always visible\n        if (group.name === ALL_FIELDS_GROUP.name) {\n          return group\n        }\n        const hasVisibleMembers = visibleMembers.some((member) => {\n          if (member.kind === 'error') {\n            return false\n          }\n          if (member.kind === 'field') {\n            return member.groups.includes(group.name)\n          }\n\n          return (\n            member.groups.includes(group.name) ||\n            member.fieldSet.members.some(\n              (fieldsetMember) =>\n                fieldsetMember.kind !== 'error' && fieldsetMember.groups.includes(group.name),\n            )\n          )\n        })\n        return hasVisibleMembers ? group : []\n      })\n    : []\n\n  const filtereredMembers = visibleMembers.flatMap(\n    (member): (FieldError | FieldMember | FieldSetMember)[] => {\n      if (member.kind === 'error') {\n        return [member]\n      }\n      if (member.kind === 'field') {\n        return member.inSelectedGroup ? [member] : []\n      }\n\n      const filteredFieldsetMembers: ObjectMember[] = member.fieldSet.members.filter(\n        (fieldsetMember) => fieldsetMember.kind !== 'field' || fieldsetMember.inSelectedGroup,\n      )\n      return filteredFieldsetMembers.length > 0\n        ? [\n            {\n              ...member,\n              fieldSet: {...member.fieldSet, members: filteredFieldsetMembers},\n            } as FieldSetMember,\n          ]\n        : []\n    },\n  )\n\n  const node = {\n    value: props.value as Record<string, unknown> | undefined,\n    changed: isChangedValue(props.value, props.comparisonValue),\n    schemaType: props.schemaType,\n    readOnly,\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    presence,\n    validation,\n    // this is currently needed by getExpandOperations which needs to know about hidden members\n    // (e.g. members not matching current group filter) in order to determine what to expand\n    members: filtereredMembers,\n    groups: visibleGroups,\n  }\n  Object.defineProperty(node, '_allMembers', {\n    value: members,\n    enumerable: false,\n  })\n  return node\n}\n\nfunction prepareArrayOfPrimitivesInputState<T extends (boolean | string | number)[]>(\n  props: RawState<ArraySchemaType, T>,\n): ArrayOfPrimitivesFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    comparisonValue: props.comparisonValue,\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n\n  const hidden = resolveConditionalProperty(props.schemaType.hidden, conditionalPropertyContext)\n\n  if (hidden) {\n    return null\n  }\n\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  // Todo: improve error handling at the parent level so that the value here is either undefined or an array\n  const items = Array.isArray(props.value) ? props.value : []\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n  const members = items.flatMap((item, index) =>\n    prepareArrayOfPrimitivesMember({arrayItem: item, parent: props, index}),\n  )\n  return {\n    // checks for changes not only on the array itself, but also on any of its items\n    changed: props.changed || members.some((m) => m.kind === 'item' && m.item.changed),\n    value: props.value as T,\n    readOnly,\n    schemaType: props.schemaType,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    validation,\n    presence,\n    members,\n  }\n}\n\nfunction prepareArrayOfObjectsInputState<T extends {_key: string}[]>(\n  props: RawState<ArraySchemaType, T>,\n): ArrayOfObjectsFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n  const hidden = resolveConditionalProperty(props.schemaType.hidden, conditionalPropertyContext)\n\n  if (hidden) {\n    return null\n  }\n\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  // Todo: improve error handling at the parent level so that the value here is either undefined or an array\n  const items = Array.isArray(props.value) ? props.value : []\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n\n  const members = items.flatMap((item, index) =>\n    prepareArrayOfObjectsMember({\n      arrayItem: item,\n      parent: props,\n      index,\n    }),\n  )\n\n  return {\n    // checks for changes not only on the array itself, but also on any of its items\n    changed: props.changed || members.some((m) => m.kind === 'item' && m.item.changed),\n    value: props.value as T,\n    readOnly,\n    schemaType: props.schemaType,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    validation,\n    presence,\n    members,\n  }\n}\n\n/*\n * Takes a field in context of a parent object and returns prepared props for it\n */\nfunction prepareArrayOfObjectsMember(props: {\n  arrayItem: {_key: string}\n  parent: RawState<ArraySchemaType, unknown>\n  index: number\n}): ArrayOfObjectsMember {\n  const {arrayItem, parent, index} = props\n\n  const itemType = getItemType(parent.schemaType, arrayItem) as ObjectSchemaType\n\n  const key = arrayItem._key\n\n  if (!itemType) {\n    const itemTypeName = resolveTypeName(arrayItem)\n    return {\n      kind: 'error',\n      key,\n      index,\n      error: {\n        type: 'INVALID_ITEM_TYPE',\n        resolvedValueType: itemTypeName,\n        value: arrayItem,\n        validTypes: parent.schemaType.of,\n      },\n    }\n  }\n\n  const itemPath = pathFor([...parent.path, {_key: key}])\n  const itemLevel = parent.level + 1\n\n  const conditionalPropertyContext = {\n    value: parent.value,\n    parent: props.parent,\n    document: parent.document,\n    currentUser: parent.currentUser,\n  }\n  const readOnly =\n    parent.readOnly ||\n    resolveConditionalProperty(parent.schemaType.readOnly, conditionalPropertyContext)\n\n  const fieldGroupState = parent.fieldGroupState?.children?.[key]\n  const scopedCollapsedPaths = parent.collapsedPaths?.children?.[key]\n  const scopedCollapsedFieldsets = parent.collapsedFieldSets?.children?.[key]\n  const comparisonValue =\n    (Array.isArray(parent.comparisonValue) &&\n      parent.comparisonValue.find((i) => i._key === arrayItem._key)) ||\n    undefined\n\n  const itemState = prepareObjectInputState(\n    {\n      schemaType: itemType,\n      level: itemLevel,\n      document: parent.document,\n      value: arrayItem,\n      comparisonValue,\n      changed: isChangedValue(arrayItem, comparisonValue),\n      path: itemPath,\n      focusPath: parent.focusPath,\n      openPath: parent.openPath,\n      currentUser: parent.currentUser,\n      collapsedPaths: scopedCollapsedPaths,\n      collapsedFieldSets: scopedCollapsedFieldsets,\n      presence: parent.presence,\n      validation: parent.validation,\n      fieldGroupState,\n      readOnly,\n    },\n    false,\n  ) as ObjectArrayFormNode\n\n  const defaultCollapsedState = getCollapsedWithDefaults(itemType.options, itemLevel)\n  const collapsed = scopedCollapsedPaths?.value ?? defaultCollapsedState.collapsed\n  return {\n    kind: 'item',\n    key,\n    index,\n    open: startsWith(itemPath, parent.openPath),\n    collapsed: collapsed,\n    collapsible: true,\n    parentSchemaType: parent.schemaType,\n    item: itemState,\n  }\n}\n\n/*\n * Takes a field in contet of a parent object and returns prepared props for it\n */\nfunction prepareArrayOfPrimitivesMember(props: {\n  arrayItem: unknown\n  parent: RawState<ArraySchemaType, unknown>\n  index: number\n}): ArrayOfPrimitivesMember {\n  const {arrayItem, parent, index} = props\n  const itemType = getPrimitiveItemType(parent.schemaType, arrayItem)\n\n  const itemPath = pathFor([...parent.path, index])\n  const itemValue = (parent.value as unknown[] | undefined)?.[index] as string | boolean | number\n  const itemComparisonValue = (parent.comparisonValue as unknown[] | undefined)?.[index] as\n    | string\n    | boolean\n    | number\n  const itemLevel = parent.level + 1\n\n  // Best effort attempt to make a stable key for each item in the array\n  // Since items may be reordered and change at any time, there's no way to reliably address each item uniquely\n  // This is a \"best effort\"-attempt at making sure we don't re-use internal state for item inputs\n  // when items are added to or removed from the array\n  const key = `${itemType?.name || 'invalid-type'}-${String(index)}`\n\n  if (!itemType) {\n    return {\n      kind: 'error',\n      key,\n      index,\n      error: {\n        type: 'INVALID_ITEM_TYPE',\n        validTypes: parent.schemaType.of,\n        resolvedValueType: resolveTypeName(itemType),\n        value: itemValue,\n      },\n    }\n  }\n\n  const readOnly =\n    parent.readOnly ||\n    resolveConditionalProperty(itemType.readOnly, {\n      value: itemValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    })\n\n  const item = preparePrimitiveInputState({\n    ...parent,\n    path: itemPath,\n    schemaType: itemType as PrimitiveSchemaType,\n    level: itemLevel,\n    value: itemValue,\n    comparisonValue: itemComparisonValue,\n    readOnly,\n  })\n\n  return {\n    kind: 'item',\n    key,\n    index,\n    parentSchemaType: parent.schemaType,\n    open: isEqual(itemPath, parent.openPath),\n    item,\n  }\n}\n\nfunction preparePrimitiveInputState<SchemaType extends PrimitiveSchemaType>(\n  props: RawState<SchemaType, unknown>,\n): PrimitiveFormNode {\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n  return {\n    schemaType: props.schemaType,\n    changed: isChangedValue(props.value, props.comparisonValue),\n    value: props.value,\n    level: props.level,\n    id: toString(props.path),\n    readOnly: props.readOnly,\n    focused: isEqual(props.path, props.focusPath),\n    path: props.path,\n    presence,\n    validation,\n  } as PrimitiveFormNode\n}\n\n/** @internal */\nexport type FIXME_SanityDocument = Record<string, unknown>\n\n/** @internal */\nexport function prepareFormState<T extends FIXME_SanityDocument>(\n  props: RawState<ObjectSchemaType, T>,\n): ObjectFormNode | null {\n  return prepareObjectInputState(props)\n}\n","/* eslint-disable camelcase */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {pathFor} from '@sanity/util/paths'\nimport {useLayoutEffect, useMemo, useRef} from 'react'\n\nimport {type FormNodePresence} from '../../presence'\nimport {useCurrentUser} from '../../store'\nimport {type FIXME_SanityDocument, prepareFormState} from './formState'\nimport {type ObjectFormNode, type StateTree} from './types'\nimport {type DocumentFormNode} from './types/nodes'\nimport {immutableReconcile} from './utils/immutableReconcile'\n\n/** @internal */\nexport type FormState<\n  T extends {[key in string]: unknown} = {[key in string]: unknown},\n  S extends ObjectSchemaType = ObjectSchemaType,\n> = ObjectFormNode<T, S>\n\n/** @internal */\nexport function useFormState<\n  T extends {[key in string]: unknown} = {[key in string]: unknown},\n  S extends ObjectSchemaType = ObjectSchemaType,\n>(\n  schemaType: ObjectSchemaType,\n  {\n    comparisonValue,\n    value,\n    fieldGroupState,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    openPath,\n    presence,\n    validation,\n    readOnly,\n    changesOpen,\n  }: {\n    fieldGroupState?: StateTree<string> | undefined\n    collapsedFieldSets?: StateTree<boolean> | undefined\n    collapsedPaths?: StateTree<boolean> | undefined\n    value: Partial<FIXME_SanityDocument>\n    comparisonValue: Partial<FIXME_SanityDocument> | null\n    openPath: Path\n    focusPath: Path\n    presence: FormNodePresence[]\n    validation: ValidationMarker[]\n    changesOpen?: boolean\n    readOnly?: boolean\n  },\n): FormState<T, S> | null {\n  // note: feel free to move these state pieces out of this hook\n  const currentUser = useCurrentUser()\n\n  const prev = useRef<DocumentFormNode | null>(null)\n\n  useLayoutEffect(() => {\n    prev.current = null\n  }, [schemaType])\n\n  return useMemo(() => {\n    // console.time('derive form state')\n    const next = prepareFormState({\n      schemaType,\n      document: value,\n      fieldGroupState,\n      collapsedFieldSets,\n      collapsedPaths,\n      value,\n      comparisonValue,\n      focusPath,\n      openPath,\n      readOnly,\n      path: pathFor([]),\n      level: 0,\n      currentUser,\n      presence,\n      validation,\n      changesOpen,\n    }) as ObjectFormNode<T, S> // TODO: remove type cast\n\n    const reconciled = immutableReconcile(prev.current, next)\n    prev.current = reconciled\n    // console.timeEnd('derive form state')\n    return reconciled\n  }, [\n    schemaType,\n    value,\n    fieldGroupState,\n    collapsedFieldSets,\n    collapsedPaths,\n    comparisonValue,\n    focusPath,\n    openPath,\n    readOnly,\n    currentUser,\n    presence,\n    validation,\n    changesOpen,\n  ])\n}\n","import {isArrayOfObjectsSchemaType, isObjectSchemaType} from '@sanity/types'\n\nimport {type ArrayOfObjectsFormNode, type BaseFormNode, type ObjectFormNode} from './nodes'\n\n/** @internal */\nexport function isObjectFormNode(formNode: BaseFormNode): formNode is ObjectFormNode {\n  return isObjectSchemaType(formNode.schemaType)\n}\n/** @internal */\nexport function isArrayOfObjectsFormNode(\n  formNode: BaseFormNode,\n): formNode is ArrayOfObjectsFormNode {\n  return isArrayOfObjectsSchemaType(formNode.schemaType)\n}\n","import {isKeySegment, type Path} from '@sanity/types'\nimport {castArray} from 'lodash'\n\nimport {isMemberArrayOfObjects, isMemberObject} from '../../members/object/fields/asserters'\nimport {ALL_FIELDS_GROUP} from '../constants'\nimport {\n  type ArrayOfObjectsFormNode,\n  type ArrayOfObjectsItemMember,\n  type BaseFormNode,\n  type FieldMember,\n  type FieldSetMember,\n  type ObjectFormNode,\n  type ObjectMember,\n} from '../types'\nimport {isArrayOfObjectsFormNode, isObjectFormNode} from '../types/asserters'\n\n/** @internal */\nexport interface ExpandPathOperation {\n  type: 'expandPath'\n  path: Path\n}\n\n/** @internal */\nexport interface ExpandFieldSetOperation {\n  type: 'expandFieldSet'\n  path: Path\n}\n\n/** @internal */\nexport interface SetActiveGroupOperation {\n  type: 'setSelectedGroup'\n  path: Path\n  groupName: string\n}\n\n/** @internal */\nexport type ExpandOperation =\n  | ExpandPathOperation\n  | ExpandFieldSetOperation\n  | SetActiveGroupOperation\n\nfunction hasAllMembers<T extends BaseFormNode>(value: T): value is HasAllMembers<T> {\n  return '_allMembers' in value && Array.isArray(value._allMembers)\n}\n\n/**\n * This takes a form state and returns a list of operations required to open a node at a particular path\n * @param node - The base form node (i.e. the form state node for the _document_)\n * @param path - The path to open\n *\n * @internal\n */\nexport function getExpandOperations(node: BaseFormNode, path: Path): ExpandOperation[] {\n  return [\n    // make sure to expand all intermediate paths\n    ...path.map((p, i): ExpandPathOperation => ({type: 'expandPath', path: path.slice(0, i + 1)})),\n    // make sure to expand all fieldsets and selects the groups that includes the intermediate nodes\n    ...getFieldsetAndFieldGroupOperations(node, path),\n  ]\n}\nfunction getFieldsetAndFieldGroupOperations(node: BaseFormNode, path: Path) {\n  if (path.length === 0) {\n    return []\n  }\n\n  if (isObjectFormNode(node) && hasAllMembers(node)) {\n    return getObjectFieldsetAndFieldGroupOperations(node, path)\n  }\n  if (isArrayOfObjectsFormNode(node)) {\n    return getArrayFieldsetAndFieldGroupOperations(node, path)\n  }\n  return []\n}\n\ntype HasAllMembers<T> = T & {_allMembers: ObjectMember[]}\n\nfunction getObjectFieldsetAndFieldGroupOperations(\n  node: HasAllMembers<ObjectFormNode>,\n  path: Path,\n): (ExpandFieldSetOperation | SetActiveGroupOperation)[] {\n  if (path.length === 0) {\n    return []\n  }\n  // extract the field name for the current level we're looking at\n  const [fieldName, ...tail] = path\n\n  const fieldsetMember = node._allMembers.find(\n    (member): member is FieldSetMember =>\n      member.kind === 'fieldSet' &&\n      member.fieldSet.members.some(\n        (field): field is FieldMember => field.kind === 'field' && field.name === fieldName,\n      ),\n  )\n\n  // if we found the field in a fieldset we need to recurse into this fieldset's members, otherwise we can use the node's members\n  const members = fieldsetMember\n    ? fieldsetMember.fieldSet.members\n    : // Note: we need to use the internal `_allMembers` array here instead of members since hidden/collapsed members are omitted from members\n      node._allMembers\n\n  // look for the field inside the members array\n  const fieldMember = members.find(\n    (member): member is FieldMember =>\n      member !== null && member.kind === 'field' && member.name === fieldName,\n  )\n\n  // Group handling\n  const schemaField = node.schemaType.fields.find((field) => field.name === fieldName)\n  const selectedGroupName = node.groups.find((group) => group.selected)?.name\n  const defaultGroupName = (node.schemaType.groups || []).find((group) => group.default)?.name\n  const inSelectedGroup =\n    selectedGroupName &&\n    (selectedGroupName === ALL_FIELDS_GROUP.name ||\n      (schemaField && castArray(schemaField.group).includes(selectedGroupName)))\n\n  const ops: (ExpandFieldSetOperation | SetActiveGroupOperation)[] = []\n\n  if (!inSelectedGroup) {\n    ops.push({\n      type: 'setSelectedGroup',\n      path: node.path,\n      groupName: defaultGroupName || ALL_FIELDS_GROUP.name,\n    })\n  }\n\n  if (fieldsetMember) {\n    // the field is inside a fieldset, make sure we expand it too\n    ops.push({type: 'expandFieldSet', path: fieldsetMember.fieldSet.path})\n  }\n\n  if (fieldMember && hasAllMembers(fieldMember.field)) {\n    if (isMemberArrayOfObjects(fieldMember)) {\n      ops.push(...getArrayFieldsetAndFieldGroupOperations(fieldMember.field, tail))\n    } else if (isMemberObject(fieldMember)) {\n      ops.push(...getObjectFieldsetAndFieldGroupOperations(fieldMember.field, tail))\n    }\n  }\n\n  return ops\n}\n\nfunction getArrayFieldsetAndFieldGroupOperations(\n  state: ArrayOfObjectsFormNode,\n  path: Path,\n): (ExpandFieldSetOperation | SetActiveGroupOperation)[] {\n  if (path.length === 0) {\n    return []\n  }\n\n  // start at the root and make sure all groups/paths are expanded/activated along the way\n  const [segment, ...rest] = path\n  if (!isKeySegment(segment)) {\n    throw new Error('Expected path segment to be an object with a _key property')\n  }\n\n  const foundMember = state.members.find(\n    (member): member is ArrayOfObjectsItemMember => member.key === segment._key,\n  )\n\n  if (!foundMember) {\n    // tried to open a member that does not exist in the form state - it's likely hidden\n    return []\n  }\n  return getFieldsetAndFieldGroupOperations(foundMember.item, rest)\n}\n","import {arrayToJSONMatchPath} from '@sanity/mutator'\nimport {type Path, type PathSegment} from '@sanity/types'\n\nconst IS_NUMERIC = /^\\d+$/\n\nfunction unquote(str: string) {\n  return str.replace(/^['\"]/, '').replace(/['\"]$/, '')\n}\n\nfunction splitAttr(segment: string) {\n  const [attr, key] = segment.split('==')\n  return {[attr]: unquote(key)}\n}\n\nfunction coerce(segment: string): PathSegment {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment\n}\n\nfunction parseGradientPath(focusPathStr: string): Path {\n  return focusPathStr\n    .split(/[[.\\]]/g)\n    .filter(Boolean)\n    .map((seg) => (seg.includes('==') ? splitAttr(seg) : coerce(seg))) as Path\n}\n\n/**\n * @internal\n */\nexport function encodePath(formBuilderPath: Path): string {\n  return arrayToJSONMatchPath(formBuilderPath)\n}\n\n/**\n * @internal\n */\nexport function decodePath(gradientPath: string): Path {\n  return parseGradientPath(gradientPath)\n}\n","import {arrayToJSONMatchPath} from '@sanity/mutator'\nimport {flatten} from 'lodash'\n\nimport {SANITY_PATCH_TYPE} from '../patch'\nimport {type FormPatch, type FormPatchOrigin} from '../patch/types'\nimport {decodePath} from './path'\n\n/**\n * @internal\n */\nexport type MutationPatch = Record<string, any> // @todo: complete this typing\n\n/**\n * @internal\n */\nexport function toMutationPatches(patches: FormPatch[]): MutationPatch[] {\n  return patches.map(toMutationPatch)\n}\n\n/**\n * @internal\n */\nexport function fromMutationPatches(\n  origin: FormPatchOrigin,\n  patches: MutationPatch[],\n): FormPatch[] {\n  return flatten(patches.map((patch) => toFormBuilderPatches(origin, patch)))\n}\n\nconst notIn = (values: unknown[]) => (value: unknown) => !values.includes(value)\n\nfunction toFormBuilderPatches(origin: FormPatchOrigin, patch: MutationPatch): FormPatch[] {\n  return flatten(\n    Object.keys(patch)\n      .filter(notIn(['id', 'ifRevisionID', 'query']))\n      .map((type) => {\n        if (type === 'unset') {\n          return patch.unset.map((path: any) => {\n            return {\n              type: 'unset',\n              path: decodePath(path),\n              origin,\n            }\n          })\n        }\n        if (type === 'insert') {\n          const position = 'before' in patch.insert ? 'before' : 'after'\n          return {\n            type: 'insert',\n            position: position,\n            path: decodePath(patch.insert[position]),\n            items: patch.insert.items,\n            origin,\n          }\n        }\n        return Object.keys(patch[type])\n          .map((gradientPath) => {\n            if (type === 'set') {\n              return {\n                type: 'set',\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'inc' || type === 'dec') {\n              return {\n                type: type,\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'setIfMissing') {\n              return {\n                type: 'setIfMissing',\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'diffMatchPatch') {\n              return {\n                type,\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            // eslint-disable-next-line no-console\n            console.warn(new Error(`Unsupported patch type: ${type}`))\n            return null\n          })\n          .filter(Boolean)\n      }),\n  )\n}\n\nfunction toMutationPatch(patch: FormPatch): MutationPatch {\n  if (patch.patchType !== SANITY_PATCH_TYPE && patch.type) {\n    throw new Error(\n      `Patch is missing \"patchType\" - import and use \"${patch.type}()\" from \"sanity/form\"`,\n    )\n  } else if (patch.patchType !== SANITY_PATCH_TYPE) {\n    throw new Error(\n      `Patch is missing \"patchType\" - import and use the patch method helpers from \"sanity/form\"`,\n    )\n  }\n\n  const matchPath = arrayToJSONMatchPath(patch.path || [])\n  if (patch.type === 'insert') {\n    const {position, items} = patch\n    return {\n      insert: {\n        [position]: matchPath,\n        items: items,\n      },\n    }\n  }\n\n  if (patch.type === 'unset') {\n    return {\n      unset: [matchPath],\n    }\n  }\n\n  if (!patch.type) {\n    throw new Error(`Missing patch type in patch ${JSON.stringify(patch)}`)\n  }\n  if (matchPath) {\n    return {\n      [patch.type]: {\n        [matchPath]: patch.value,\n      },\n    }\n  }\n  return {\n    [patch.type]: patch.value,\n  }\n}\n"],"names":["useRef","useContext","ConnectorContext","useState","useCallback","useReporter","PathUtils","deepCompare","jsx","useMemo","throttle","ScrollContext","useEffect","Fragment","isKeyedObject","resizeObserver","isNonNullable","useReportedValues","sortBy","SvgWrapper","jsxs","Connector","DEBUG_LAYER_BOUNDS","Tracker","ScrollContainer","Badge","EMPTY_ARRAY","isString","client","of","useUserColorManager","useTranslation","color","getAnnotationColor","Flex","DiffTooltip","Checkbox","Box","FromToArrow","Preview","DiffFromTo","SlugPreview","StringPreview","DatetimeFieldDiff","pathToString","HoveredFieldContext","FormFieldPresenceContext","ArrayOfObjectsItem","MemberItemError","ReviewChangesContext","createElement","defaultResolveAnnotationComponent","defaultResolveBlockComponent","defaultResolveInlineBlockComponent","defaultResolveFieldComponent","defaultResolveInputComponent","defaultResolveItemComponent","Text","ArrayOfObjectsFunctions","DefaultMarkers","FormBuilderContext","FormCallbacksProvider","DocumentIdProvider","PresenceProvider","ValidationProvider","useSource","useInputComponent","useFieldComponent","usePreviewComponent","useItemComponent","useBlockComponent","useInlineBlockComponent","useAnnotationComponent","PreviewLoader","PatchEvent","GetFormValueProvider","FormValueProvider","DocumentFieldActionsProvider","memoize","memoizedPair","switchMap","merge","memoizeKeyGen","isBuilder","validateTemplates","useDocumentStore","getPublishedId","useSyncExternalStoreWithSelector","useHistoryStore","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","BehaviorSubject","tap","map","distinctUntilChanged","deepEquals","catchError","useProjectStore","prepareConfig","combineLatest","firstValueFrom","useWorkspace","AddonDatasetContext","mix","parseToRgb","rgb","getLuminance","parseColor","rgbToHex","multiply","screen","createColorTheme","skeletonFrom","rgba","bg","hues","defaults","black","white","blue","gray","red","green","yellow","globalStyles","StudioProvider","GlobalStyle","StudioLayout","createRoot","StrictMode","INITIAL","useMemoObservable","timer","mapTo","startWith","share","take","skip","debounce","useCurrentLocale","useListFormat","intlCache","useRelativeTime","useUserStore","forkJoin","mergeMap","grantsPermissionOn","concat","cancelIdleCallback","requestIdleCallback","HookStateContainer","UIHotkeys","Button","IntentLink","useReferringDocuments","ZIndexContext","TextInput","isKeySegment","resolveTypeName","castArray","isRecord","_isEqual","pathFor","getFieldLevel","isObjectSchemaType","startsWith","isArraySchemaType","isArrayOfObjectsSchemaType","_a","pick","isEqual","toString","trimChildPath","useCurrentUser","useLayoutEffect","immutableReconcile","isMemberArrayOfObjects","isMemberObject","arrayToJSONMatchPath","flatten","SANITY_PATCH_TYPE"],"mappings":"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"}