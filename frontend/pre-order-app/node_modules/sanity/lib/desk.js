"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var StructureToolProvider = require("./_chunks-cjs/StructureToolProvider.js");
require("react/jsx-runtime");
require("@sanity/icons");
require("@sanity/ui");
require("react");
require("./_chunks-cjs/getJsonStream.js");
require("sanity");
require("@sanity/telemetry/react");
require("lodash/template.js");
require("lodash/isEqual.js");
require("@sanity/uuid");
require("sanity/router");
require("react-rx");
require("rxjs");
require("@sanity/types");
require("@sanity/util/paths");
require("lodash/omit.js");
require("lodash/isNumber.js");
require("lodash/isString.js");
require("lodash/throttle.js");
require("scroll-into-view-if-needed");
require("lodash/findIndex.js");
require("@sanity/diff-match-patch");
require("@portabletext/react");
const ComponentBuilder = StructureToolProvider.ComponentBuilder, ComponentViewBuilder = StructureToolProvider.ComponentViewBuilder, ConfirmDeleteDialog = StructureToolProvider.ConfirmDeleteDialogContainer, DEFAULT_INTENT_HANDLER = StructureToolProvider.DEFAULT_INTENT_HANDLER, DeskToolProvider = StructureToolProvider.StructureToolProvider, DocumentBuilder = StructureToolProvider.DocumentBuilder, DocumentInspectorHeader = StructureToolProvider.DocumentInspectorHeader, DocumentListBuilder = StructureToolProvider.DocumentListBuilder, DocumentListItemBuilder = StructureToolProvider.DocumentListItemBuilder, DocumentListPane = StructureToolProvider.DocumentListPane, DocumentPane = StructureToolProvider.DocumentPane, DocumentPaneProvider = StructureToolProvider.DocumentPaneProvider, DocumentTypeListBuilder = StructureToolProvider.DocumentTypeListBuilder, FormViewBuilder = StructureToolProvider.FormViewBuilder, GenericListBuilder = StructureToolProvider.GenericListBuilder, GenericViewBuilder = StructureToolProvider.GenericViewBuilder, HELP_URL = StructureToolProvider.HELP_URL, InitialValueTemplateItemBuilder = StructureToolProvider.InitialValueTemplateItemBuilder, ListBuilder = StructureToolProvider.ListBuilder, ListItemBuilder = StructureToolProvider.ListItemBuilder, MenuItemBuilder = StructureToolProvider.MenuItemBuilder, MenuItemGroupBuilder = StructureToolProvider.MenuItemGroupBuilder, PaneLayout = StructureToolProvider.PaneLayout, PaneRouterContext = StructureToolProvider.PaneRouterContext, SerializeError = StructureToolProvider.SerializeError, component = StructureToolProvider.component, createStructureBuilder = StructureToolProvider.createStructureBuilder, defaultInitialValueTemplateItems = StructureToolProvider.defaultInitialValueTemplateItems, defaultIntentChecker = StructureToolProvider.defaultIntentChecker, deskTool = StructureToolProvider.structureTool, documentFromEditor = StructureToolProvider.documentFromEditor, documentFromEditorWithInitialValue = StructureToolProvider.documentFromEditorWithInitialValue, form = StructureToolProvider.form, getOrderingMenuItem = StructureToolProvider.getOrderingMenuItem, getOrderingMenuItemsForSchemaType = StructureToolProvider.getOrderingMenuItemsForSchemaType, getTypeNamesFromFilter = StructureToolProvider.getTypeNamesFromFilter, isDocumentListItem = StructureToolProvider.isDocumentListItem, maybeSerializeInitialValueTemplateItem = StructureToolProvider.maybeSerializeInitialValueTemplateItem, maybeSerializeMenuItem = StructureToolProvider.maybeSerializeMenuItem, maybeSerializeMenuItemGroup = StructureToolProvider.maybeSerializeMenuItemGroup, maybeSerializeView = StructureToolProvider.maybeSerializeView, menuItemsFromInitialValueTemplateItems = StructureToolProvider.menuItemsFromInitialValueTemplateItems, shallowIntentChecker = StructureToolProvider.shallowIntentChecker, structureLocaleNamespace = StructureToolProvider.structureLocaleNamespace, useDeskTool = StructureToolProvider.useStructureTool, useDocumentPane = StructureToolProvider.useDocumentPane, useDocumentTitle = StructureToolProvider.useDocumentTitle, usePaneRouter = StructureToolProvider.usePaneRouter;
exports.ComponentBuilder = ComponentBuilder;
exports.ComponentViewBuilder = ComponentViewBuilder;
exports.ConfirmDeleteDialog = ConfirmDeleteDialog;
exports.DEFAULT_INTENT_HANDLER = DEFAULT_INTENT_HANDLER;
exports.DeskToolProvider = DeskToolProvider;
exports.DocumentBuilder = DocumentBuilder;
exports.DocumentInspectorHeader = DocumentInspectorHeader;
exports.DocumentListBuilder = DocumentListBuilder;
exports.DocumentListItemBuilder = DocumentListItemBuilder;
exports.DocumentListPane = DocumentListPane;
exports.DocumentPane = DocumentPane;
exports.DocumentPaneProvider = DocumentPaneProvider;
exports.DocumentTypeListBuilder = DocumentTypeListBuilder;
exports.FormViewBuilder = FormViewBuilder;
exports.GenericListBuilder = GenericListBuilder;
exports.GenericViewBuilder = GenericViewBuilder;
exports.HELP_URL = HELP_URL;
exports.InitialValueTemplateItemBuilder = InitialValueTemplateItemBuilder;
exports.ListBuilder = ListBuilder;
exports.ListItemBuilder = ListItemBuilder;
exports.MenuItemBuilder = MenuItemBuilder;
exports.MenuItemGroupBuilder = MenuItemGroupBuilder;
exports.PaneLayout = PaneLayout;
exports.PaneRouterContext = PaneRouterContext;
exports.SerializeError = SerializeError;
exports.component = component;
exports.createStructureBuilder = createStructureBuilder;
exports.defaultInitialValueTemplateItems = defaultInitialValueTemplateItems;
exports.defaultIntentChecker = defaultIntentChecker;
exports.deskTool = deskTool;
exports.documentFromEditor = documentFromEditor;
exports.documentFromEditorWithInitialValue = documentFromEditorWithInitialValue;
exports.form = form;
exports.getOrderingMenuItem = getOrderingMenuItem;
exports.getOrderingMenuItemsForSchemaType = getOrderingMenuItemsForSchemaType;
exports.getTypeNamesFromFilter = getTypeNamesFromFilter;
exports.isDocumentListItem = isDocumentListItem;
exports.maybeSerializeInitialValueTemplateItem = maybeSerializeInitialValueTemplateItem;
exports.maybeSerializeMenuItem = maybeSerializeMenuItem;
exports.maybeSerializeMenuItemGroup = maybeSerializeMenuItemGroup;
exports.maybeSerializeView = maybeSerializeView;
exports.menuItemsFromInitialValueTemplateItems = menuItemsFromInitialValueTemplateItems;
exports.shallowIntentChecker = shallowIntentChecker;
exports.structureLocaleNamespace = structureLocaleNamespace;
exports.useDeskTool = useDeskTool;
exports.useDocumentPane = useDocumentPane;
exports.useDocumentTitle = useDocumentTitle;
exports.usePaneRouter = usePaneRouter;
//# sourceMappingURL=desk.js.map
